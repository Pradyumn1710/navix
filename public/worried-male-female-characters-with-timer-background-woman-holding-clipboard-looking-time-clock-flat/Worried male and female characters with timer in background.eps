%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Adobe Illustrator Artwork
%%Creator: Adobe Illustrator(R) 25.4
%%For: Виталий Викторович
%%CreationDate: 12/16/2021
%%BoundingBox: 0 0 2600 2000
%%HiResBoundingBox: 0 0 2600 2000
%%CropBox: 0 0 2600 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 25.4.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 25.4.1 x498 R agm 4.7767 ct 6.0%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.0-c000 79.dcf59f3, 2021/07/24-00:42:40        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
   dc:format="application/postscript"
   xmp:CreatorTool="Adobe Illustrator 24.1 (Windows)"
   xmp:CreateDate="2021-12-13T13:31:23+03:00"
   xmp:ModifyDate="2021-12-13T13:31:23+03:00"
   xmp:MetadataDate="2022-01-04T12:01:37+03:00"
   xmpMM:OriginalDocumentID="uuid:C1BCCE1871B8DB11993190FCD52B4E9F"
   xmpMM:DocumentID="xmp.did:2c851deb-31b6-6746-8f01-ce3e7e1481a9"
   xmpMM:InstanceID="xmp.iid:a9fecf5d-52fc-a946-a2ba-2893ac72f8ce"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Mobile"
   illustrator:CreatorSubTool="Adobe Illustrator"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:HasVisibleOverprint="False"
   pdf:Producer="Adobe PDF library 15.00"
   pdfx:CreatorVersion="21.0.0">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Worried male and female characters with timer in background</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Worried male and female characters with timer in background. Woman holding clipboard looking at time clock flat vector illustration. Time management, deadline, competition, countdown concept</rdf:li>
    </rdf:Alt>
   </dc:description>
   <dc:subject>
    <rdf:Bag>
     <rdf:li>time</rdf:li>
     <rdf:li>clock</rdf:li>
     <rdf:li>illustration</rdf:li>
     <rdf:li>vector</rdf:li>
     <rdf:li>flat</rdf:li>
     <rdf:li>watch</rdf:li>
     <rdf:li>holding</rdf:li>
     <rdf:li>hand</rdf:li>
     <rdf:li>test</rdf:li>
     <rdf:li>abstract</rdf:li>
     <rdf:li>countdown</rdf:li>
     <rdf:li>interval</rdf:li>
     <rdf:li>speed</rdf:li>
     <rdf:li>stopwatch</rdf:li>
     <rdf:li>timer</rdf:li>
     <rdf:li>training</rdf:li>
     <rdf:li>business</rdf:li>
     <rdf:li>cartoon</rdf:li>
     <rdf:li>competition</rdf:li>
     <rdf:li>concept</rdf:li>
     <rdf:li>control</rdf:li>
     <rdf:li>deadline</rdf:li>
     <rdf:li>hour</rdf:li>
     <rdf:li>management</rdf:li>
     <rdf:li>quick</rdf:li>
     <rdf:li>sport</rdf:li>
     <rdf:li>start</rdf:li>
     <rdf:li>stop</rdf:li>
     <rdf:li>express</rdf:li>
     <rdf:li>service</rdf:li>
     <rdf:li>male</rdf:li>
     <rdf:li>female</rdf:li>
     <rdf:li>character</rdf:li>
     <rdf:li>expressing</rdf:li>
     <rdf:li>fast</rdf:li>
     <rdf:li>reaction</rdf:li>
     <rdf:li>background</rdf:li>
     <rdf:li>clipboard</rdf:li>
     <rdf:li>looking</rdf:li>
     <rdf:li>counting</rdf:li>
     <rdf:li>managing</rdf:li>
     <rdf:li>controlling</rdf:li>
     <rdf:li>finish</rdf:li>
     <rdf:li>competing</rdf:li>
     <rdf:li>motivation</rdf:li>
    </rdf:Bag>
   </dc:subject>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="200"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEAtAC0AAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAAtAAAAAEA&#xA;AQC0AAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgAyAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUNLqenQmkt1Ejfyl1r91csGKR5&#xA;AsDOI6rF1rSSaC8hr7uo/WcPgT7ivix70VHLFKvKN1dfFSCPwysgjmyBtdgS7FXYqtlljhieWQ8Y&#xA;41LO3gAKnCASaCCaefazrEt5qLXEMjrEtBAK8SoAHYHxzc4cIjGjzddkycUrC628x6rHepcS3DyI&#xA;CPUiJ+Er3AXoMEtNAxoBY5pA3bNdK1W31K2M0IK8TxdG6g9c1eXEYGi5+PIJCwjMqZuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVKNa8x2unViQetdf77B2X3Y/wAMycGmM9+QacuY&#xA;R97Dr/WtSvmPrzHgf91L8KfcOv05s8eCMOQcKeWUuaBy1rdiq+KWWJw8TtG46MpIP3jAQDzUGk60&#xA;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&#xA;xV2KuxV2KuxV2KuxV//Z"/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="uuid:0f17c881-e4ea-4243-a874-5c0001aed754"
    stRef:documentID="xmp.did:88576851-bc52-8f40-8186-48c2b6435451"
    stRef:originalDocumentID="uuid:C1BCCE1871B8DB11993190FCD52B4E9F"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:88576851-bc52-8f40-8186-48c2b6435451"
      stEvt:when="2021-12-08T14:27:30+03:00"
      stEvt:softwareAgent="Adobe Illustrator 24.1 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:2c851deb-31b6-6746-8f01-ce3e7e1481a9"
      stEvt:when="2021-12-13T13:31:23+03:00"
      stEvt:softwareAgent="Adobe Illustrator 24.1 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:a9fecf5d-52fc-a946-a2ba-2893ac72f8ce"
      stEvt:when="2022-01-04T12:01:37+03:00"
      stEvt:softwareAgent="Adobe Bridge 2021 (Windows)"
      stEvt:changed="/metadata"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="2600.000000"
    stDim:h="2000.000000"
    stDim:unit="Pixels"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="Р‘РµР»С‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="Р§РµСЂРЅС‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="RGB РєСЂР°СЃРЅС‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="RGB Р¶РµР»С‚С‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="RGB Р·РµР»РµРЅС‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="255"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="RGB РіРѕР»СѓР±РѕР№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="RGB СЃРёРЅРёР№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="RGB РїСѓСЂРїСѓСЂРЅС‹Р№"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="0"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="R=193 G=39 B=45"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="193"
         xmpG:green="39"
         xmpG:blue="45"/>
        <rdf:li
         xmpG:swatchName="R=237 G=28 B=36"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="237"
         xmpG:green="28"
         xmpG:blue="36"/>
        <rdf:li
         xmpG:swatchName="R=241 G=90 B=36"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="241"
         xmpG:green="90"
         xmpG:blue="36"/>
        <rdf:li
         xmpG:swatchName="R=247 G=147 B=30"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="247"
         xmpG:green="147"
         xmpG:blue="30"/>
        <rdf:li
         xmpG:swatchName="R=251 G=176 B=59"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="251"
         xmpG:green="176"
         xmpG:blue="59"/>
        <rdf:li
         xmpG:swatchName="R=252 G=238 B=33"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="252"
         xmpG:green="238"
         xmpG:blue="33"/>
        <rdf:li
         xmpG:swatchName="R=217 G=224 B=33"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="217"
         xmpG:green="224"
         xmpG:blue="33"/>
        <rdf:li
         xmpG:swatchName="R=140 G=198 B=63"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="140"
         xmpG:green="198"
         xmpG:blue="63"/>
        <rdf:li
         xmpG:swatchName="R=57 G=181 B=74"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="57"
         xmpG:green="181"
         xmpG:blue="74"/>
        <rdf:li
         xmpG:swatchName="R=0 G=146 B=69"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="146"
         xmpG:blue="69"/>
        <rdf:li
         xmpG:swatchName="R=0 G=104 B=55"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="104"
         xmpG:blue="55"/>
        <rdf:li
         xmpG:swatchName="R=34 G=181 B=115"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="34"
         xmpG:green="181"
         xmpG:blue="115"/>
        <rdf:li
         xmpG:swatchName="R=0 G=169 B=157"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="169"
         xmpG:blue="157"/>
        <rdf:li
         xmpG:swatchName="R=41 G=171 B=226"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="41"
         xmpG:green="171"
         xmpG:blue="226"/>
        <rdf:li
         xmpG:swatchName="R=0 G=113 B=188"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="113"
         xmpG:blue="188"/>
        <rdf:li
         xmpG:swatchName="R=46 G=49 B=146"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="46"
         xmpG:green="49"
         xmpG:blue="146"/>
        <rdf:li
         xmpG:swatchName="R=27 G=20 B=100"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="27"
         xmpG:green="20"
         xmpG:blue="100"/>
        <rdf:li
         xmpG:swatchName="R=102 G=45 B=145"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="102"
         xmpG:green="45"
         xmpG:blue="145"/>
        <rdf:li
         xmpG:swatchName="R=147 G=39 B=143"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="147"
         xmpG:green="39"
         xmpG:blue="143"/>
        <rdf:li
         xmpG:swatchName="R=158 G=0 B=93"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="158"
         xmpG:green="0"
         xmpG:blue="93"/>
        <rdf:li
         xmpG:swatchName="R=212 G=20 B=90"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="212"
         xmpG:green="20"
         xmpG:blue="90"/>
        <rdf:li
         xmpG:swatchName="R=237 G=30 B=121"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="237"
         xmpG:green="30"
         xmpG:blue="121"/>
        <rdf:li
         xmpG:swatchName="R=199 G=178 B=153"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="199"
         xmpG:green="178"
         xmpG:blue="153"/>
        <rdf:li
         xmpG:swatchName="R=153 G=134 B=117"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="153"
         xmpG:green="134"
         xmpG:blue="117"/>
        <rdf:li
         xmpG:swatchName="R=115 G=99 B=87"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="115"
         xmpG:green="99"
         xmpG:blue="87"/>
        <rdf:li
         xmpG:swatchName="R=83 G=71 B=65"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="83"
         xmpG:green="71"
         xmpG:blue="65"/>
        <rdf:li
         xmpG:swatchName="R=198 G=156 B=109"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="198"
         xmpG:green="156"
         xmpG:blue="109"/>
        <rdf:li
         xmpG:swatchName="R=166 G=124 B=82"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="166"
         xmpG:green="124"
         xmpG:blue="82"/>
        <rdf:li
         xmpG:swatchName="R=140 G=98 B=57"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="140"
         xmpG:green="98"
         xmpG:blue="57"/>
        <rdf:li
         xmpG:swatchName="R=117 G=76 B=36"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="117"
         xmpG:green="76"
         xmpG:blue="36"/>
        <rdf:li
         xmpG:swatchName="R=96 G=56 B=19"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="96"
         xmpG:green="56"
         xmpG:blue="19"/>
        <rdf:li
         xmpG:swatchName="R=66 G=33 B=11"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="66"
         xmpG:green="33"
         xmpG:blue="11"/>
        <rdf:li
         xmpG:swatchName="R=0 G=0 B=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="R=26 G=26 B=26"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="26"
         xmpG:green="26"
         xmpG:blue="26"/>
        <rdf:li
         xmpG:swatchName="R=51 G=51 B=51"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="51"
         xmpG:green="51"
         xmpG:blue="51"/>
        <rdf:li
         xmpG:swatchName="R=77 G=77 B=77"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="77"
         xmpG:green="77"
         xmpG:blue="77"/>
        <rdf:li
         xmpG:swatchName="R=102 G=102 B=102"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="102"
         xmpG:green="102"
         xmpG:blue="102"/>
        <rdf:li
         xmpG:swatchName="R=128 G=128 B=128"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="128"
         xmpG:green="128"
         xmpG:blue="128"/>
        <rdf:li
         xmpG:swatchName="R=153 G=153 B=153"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="153"
         xmpG:green="153"
         xmpG:blue="153"/>
        <rdf:li
         xmpG:swatchName="R=179 G=179 B=179"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="179"
         xmpG:green="179"
         xmpG:blue="179"/>
        <rdf:li
         xmpG:swatchName="R=204 G=204 B=204"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="204"
         xmpG:green="204"
         xmpG:blue="204"/>
        <rdf:li
         xmpG:swatchName="R=230 G=230 B=230"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="230"
         xmpG:green="230"
         xmpG:blue="230"/>
        <rdf:li
         xmpG:swatchName="R=242 G=242 B=242"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="242"
         xmpG:green="242"
         xmpG:blue="242"/>
        <rdf:li
         xmpG:swatchName="R=136 G=168 B=13"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="136"
         xmpG:green="168"
         xmpG:blue="13"/>
        <rdf:li
         xmpG:swatchName="R=127 G=71 B=221"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="127"
         xmpG:green="71"
         xmpG:blue="221"/>
        <rdf:li
         xmpG:swatchName="R=251 G=174 B=23"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="251"
         xmpG:green="174"
         xmpG:blue="23"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                          
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
2600 2000 li
2600 0 li
cp
clp
2600 2000 mo
0 2000 li
0 0 li
2600 0 li
2600 2000 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
307.087 1675.08 mo
307.087 1675.08 -37.1398 1290.95 373.809 1047.14 cv
652.569 881.757 495.029 551.888 620.325 378.323 cv
747.223 202.537 981.257 184.855 1194.49 324.235 cv
1340.13 419.433 1476.6 592.495 1729.13 392.885 cv
2012.05 169.253 2321.53 362.652 2434.35 743.417 cv
2567.49 1192.76 2284.57 1676.43 2284.73 1676.51 cv
307.087 1675.08 li
cp
.635294 .764706 .94902 rgb
f
229.092 1589.37 mo
229.092 1589.37 68.0977 1350.71 121.005 1310.38 cv
173.913 1270.05 341.741 1486.25 341.741 1486.25 cv
341.741 1486.25 242.95 1268.01 263.639 1143.66 cv
284.328 1019.32 444.23 1310.74 482.745 1453.72 cv
482.745 1453.72 473.029 1252.29 565.005 1170.31 cv
656.98 1088.33 623.242 1499.73 623.242 1499.73 cv
623.242 1499.73 681 1262.9 743.75 1251.53 cv
806.501 1240.15 724.936 1587.51 724.936 1587.51 cv
229.092 1589.37 li
cp
.376471 .74902 .376471 rgb
f
157.589 1358.26 mo
157.268 1357.8 156.787 1357.49 156.234 1357.39 cv
155.684 1357.29 155.127 1357.41 154.669 1357.73 cv
153.721 1358.39 153.487 1359.7 154.146 1360.65 cv
314.287 1590.82 li
314.678 1591.39 315.322 1591.72 316.009 1591.72 cv
316.441 1591.72 316.856 1591.59 317.206 1591.35 cv
317.666 1591.03 317.974 1590.55 318.072 1590 cv
318.171 1589.45 318.05 1588.89 317.73 1588.43 cv
157.589 1358.26 li
cp
.133333 .658824 .133333 rgb
f
298.93 1164.53 mo
298.537 1163.44 297.331 1162.89 296.241 1163.27 cv
295.155 1163.67 294.594 1164.88 294.989 1165.96 cv
449.118 1589.25 li
449.417 1590.08 450.209 1590.64 451.089 1590.64 cv
451.332 1590.64 451.573 1590.59 451.805 1590.51 cv
452.332 1590.32 452.752 1589.93 452.989 1589.43 cv
453.225 1588.92 453.25 1588.35 453.059 1587.82 cv
298.93 1164.53 li
cp
f
582.802 1218.04 mo
581.742 1217.83 580.686 1218.52 580.462 1219.58 cv
580.016 1221.71 535.671 1434 524.807 1588.12 cv
524.77 1588.65 524.942 1589.16 525.29 1589.56 cv
525.635 1589.96 526.12 1590.2 526.625 1590.23 cv
526.788 1590.24 li
527.825 1590.24 528.694 1589.43 528.766 1588.39 cv
539.557 1435.32 583.899 1222.53 584.346 1220.39 cv
584.455 1219.88 584.355 1219.35 584.065 1218.9 cv
583.774 1218.46 583.327 1218.15 582.802 1218.04 cv
cp
f
733.85 1295.39 mo
733.592 1294.93 733.17 1294.59 732.662 1294.45 cv
731.606 1294.14 730.509 1294.76 730.207 1295.81 cv
729.571 1298.03 666.389 1519.04 651.898 1587.85 cv
651.789 1588.37 651.888 1588.9 652.178 1589.34 cv
652.467 1589.79 652.912 1590.09 653.422 1590.2 cv
653.56 1590.23 653.701 1590.24 653.841 1590.24 cv
654.773 1590.24 655.59 1589.58 655.782 1588.67 cv
670.264 1519.9 733.387 1299.13 734.023 1296.9 cv
734.169 1296.39 734.107 1295.86 733.85 1295.39 cv
cp
f
2374.75 1589.37 mo
2374.75 1589.37 2535.75 1350.71 2482.84 1310.38 cv
2429.93 1270.05 2262.1 1486.25 2262.1 1486.25 cv
2262.1 1486.25 2360.89 1268.01 2340.2 1143.66 cv
2319.51 1019.32 2159.61 1310.74 2121.1 1453.72 cv
2121.1 1453.72 2130.81 1252.29 2038.84 1170.31 cv
1946.86 1088.33 1980.6 1499.73 1980.6 1499.73 cv
1980.6 1499.73 1922.84 1262.9 1860.09 1251.53 cv
1797.34 1240.15 1878.91 1587.51 1878.91 1587.51 cv
2374.75 1589.37 li
cp
.376471 .74902 .376471 rgb
f
2450.04 1359.09 mo
2449.94 1358.54 2449.63 1358.05 2449.18 1357.74 cv
2448.72 1357.41 2448.16 1357.29 2447.61 1357.39 cv
2447.05 1357.49 2446.57 1357.8 2446.25 1358.26 cv
2286.11 1588.43 li
2285.79 1588.89 2285.67 1589.44 2285.77 1590 cv
2285.87 1590.55 2286.18 1591.03 2286.63 1591.34 cv
2286.99 1591.59 2287.4 1591.72 2287.83 1591.72 cv
2288.52 1591.72 2289.17 1591.39 2289.55 1590.82 cv
2449.69 1360.65 li
2450.01 1360.2 2450.14 1359.64 2450.04 1359.09 cv
cp
.133333 .658824 .133333 rgb
f
2307.6 1163.27 mo
2307.07 1163.08 2306.5 1163.11 2306 1163.34 cv
2305.49 1163.58 2305.1 1164 2304.91 1164.53 cv
2150.78 1587.82 li
2150.39 1588.91 2150.95 1590.12 2152.04 1590.51 cv
2152.27 1590.59 2152.51 1590.64 2152.75 1590.64 cv
2153.63 1590.64 2154.42 1590.08 2154.72 1589.26 cv
2308.85 1165.96 li
2309.25 1164.88 2308.69 1163.67 2307.6 1163.27 cv
cp
f
2021.03 1218.04 mo
2020.51 1218.15 2020.07 1218.46 2019.78 1218.9 cv
2019.49 1219.35 2019.39 1219.88 2019.5 1220.39 cv
2019.94 1222.52 2064.24 1434.74 2075.08 1588.39 cv
2075.15 1589.43 2076.02 1590.24 2077.05 1590.24 cv
2077.07 1590.24 li
2077.19 1590.24 li
2077.72 1590.2 2078.2 1589.96 2078.55 1589.56 cv
2078.9 1589.16 2079.07 1588.65 2079.04 1588.12 cv
2068.27 1435.39 2023.83 1221.72 2023.38 1219.58 cv
2023.15 1218.51 2022.11 1217.83 2021.03 1218.04 cv
cp
f
1873.63 1295.81 mo
1873.49 1295.3 1873.15 1294.88 1872.69 1294.62 cv
1872.23 1294.36 1871.69 1294.3 1871.18 1294.45 cv
1870.13 1294.75 1869.52 1295.85 1869.82 1296.9 cv
1870.45 1299.11 1933.41 1519.11 1948.06 1588.67 cv
1948.25 1589.58 1949.07 1590.24 1950 1590.24 cv
1950.14 1590.24 1950.28 1590.23 1950.41 1590.2 cv
1951.48 1589.97 1952.17 1588.92 1951.94 1587.85 cv
1937.57 1519.61 1876.24 1304.92 1873.63 1295.81 cv
cp
f
2482.2 1668.25 mo
2482.2 1779.98 1950.38 1870.56 1294.34 1870.56 cv
638.31 1870.56 106.489 1779.98 106.489 1668.25 cv
106.489 1556.52 638.31 1465.94 1294.34 1465.94 cv
1950.38 1465.94 2482.2 1556.52 2482.2 1668.25 cv
cp
.909804 .811765 .67451 rgb
f
2268.48 804.139 mo
2265.98 804.206 2263.53 804.486 2261.15 804.944 cv
2261.33 803.101 2261.41 801.23 2261.36 799.331 cv
2260.69 774.506 2240.03 754.919 2215.21 755.581 cv
2199.56 755.999 2185.99 764.369 2178.27 776.716 cv
2174.4 755.223 2155.32 739.187 2132.82 739.788 cv
2107.99 740.451 2088.4 761.113 2089.07 785.938 cv
2089.19 790.472 2089.98 794.828 2091.34 798.921 cv
2090.7 798.911 2090.06 798.907 2089.41 798.924 cv
2064.59 799.587 2045 820.249 2045.66 845.075 cv
2046.33 869.9 2066.99 889.488 2091.81 888.825 cv
2101.51 888.566 2110.39 885.249 2117.59 879.835 cv
2128.12 900.425 2149.79 914.266 2174.44 913.608 cv
2200.82 912.904 2222.89 895.807 2231.2 872.337 cv
2239.29 885.712 2254.14 894.487 2270.88 894.04 cv
2295.71 893.377 2315.29 872.715 2314.63 847.89 cv
2313.97 823.064 2293.31 803.477 2268.48 804.139 cv
cp
.992157 1 .996078 rgb
f
218.387 725.336 mo
221.137 725.336 223.83 725.571 226.458 726.004 cv
226.207 723.987 226.062 721.938 226.062 719.854 cv
226.062 692.603 248.154 670.511 275.404 670.511 cv
292.583 670.511 307.705 679.296 316.542 692.612 cv
320.156 668.923 340.617 650.775 365.316 650.775 cv
392.567 650.775 414.658 672.866 414.658 700.117 cv
414.658 705.093 413.914 709.895 412.543 714.424 cv
413.245 714.395 413.949 714.371 414.658 714.371 cv
441.909 714.371 464 736.462 464 763.713 cv
464 790.964 441.909 813.055 414.658 813.055 cv
404.019 813.055 394.175 809.676 386.116 803.949 cv
375.177 826.842 351.811 842.66 324.746 842.66 cv
295.793 842.66 271.083 824.552 261.283 799.051 cv
252.793 813.959 236.77 824.02 218.387 824.02 cv
191.136 824.02 169.045 801.929 169.045 774.678 cv
169.045 747.427 191.136 725.336 218.387 725.336 cv
cp
.635294 .764706 .94902 rgb
f
1539.76 209.293 mo
1537.84 209.447 1535.97 209.763 1534.17 210.212 cv
1534.23 208.792 1534.21 207.354 1534.09 205.901 cv
1532.56 186.898 1515.92 172.734 1496.91 174.265 cv
1484.93 175.23 1474.88 182.206 1469.47 191.989 cv
1465.62 175.672 1450.33 164.166 1433.11 165.554 cv
1414.1 167.085 1399.94 183.732 1401.47 202.735 cv
1401.75 206.206 1402.54 209.512 1403.75 212.594 cv
1403.26 212.612 1402.77 212.635 1402.27 212.675 cv
1383.27 214.206 1369.1 230.853 1370.64 249.856 cv
1372.17 268.859 1388.81 283.023 1407.82 281.492 cv
1415.24 280.894 1421.91 277.985 1427.21 273.538 cv
1436.12 288.888 1453.31 298.605 1472.18 297.084 cv
1492.37 295.457 1508.58 281.442 1513.98 263.108 cv
1520.74 273.027 1532.48 279.142 1545.3 278.109 cv
1564.3 276.578 1578.47 259.932 1576.94 240.928 cv
1575.41 221.925 1558.76 207.762 1539.76 209.293 cv
cp
f
1840.84 389.608 mo
1790.02 389.608 1748.68 430.956 1748.68 481.779 cv
1748.68 532.601 1790.02 573.948 1840.84 573.948 cv
1891.67 573.948 1933.02 532.601 1933.02 481.779 cv
1933.02 430.956 1891.67 389.608 1840.84 389.608 cv
cp
1840.84 589.797 mo
1781.28 589.797 1732.83 541.34 1732.83 481.779 cv
1732.83 422.216 1781.28 373.759 1840.84 373.759 cv
1900.41 373.759 1948.86 422.216 1948.86 481.779 cv
1948.86 541.34 1900.41 589.797 1840.84 589.797 cv
cp
1790.68 618.875 mo
1791.54 618.875 1792.41 619.018 1793.26 619.312 cv
1799.76 621.558 1806.49 623.356 1813.28 624.658 cv
1817.01 625.373 1819.71 628.639 1819.71 632.44 cv
1819.71 670.709 li
1819.71 675.453 1823.57 679.312 1828.31 679.312 cv
1853.38 679.312 li
1858.12 679.312 1861.98 675.453 1861.98 670.709 cv
1861.98 632.44 li
1861.98 628.639 1864.68 625.373 1868.42 624.658 cv
1875.2 623.355 1881.93 621.558 1888.42 619.312 cv
1892.01 618.075 1895.98 619.552 1897.88 622.839 cv
1917 655.967 li
1919.37 660.074 1924.65 661.488 1928.76 659.115 cv
1950.47 646.579 li
1952.46 645.431 1953.88 643.575 1954.48 641.356 cv
1955.07 639.136 1954.77 636.817 1953.62 634.825 cv
1934.47 601.672 li
1932.58 598.384 1933.28 594.212 1936.14 591.724 cv
1941.35 587.209 1946.28 582.281 1950.79 577.078 cv
1953.28 574.21 1957.45 573.51 1960.74 575.408 cv
1993.89 594.551 li
1998 596.92 2003.28 595.507 2005.65 591.401 cv
2018.18 569.688 li
2020.55 565.581 2019.14 560.309 2015.03 557.936 cv
1981.91 538.81 li
1978.62 536.911 1977.14 532.947 1978.38 529.357 cv
1980.63 522.866 1982.42 516.134 1983.73 509.349 cv
1984.44 505.616 1987.71 502.917 1991.51 502.917 cv
2029.77 502.917 li
2034.52 502.917 2038.38 499.058 2038.38 494.314 cv
2038.38 469.243 li
2038.38 464.499 2034.52 460.64 2029.77 460.64 cv
1991.51 460.64 li
1987.71 460.64 1984.44 457.941 1983.73 454.208 cv
1982.42 447.423 1980.63 440.691 1978.38 434.199 cv
1977.14 430.61 1978.62 426.645 1981.91 424.746 cv
2015.03 405.62 li
2019.14 403.248 2020.55 397.976 2018.18 393.868 cv
2005.65 372.155 li
2003.27 368.045 1998 366.635 1993.89 369.006 cv
1960.74 388.148 li
1957.45 390.045 1953.28 389.347 1950.79 386.478 cv
1946.28 381.275 1941.35 376.348 1936.14 371.833 cv
1933.28 369.345 1932.58 365.172 1934.47 361.884 cv
1953.62 328.729 li
1955.99 324.621 1954.58 319.349 1950.47 316.978 cv
1928.76 304.441 li
1926.77 303.293 1924.45 302.987 1922.23 303.582 cv
1920.01 304.177 1918.15 305.6 1917 307.591 cv
1897.88 340.718 li
1895.98 344.006 1892.01 345.487 1888.42 344.244 cv
1881.94 342 1875.2 340.201 1868.42 338.899 cv
1864.68 338.182 1861.98 334.917 1861.98 331.116 cv
1861.98 292.848 li
1861.98 288.104 1858.12 284.245 1853.38 284.245 cv
1828.31 284.245 li
1823.57 284.245 1819.71 288.104 1819.71 292.848 cv
1819.71 331.116 li
1819.71 334.917 1817.01 338.182 1813.28 338.899 cv
1806.49 340.201 1799.76 341.999 1793.27 344.244 cv
1789.67 345.485 1785.71 344.006 1783.81 340.718 cv
1764.69 307.591 li
1763.54 305.6 1761.68 304.177 1759.46 303.582 cv
1757.24 302.986 1754.92 303.293 1752.93 304.441 cv
1731.22 316.977 li
1729.23 318.126 1727.81 319.981 1727.21 322.201 cv
1726.62 324.42 1726.93 326.739 1728.07 328.729 cv
1747.21 361.884 li
1749.11 365.172 1748.41 369.345 1745.54 371.833 cv
1740.34 376.349 1735.41 381.277 1730.9 386.478 cv
1728.41 389.347 1724.24 390.047 1720.95 388.148 cv
1687.8 369.006 li
1685.81 367.857 1683.49 367.554 1681.27 368.147 cv
1679.05 368.742 1677.19 370.165 1676.04 372.155 cv
1663.51 393.868 li
1661.14 397.975 1662.55 403.248 1666.66 405.62 cv
1699.78 424.746 li
1703.07 426.645 1704.55 430.61 1703.31 434.199 cv
1701.06 440.699 1699.26 447.43 1697.97 454.206 cv
1697.25 457.94 1693.99 460.64 1690.18 460.64 cv
1651.92 460.64 li
1647.17 460.64 1643.31 464.499 1643.31 469.243 cv
1643.31 494.314 li
1643.31 499.058 1647.17 502.917 1651.92 502.917 cv
1690.18 502.917 li
1693.99 502.917 1697.25 505.617 1697.97 509.351 cv
1699.26 516.125 1701.06 522.857 1703.31 529.357 cv
1704.55 532.947 1703.07 536.911 1699.78 538.81 cv
1666.66 557.936 li
1662.55 560.307 1661.14 565.581 1663.51 569.688 cv
1676.04 591.401 li
1678.41 595.51 1683.69 596.92 1687.8 594.551 cv
1720.95 575.408 li
1724.24 573.511 1728.41 574.205 1730.9 577.078 cv
1735.41 582.281 1740.34 587.209 1745.54 591.724 cv
1748.41 594.212 1749.11 598.384 1747.21 601.672 cv
1728.07 634.827 li
1726.93 636.817 1726.62 639.136 1727.21 641.356 cv
1727.81 643.575 1729.23 645.431 1731.22 646.579 cv
1752.93 659.115 li
1754.92 660.262 1757.25 660.571 1759.46 659.974 cv
1761.68 659.379 1763.54 657.957 1764.69 655.967 cv
1783.81 622.839 li
1785.26 620.332 1787.91 618.875 1790.68 618.875 cv
cp
1853.38 695.161 mo
1828.31 695.161 li
1814.83 695.161 1803.86 684.192 1803.86 670.709 cv
1803.86 638.851 li
1800.66 638.101 1797.48 637.252 1794.34 636.308 cv
1778.41 663.891 li
1775.15 669.547 1769.87 673.593 1763.57 675.284 cv
1757.26 676.973 1750.67 676.108 1745.01 672.84 cv
1723.3 660.305 li
1717.64 657.041 1713.6 651.767 1711.9 645.459 cv
1710.21 639.148 1711.08 632.56 1714.35 626.902 cv
1730.29 599.293 li
1727.9 597.046 1725.58 594.722 1723.33 592.336 cv
1695.72 608.276 li
1684.04 615.017 1669.06 611.002 1662.32 599.326 cv
1649.78 577.613 li
1643.04 565.935 1647.06 550.951 1658.73 544.211 cv
1686.31 528.286 li
1685.37 525.143 1684.52 521.965 1683.77 518.767 cv
1651.92 518.767 li
1638.43 518.767 1627.46 507.797 1627.46 494.314 cv
1627.46 469.243 li
1627.46 455.759 1638.43 444.79 1651.92 444.79 cv
1683.77 444.79 li
1684.52 441.592 1685.37 438.413 1686.31 435.27 cv
1658.73 419.346 li
1647.06 412.605 1643.04 397.621 1649.78 385.944 cv
1662.32 364.231 li
1665.58 358.574 1670.86 354.528 1677.17 352.837 cv
1683.47 351.147 1690.06 352.014 1695.72 355.281 cv
1723.33 371.221 li
1725.58 368.835 1727.9 366.511 1730.29 364.264 cv
1714.35 336.654 li
1711.08 330.997 1710.21 324.408 1711.9 318.099 cv
1713.6 311.79 1717.64 306.517 1723.3 303.251 cv
1745.01 290.716 li
1750.67 287.449 1757.26 286.582 1763.57 288.273 cv
1769.87 289.964 1775.15 294.009 1778.41 299.667 cv
1794.34 327.248 li
1797.48 326.305 1800.66 325.456 1803.86 324.704 cv
1803.86 292.848 li
1803.86 279.364 1814.83 268.395 1828.31 268.395 cv
1853.38 268.395 li
1866.86 268.395 1877.83 279.364 1877.83 292.848 cv
1877.83 324.704 li
1881.03 325.456 1884.21 326.305 1887.35 327.247 cv
1903.28 299.666 li
1906.54 294.009 1911.82 289.963 1918.13 288.273 cv
1924.43 286.583 1931.02 287.448 1936.68 290.716 cv
1958.39 303.251 li
1970.07 309.991 1974.08 324.975 1967.34 336.653 cv
1951.4 364.264 li
1953.79 366.511 1956.11 368.834 1958.36 371.221 cv
1985.97 355.281 li
1997.64 348.541 2012.63 352.553 2019.37 364.231 cv
2031.91 385.943 li
2038.65 397.619 2034.63 412.603 2022.96 419.346 cv
1995.38 435.27 li
1996.32 438.412 1997.17 441.59 1997.92 444.79 cv
2029.77 444.79 li
2043.26 444.79 2054.23 455.759 2054.23 469.243 cv
2054.23 494.314 li
2054.23 507.797 2043.26 518.767 2029.77 518.767 cv
1997.92 518.767 li
1997.17 521.967 1996.32 525.145 1995.38 528.286 cv
2022.96 544.211 li
2034.63 550.953 2038.65 565.938 2031.91 577.613 cv
2019.37 599.326 li
2012.63 611 1997.65 615.02 1985.97 608.276 cv
1958.36 592.336 li
1956.11 594.722 1953.79 597.044 1951.4 599.293 cv
1967.34 626.902 li
1974.08 638.582 1970.07 653.566 1958.39 660.305 cv
1936.68 672.84 li
1925.01 679.586 1910.02 675.569 1903.28 663.891 cv
1887.35 636.31 li
1884.21 637.252 1881.03 638.101 1877.83 638.851 cv
1877.83 670.709 li
1877.83 684.192 1866.86 695.161 1853.38 695.161 cv
cp
1 .34902 .227451 rgb
f
934.426 637.336 mo
899.141 644.107 865.049 620.993 858.278 585.709 cv
851.507 550.425 874.621 516.332 909.905 509.561 cv
945.189 502.79 979.282 525.904 986.053 561.188 cv
992.824 596.472 969.71 630.565 934.426 637.336 cv
cp
1100.87 509.786 mo
1063.57 516.944 li
1060.87 510.158 1057.7 503.642 1054.13 497.428 cv
1082.83 472.591 li
1089.69 466.665 1090.43 456.306 1084.51 449.455 cv
1068.23 430.639 li
1062.3 423.788 1051.94 423.039 1045.09 428.965 cv
1016.36 453.823 li
1010.68 449.352 1004.68 445.287 998.425 441.663 cv
1010.88 405.769 li
1013.85 397.211 1009.32 387.866 1000.76 384.896 cv
977.256 376.74 li
968.697 373.77 959.352 378.3 956.382 386.858 cv
943.938 422.722 li
936.84 421.697 929.617 421.173 922.313 421.174 cv
915.155 383.877 li
913.448 374.98 904.852 369.152 895.955 370.859 cv
871.521 375.548 li
862.624 377.256 856.796 385.852 858.503 394.748 cv
865.661 432.045 li
858.875 434.748 852.359 437.909 846.145 441.489 cv
821.308 412.78 li
815.382 405.929 805.023 405.179 798.172 411.106 cv
779.356 427.384 li
772.505 433.311 771.755 443.67 777.682 450.521 cv
802.539 479.254 li
798.068 484.937 794.004 490.932 790.38 497.189 cv
754.486 484.734 li
745.928 481.764 736.583 486.294 733.613 494.853 cv
725.457 518.358 li
722.487 526.916 727.017 536.262 735.576 539.232 cv
771.439 551.676 li
770.414 558.774 769.89 565.997 769.891 573.301 cv
732.594 580.459 li
723.697 582.166 717.869 590.762 719.576 599.659 cv
724.266 624.093 li
725.973 632.99 734.569 638.818 743.465 637.111 cv
780.762 629.953 li
783.465 636.739 786.626 643.255 790.206 649.469 cv
761.496 674.305 li
754.646 680.232 753.896 690.591 759.823 697.442 cv
776.102 716.258 li
782.028 723.109 792.387 723.858 799.238 717.932 cv
827.971 693.074 li
833.654 697.545 839.649 701.609 845.906 705.234 cv
833.451 741.128 li
830.481 749.686 835.011 759.031 843.569 762.001 cv
867.075 770.157 li
875.633 773.127 884.979 768.597 887.948 760.038 cv
900.393 724.175 li
907.491 725.2 914.714 725.724 922.018 725.723 cv
929.176 763.02 li
930.883 771.917 939.479 777.745 948.375 776.037 cv
972.81 771.348 li
981.707 769.641 987.535 761.045 985.828 752.148 cv
978.67 714.851 li
985.456 712.148 991.972 708.988 998.186 705.408 cv
1023.02 734.117 li
1028.95 740.968 1039.31 741.717 1046.16 735.791 cv
1064.98 719.512 li
1071.83 713.586 1072.58 703.227 1066.65 696.376 cv
1041.79 667.643 li
1046.26 661.959 1050.33 655.965 1053.95 649.708 cv
1089.84 662.163 li
1098.4 665.133 1107.75 660.603 1110.72 652.044 cv
1118.87 628.539 li
1121.84 619.98 1117.31 610.635 1108.76 607.665 cv
1072.89 595.221 li
1073.92 588.123 1074.44 580.9 1074.44 573.596 cv
1111.74 566.438 li
1120.63 564.731 1126.46 556.135 1124.75 547.238 cv
1120.07 522.804 li
1118.36 513.907 1109.76 508.079 1100.87 509.786 cv
cp
.992157 1 .996078 rgb
f
1401.04 621.395 mo
1293.04 621.395 li
1293.04 469.395 li
1401.04 469.395 li
1401.04 621.395 li
cp
.188235 .341176 .466667 rgb
f
1758.53 1090.92 mo
1758.39 843.906 1581.24 638.375 1347.12 594.128 cv
1347.11 586.026 li
1252.33 585.276 li
972.917 585.43 746.534 812.062 746.689 1091.47 cv
746.841 1368.02 968.863 1592.58 1244.32 1597.01 cv
1244.32 1597.05 li
1347.67 1597.86 li
1347.67 1588.16 li
1581.74 1543.65 1758.66 1337.93 1758.53 1090.92 cv
cp
f
1853.31 1091.67 mo
1853.47 1371.08 1627.08 1597.71 1347.67 1597.86 cv
1068.26 1598.02 841.628 1371.63 841.474 1092.22 cv
841.32 812.813 1067.7 586.18 1347.11 586.026 cv
1626.52 585.872 1853.16 812.254 1853.31 1091.67 cv
cp
.243137 .556863 .866667 rgb
f
1739.27 1091.73 mo
1739.27 1092.4 li
1739.03 1308.52 1563.81 1483.71 1347.6 1483.83 cv
1131.17 1483.95 955.635 1308.6 955.515 1092.17 cv
955.395 875.775 1130.67 700.255 1347.04 700.065 cv
1347.17 700.065 li
1563.6 699.945 1739.15 875.295 1739.27 1091.73 cv
cp
.945098 .952941 .94902 rgb
f
1300.04 725.915 mo
1300.04 1043.4 li
981.865 1043.4 li
1010.39 881.625 1138.17 754.095 1300.04 725.915 cv
cp
1 .34902 .227451 rgb
f
1350.4 1113.93 mo
1361.38 1112.63 1369.9 1103.29 1369.91 1091.96 cv
1370.07 801.341 li
1370.08 789.109 1360.17 779.19 1347.94 779.182 cv
1335.7 779.164 1325.78 789.085 1325.78 801.316 cv
1325.62 1091.93 li
1325.61 1104.16 1335.52 1114.08 1347.75 1114.09 cv
1348.65 1114.09 1349.53 1114.04 1350.4 1113.93 cv
cp
.243137 .556863 .866667 rgb
f
1350.44 1114.3 mo
1361.61 1112.98 1370.27 1103.48 1370.27 1091.96 cv
1370.28 1079.52 1360.21 1069.44 1347.78 1069.43 cv
1057.16 1069.27 li
1044.71 1069.29 1034.64 1079.34 1034.63 1091.77 cv
1034.63 1104.21 1044.7 1114.29 1057.13 1114.3 cv
1347.75 1114.46 li
1348.66 1114.46 1349.56 1114.4 1350.44 1114.3 cv
cp
f
1434.54 505 mo
1259.54 505 li
1229.45 505 1205.04 480.599 1205.04 450.5 cv
1205.04 450.5 li
1205.04 420.401 1229.45 396 1259.54 396 cv
1434.54 396 li
1464.64 396 1489.04 420.401 1489.04 450.5 cv
1489.04 450.5 li
1489.04 480.599 1464.64 505 1434.54 505 cv
cp
f
865.935 950.354 mo
865.935 950.354 890.888 958.031 906.113 985.18 cv
906.113 985.18 870.084 980.508 865.935 950.354 cv
cp
.6 .447059 .262745 rgb
f
923.702 923.476 mo
916.024 916.827 904.409 917.661 897.76 925.339 cv
820.51 1014.54 li
724.174 933.951 li
723.586 933.462 722.938 932.965 722.297 932.521 cv
710.541 924.384 694.414 927.318 686.277 939.074 cv
678.14 950.83 681.074 966.956 692.83 975.093 cv
810.991 1056.88 li
811.909 1057.52 li
819.927 1063.03 830.973 1061.66 837.374 1054.06 cv
925.725 949.231 li
932.19 941.552 931.314 930.068 923.702 923.476 cv
cp
.964706 .615686 .521569 rgb
f
694.406 921.92 mo
694.406 921.92 737.422 909.24 815.205 996.748 cv
865.935 950.354 li
865.935 950.354 877.734 973.843 906.113 985.18 cv
906.113 985.18 874.884 1075.43 826.388 1080.98 cv
772.819 1087.1 708.146 1033.61 708.146 1033.61 cv
694.406 921.92 li
cp
1 .694118 .164706 rgb
f
566.237 1421.68 mo
548.262 1499.24 536.784 1559.03 514.782 1635.5 cv
500.149 1666.13 437.913 1667.57 447.072 1635.6 cv
464.208 1560.46 489.131 1483.91 508.725 1409.38 cv
508.725 1409.38 566.904 1419.09 566.237 1421.68 cv
cp
.964706 .615686 .521569 rgb
f
720.647 1422.73 mo
697.791 1636.33 li
683.158 1666.96 620.922 1668.39 630.081 1636.42 cv
658.555 1410.41 li
720.647 1422.73 li
cp
f
626.245 1667.61 mo
626.605 1669 627.211 1670.28 628.014 1671.41 cv
630.006 1674.21 633.216 1676.05 636.864 1676.08 cv
720.297 1676.49 li
724.45 1676.52 727.614 1674.13 729.208 1670.94 cv
729.699 1669.97 730.041 1668.92 730.217 1667.83 cv
730.753 1664.58 729.82 1661.04 726.967 1658.43 cv
697.791 1636.33 li
659.165 1642.04 630.495 1632.31 630.495 1632.31 cv
629.598 1636.44 li
627.622 1645.52 626.382 1654.75 625.889 1664.03 cv
625.889 1664.03 li
625.824 1665.27 625.948 1666.47 626.245 1667.61 cv
cp
.376471 .415686 .592157 rgb
f
626.245 1667.61 mo
627.49 1672.44 631.747 1676.04 636.864 1676.08 cv
720.297 1676.49 li
725.714 1676.52 729.457 1672.46 730.217 1667.83 cv
626.245 1667.61 li
cp
.25098 .301961 .498039 rgb
f
632.686 1214.43 mo
626.105 1613.1 li
626.105 1613.1 663.893 1629.29 715.786 1621.23 cv
764.603 1215.02 li
632.686 1214.43 li
cp
.188235 .192157 .235294 rgb
f
443.236 1666.78 mo
443.596 1668.17 444.202 1669.45 445.005 1670.58 cv
446.997 1673.38 450.207 1675.23 453.855 1675.25 cv
537.287 1675.66 li
541.441 1675.69 544.605 1673.31 546.199 1670.11 cv
546.69 1669.14 547.032 1668.09 547.208 1667.01 cv
547.744 1663.75 546.811 1660.22 543.958 1657.61 cv
514.782 1635.5 li
476.156 1641.21 447.486 1631.49 447.486 1631.49 cv
446.589 1635.61 li
444.613 1644.7 443.373 1653.92 442.88 1663.21 cv
442.88 1663.21 li
442.815 1664.45 442.938 1665.65 443.236 1666.78 cv
cp
.376471 .415686 .592157 rgb
f
443.236 1666.78 mo
444.481 1671.62 448.738 1675.21 453.855 1675.25 cv
537.287 1675.66 li
542.704 1675.69 546.448 1671.64 547.208 1667.01 cv
443.236 1666.78 li
cp
.25098 .301961 .498039 rgb
f
547.725 1214.04 mo
547.725 1214.04 461.095 1523.49 443.096 1612.28 cv
443.096 1612.28 480.884 1628.46 532.777 1620.4 cv
674.064 1214.61 li
547.725 1214.04 li
cp
.188235 .192157 .235294 rgb
f
652.521 870.538 mo
652.223 936.555 li
694.337 936.745 li
694.635 870.728 li
652.521 870.538 li
cp
.964706 .615686 .521569 rgb
f
660.226 903.578 mo
677.913 912.641 694.454 910.88 694.454 910.88 cv
694.511 898.093 li
660.226 903.578 li
cp
.819608 .513726 .419608 rgb
f
717.865 838.233 mo
717.865 838.233 724.28 826.97 721.083 814.812 cv
707.64 817.232 li
707.64 817.232 715.105 826.798 717.865 838.233 cv
cp
.164706 .188235 .278431 rgb
f
680.372 905.884 mo
680.372 905.884 li
704.698 903.357 722.369 881.588 719.842 857.262 cv
717.467 834.399 li
714.94 810.073 693.171 792.401 668.845 794.929 cv
668.845 794.929 li
644.519 797.456 626.848 819.225 629.375 843.551 cv
631.75 866.414 li
634.278 890.74 656.046 908.411 680.372 905.884 cv
cp
.964706 .615686 .521569 rgb
f
615.621 859.178 mo
616.292 865.64 622.075 870.334 628.537 869.663 cv
634.998 868.991 639.693 863.209 639.021 856.747 cv
638.35 850.285 632.568 845.591 626.106 846.262 cv
619.644 846.933 614.949 852.716 615.621 859.178 cv
cp
f
707.38 851.148 mo
708.052 857.61 713.834 862.305 720.296 861.633 cv
726.758 860.962 731.452 855.179 730.781 848.718 cv
730.11 842.256 724.327 837.561 717.865 838.233 cv
711.404 838.904 706.709 844.687 707.38 851.148 cv
cp
f
670.961 1167.71 mo
673.517 1167.72 li
712.415 1167.89 744.09 1136.5 744.266 1097.6 cv
744.753 989.762 li
744.928 950.864 708.655 920.689 674.639 919.013 cv
672.083 919.002 li
639.603 918.855 601.51 950.217 601.335 989.115 cv
600.848 1096.96 li
600.672 1135.86 632.063 1167.53 670.961 1167.71 cv
cp
f
667.607 847.21 mo
667.947 850.496 666.864 853.299 665.189 853.473 cv
663.514 853.646 661.881 851.123 661.541 847.838 cv
661.201 844.552 662.284 841.748 663.959 841.575 cv
665.634 841.402 667.267 843.925 667.607 847.21 cv
cp
.188235 .192157 .235294 rgb
f
694.201 844.46 mo
694.541 847.745 693.458 850.549 691.784 850.722 cv
690.109 850.896 688.475 848.373 688.136 845.087 cv
687.796 841.802 688.878 838.998 690.553 838.825 cv
692.228 838.652 693.861 841.175 694.201 844.46 cv
cp
f
739.598 803.338 mo
730.587 788.036 714.594 793.661 703.939 783.62 cv
696.096 776.227 671.635 765.466 655.356 772.383 cv
642.482 777.853 637.684 788.426 635.991 796.989 cv
629.505 800.041 622.547 805.946 620.516 817.376 cv
618.12 830.86 629.675 846.435 629.675 846.435 cv
629.675 846.435 642.934 841.014 648.376 826.688 cv
651.259 819.097 652.418 813.095 652.641 808.4 cv
659.451 807.971 666.993 807.821 672.712 808.586 cv
693.038 811.307 693.831 824.74 714.398 828.708 cv
738.21 833.302 745.845 813.947 739.598 803.338 cv
cp
.164706 .188235 .278431 rgb
f
649.823 860.922 mo
649.691 863.282 651.681 865.313 654.267 865.457 cv
656.854 865.602 659.058 863.806 659.189 861.445 cv
659.321 859.085 657.331 857.055 654.745 856.91 cv
652.159 856.766 649.955 858.562 649.823 860.922 cv
cp
.819608 .513726 .419608 rgb
f
699.565 857.711 mo
699.433 860.071 701.423 862.102 704.009 862.246 cv
706.596 862.391 708.799 860.594 708.931 858.234 cv
709.063 855.874 707.073 853.844 704.487 853.699 cv
701.9 853.555 699.697 855.351 699.565 857.711 cv
cp
f
719.473 856.869 mo
719.139 856.85 718.859 856.59 718.827 856.247 cv
718.393 851.758 721.32 850.622 723.256 849.87 cv
724.123 849.534 724.942 849.216 725.144 848.751 cv
725.257 848.493 725.213 848.109 725.013 847.609 cv
723.449 843.682 718.535 843.879 718.325 843.887 cv
717.933 843.908 717.621 843.613 717.602 843.234 cv
717.583 842.855 717.873 842.531 718.253 842.511 cv
718.5 842.497 724.361 842.248 726.294 847.099 cv
726.639 847.965 726.675 848.686 726.408 849.301 cv
725.976 850.293 724.897 850.712 723.754 851.155 cv
721.843 851.897 719.865 852.664 720.198 856.114 cv
720.235 856.493 719.957 856.83 719.578 856.866 cv
719.543 856.87 719.508 856.87 719.473 856.869 cv
cp
.686275 .34902 .270588 rgb
f
627.13 865.687 mo
627.112 865.686 627.094 865.684 627.076 865.682 cv
626.699 865.632 626.434 865.285 626.485 864.908 cv
626.944 861.472 624.997 860.633 623.113 859.82 cv
621.988 859.335 620.925 858.877 620.53 857.87 cv
620.285 857.245 620.349 856.527 620.725 855.674 cv
622.836 850.896 628.684 851.367 628.929 851.385 cv
629.307 851.419 629.586 851.753 629.553 852.132 cv
629.52 852.51 629.174 852.785 628.807 852.758 cv
628.6 852.74 623.694 852.363 621.986 856.231 cv
621.769 856.723 621.711 857.105 621.813 857.367 cv
621.998 857.839 622.805 858.187 623.659 858.555 cv
625.566 859.377 628.448 860.62 627.85 865.091 cv
627.802 865.45 627.485 865.707 627.13 865.687 cv
cp
f
694.406 921.92 mo
694.406 921.92 741.244 933.355 756.83 989.861 cv
774.318 1053.26 779.276 1155.14 764.564 1223.7 cv
762.283 1234.33 717.652 1239.6 682.803 1239.44 cv
637.759 1239.24 563.86 1227.18 547.725 1214.04 cv
527.252 1197.37 570.365 1109.96 576.969 1063.13 cv
585.983 999.198 583.181 943.831 652.291 921.733 cv
652.291 921.733 685.307 945.115 694.406 921.92 cv
cp
1 .694118 .164706 rgb
f
677.597 873.023 mo
675.125 872.884 672.419 872.372 669.606 871.244 cv
669.253 871.102 669.081 870.701 669.223 870.348 cv
669.364 869.995 669.765 869.823 670.119 869.965 cv
680.373 874.075 689.348 869.436 689.437 869.388 cv
689.773 869.21 690.19 869.338 690.368 869.675 cv
690.547 870.011 690.418 870.428 690.082 870.606 cv
689.794 870.758 684.648 873.416 677.597 873.023 cv
cp
.686275 .34902 .270588 rgb
f
680.092 865.06 mo
679.827 865.045 679.582 864.877 679.484 864.612 cv
679.352 864.255 679.534 863.859 679.89 863.726 cv
681.457 863.144 684.592 861.505 684.29 860.149 cv
683.87 858.26 679.877 850.042 678.374 847.036 cv
678.204 846.696 678.342 846.282 678.682 846.112 cv
679.022 845.941 679.437 846.08 679.606 846.42 cv
679.83 846.867 685.092 857.409 685.636 859.849 cv
686.278 862.739 680.976 864.793 680.369 865.018 cv
680.278 865.052 680.184 865.065 680.092 865.06 cv
cp
f
698.009 835.609 mo
697.851 835.6 697.691 835.558 697.541 835.48 cv
691.295 832.232 683.544 834.692 683.467 834.717 cv
682.861 834.914 682.209 834.584 682.01 833.977 cv
681.812 833.37 682.142 832.718 682.748 832.52 cv
683.102 832.405 691.484 829.725 698.608 833.428 cv
699.174 833.723 699.395 834.421 699.1 834.987 cv
698.883 835.404 698.449 835.633 698.009 835.609 cv
cp
f
655.717 839.532 mo
655.381 839.514 655.057 839.349 654.844 839.056 cv
654.47 838.54 654.584 837.818 655.1 837.443 cv
655.394 837.23 662.363 832.232 671.153 833.299 cv
671.786 833.375 672.238 833.951 672.161 834.585 cv
672.085 835.219 671.495 835.669 670.875 835.594 cv
663.035 834.653 656.523 839.268 656.458 839.315 cv
656.235 839.477 655.972 839.547 655.717 839.532 cv
cp
f
506.989 1200.98 mo
506.989 1200.98 483.932 1209.94 456.111 1194.5 cv
456.111 1194.5 482.005 1181.29 506.989 1200.98 cv
cp
.6 .447059 .262745 rgb
f
485.834 1204.06 mo
485.834 1204.06 492.674 1221.61 487.79 1236.38 cv
482.906 1251.15 477.64 1255.84 471.437 1258.11 cv
465.233 1260.38 458.641 1232.99 461.254 1222.98 cv
463.867 1212.97 470.931 1202.54 485.834 1204.06 cv
cp
.964706 .615686 .521569 rgb
f
489.735 1209.97 mo
494.326 1220.37 496.862 1231.71 497.031 1243.09 cv
496.97 1244.54 496.993 1246.87 496.813 1248.31 cv
496.891 1251.21 495.789 1254.97 492.174 1254.57 cv
488.859 1254.33 488.273 1250.92 488.34 1248.23 cv
487.434 1237.12 483.374 1226.25 477.485 1216.82 cv
470.564 1208.02 485.673 1199.51 489.735 1209.97 cv
cp
f
487.861 1236.59 mo
485.318 1248.13 484.945 1260.28 487.045 1271.93 cv
487.892 1276.28 481.253 1277.99 479.876 1273.82 cv
478.153 1269.2 476.804 1264.35 475.853 1259.51 cv
474.277 1250.96 473.425 1242.21 474.073 1233.51 cv
475.27 1223.05 491.223 1226.59 487.861 1236.59 cv
cp
f
482.668 1241.18 mo
480.046 1248.64 478.732 1256.61 478.447 1264.52 cv
477.222 1269.1 481.987 1278.45 475.705 1279.83 cv
469.265 1280.52 468.967 1262.42 468.197 1257.71 cv
467.8 1250.53 467.947 1243.22 469.415 1236.14 cv
471.966 1225.57 487.793 1231.58 482.668 1241.18 cv
cp
f
476.915 1241 mo
471.432 1251.17 468.875 1263.08 470.123 1274.6 cv
470.615 1279 463.873 1280.17 462.835 1275.91 cv
461.42 1271.01 460.6 1265.89 460.415 1260.78 cv
460.214 1251.33 461.449 1241.65 465.083 1232.86 cv
469.936 1222.04 485.289 1232.6 476.915 1241 cv
cp
f
473.066 1225.9 mo
466.202 1235.7 461.613 1247.37 460.52 1259.33 cv
458.959 1264 463.812 1274.61 457.75 1275.76 cv
449.446 1276.2 451.39 1250.82 452.281 1245.13 cv
453.897 1235.4 456.954 1225.82 461.899 1217.24 cv
467.446 1208.37 480.289 1218.3 473.066 1225.9 cv
cp
f
477.431 1258.31 mo
477.543 1255.51 477.844 1252.54 478.488 1249.84 cv
478.576 1249.47 478.948 1249.25 479.318 1249.33 cv
479.688 1249.42 479.919 1249.79 479.828 1250.16 cv
477.913 1258.18 479.166 1269.18 479.178 1269.29 cv
479.227 1269.67 478.953 1270.01 478.574 1270.05 cv
478.196 1270.1 477.855 1269.83 477.81 1269.45 cv
477.774 1269.14 477.199 1264.09 477.431 1258.31 cv
cp
.686275 .34902 .270588 rgb
f
469.123 1260.75 mo
469.23 1258.07 469.463 1255.2 469.929 1252.78 cv
470.001 1252.4 470.362 1252.16 470.735 1252.23 cv
471.109 1252.3 471.349 1252.66 471.283 1253.03 cv
470.037 1259.53 470.514 1269.62 470.52 1269.72 cv
470.547 1270.1 470.245 1270.42 469.865 1270.44 cv
469.486 1270.46 469.162 1270.17 469.143 1269.79 cv
469.13 1269.52 468.935 1265.41 469.123 1260.75 cv
cp
f
459.947 1261.4 mo
459.947 1261.39 459.947 1261.38 459.948 1261.38 cv
459.969 1261.07 460.482 1253.75 462.123 1248.48 cv
462.236 1248.11 462.622 1247.91 462.986 1248.02 cv
463.349 1248.14 463.552 1248.52 463.439 1248.89 cv
461.846 1254 461.328 1261.4 461.323 1261.47 cv
461.297 1261.85 460.968 1262.14 460.588 1262.11 cv
460.215 1262.09 459.932 1261.77 459.947 1261.4 cv
cp
f
461.464 1214.26 mo
474.753 1078.38 li
475.137 1074.41 476.707 1070.52 479.509 1067.27 cv
480.678 1065.91 li
588.688 940.59 li
588.873 940.378 589.138 940.079 589.331 939.87 cv
599.621 928.747 616.981 928.071 628.105 938.362 cv
639.229 948.652 639.904 966.012 629.613 977.136 cv
521.409 1094.1 li
493.506 1219.38 li
491.752 1227.29 484.327 1232.83 476.059 1232.02 cv
467.125 1231.15 460.591 1223.2 461.464 1214.26 cv
cp
.964706 .615686 .521569 rgb
f
652.291 921.733 mo
652.291 921.733 602.946 915.934 567.571 946.998 cv
532.196 978.063 473.281 1039.25 463.969 1070.54 cv
454.656 1101.84 456.111 1194.5 456.111 1194.5 cv
456.111 1194.5 482.537 1188.11 506.989 1200.98 cv
532.062 1100.79 li
532.062 1100.79 616.677 1021.31 630.639 991.138 cv
644.6 960.967 652.291 921.733 652.291 921.733 cv
cp
1 .694118 .164706 rgb
f
895.461 933.503 mo
895.461 933.503 906.065 918.05 920.945 913.798 cv
935.824 909.545 942.637 911.244 947.977 915.075 cv
953.317 918.906 934.484 939.662 924.785 943.121 cv
915.086 946.579 902.557 946.607 895.461 933.503 cv
cp
.964706 .615686 .521569 rgb
f
894.809 929.993 mo
895.311 929.104 li
895.472 928.818 895.592 928.629 895.717 928.427 cv
895.843 928.221 895.968 928.024 896.09 927.838 cv
896.336 927.459 896.582 927.075 896.832 926.714 cv
897.326 925.975 897.833 925.262 898.343 924.554 cv
898.851 923.843 899.382 923.159 899.901 922.463 cv
901.511 920.43 li
903.694 917.754 906.028 915.214 908.495 912.807 cv
910.945 910.388 913.59 908.15 916.36 906.083 cv
918.459 904.562 li
920.645 903.152 li
921.737 902.453 li
922.877 901.817 li
925.149 900.557 li
926.854 899.608 929.044 900.016 930.28 901.604 cv
931.647 903.358 931.332 905.889 929.577 907.256 cv
929.326 907.452 li
927.56 908.827 li
926.68 909.509 li
925.84 910.254 li
924.168 911.735 li
923.074 912.82 li
923.685 912.562 924.297 912.283 924.911 912.007 cv
926.235 911.397 927.553 910.748 928.863 910.073 cv
931.485 908.723 934.048 907.234 936.546 905.641 cv
937.81 904.86 939.015 904.007 940.246 903.171 cv
942.038 901.857 li
942.936 901.196 li
943.803 900.505 li
946.167 898.697 948.331 896.686 950.475 894.623 cv
950.601 894.501 li
951.867 893.281 953.864 893.105 955.339 894.173 cv
956.994 895.372 957.364 897.687 956.165 899.343 cv
954.241 901.998 952.24 904.635 950.023 907.058 cv
949.205 907.985 li
948.358 908.878 li
947.761 909.502 li
947.949 909.386 948.136 909.27 948.324 909.155 cv
950.201 907.914 li
951.141 907.289 li
952.053 906.633 li
954.532 904.922 956.826 903.002 959.101 901.03 cv
959.229 900.919 li
960.56 899.763 962.566 899.693 963.983 900.841 cv
965.572 902.128 965.817 904.459 964.53 906.048 cv
962.448 908.617 960.292 911.165 957.935 913.491 cv
957.104 914.342 li
957.746 913.984 li
959.672 912.771 li
960.639 912.16 li
961.559 911.496 li
963.409 910.16 li
963.643 909.99 li
965.075 908.955 967.086 909.069 968.391 910.347 cv
969.848 911.775 969.872 914.115 968.444 915.572 cv
966.618 917.436 li
965.697 918.369 li
964.731 919.241 li
962.783 920.985 li
960.753 922.619 li
959.666 923.467 958.553 924.282 957.426 925.077 cv
959.089 924.116 li
960.268 923.434 li
961.38 922.664 li
963.622 921.12 li
963.909 920.922 li
965.396 919.896 967.449 920.092 968.71 921.456 cv
970.093 922.953 970.002 925.286 968.505 926.669 cv
966.204 928.797 li
965.044 929.862 li
963.815 930.834 li
961.335 932.772 li
958.732 934.526 li
958.293 934.813 957.865 935.125 957.415 935.39 cv
956.06 936.179 li
955.151 936.692 954.258 937.26 953.324 937.727 cv
950.519 939.137 li
949.581 939.609 948.613 939.99 947.657 940.42 cv
943.81 942.064 939.847 943.431 935.795 944.501 cv
932.737 945.249 li
931.707 945.461 930.683 945.703 929.64 945.888 cv
928.6 946.081 927.553 946.265 926.487 946.416 cv
925.962 946.502 925.412 946.563 924.869 946.633 cv
924.602 946.668 924.32 946.699 924.029 946.726 cv
923.745 946.754 923.471 946.784 923.078 946.806 cv
922.166 946.858 li
921.667 946.883 921.157 946.855 920.644 946.769 cv
916.798 946.125 914.202 942.486 914.846 938.64 cv
915.49 934.795 919.129 932.199 922.975 932.842 cv
923.061 932.857 923.25 932.865 923.439 932.873 cv
923.191 932.159 923.048 931.395 923.043 930.597 cv
923.038 929.795 923.173 929.026 923.414 928.305 cv
923.323 928.065 923.243 927.819 923.177 927.565 cv
919.882 927.729 916.815 925.563 915.967 922.242 cv
915.893 921.955 915.844 921.667 915.808 921.38 cv
914.352 923.395 912.983 925.473 911.727 927.612 cv
910.621 929.562 li
910.274 930.221 909.91 930.872 909.578 931.532 cv
909.244 932.192 908.912 932.85 908.608 933.507 cv
908.447 933.837 908.307 934.159 908.162 934.481 cv
908.087 934.646 908.02 934.802 907.959 934.951 cv
907.895 935.104 907.824 935.269 907.804 935.342 cv
907.653 935.882 907.427 936.448 907.139 936.958 cv
905.215 940.363 900.896 941.564 897.491 939.64 cv
894.086 937.717 892.886 933.397 894.809 929.993 cv
cp
f
940.984 935.316 mo
941.028 935.31 941.073 935.299 941.117 935.283 cv
949.987 932.106 957.447 926.096 957.521 926.035 cv
957.815 925.797 957.86 925.365 957.622 925.071 cv
957.382 924.778 956.952 924.734 956.657 924.971 cv
956.585 925.03 949.298 930.896 940.655 933.993 cv
940.298 934.12 940.113 934.512 940.24 934.869 cv
940.353 935.181 940.667 935.362 940.984 935.316 cv
cp
.686275 .34902 .270588 rgb
f
940.258 926.388 mo
940.342 926.376 940.424 926.348 940.501 926.304 cv
950.21 920.723 956.948 914.589 957.014 914.527 cv
957.294 914.271 957.313 913.838 957.057 913.559 cv
956.8 913.28 956.368 913.262 956.089 913.516 cv
956.023 913.577 949.388 919.614 939.818 925.115 cv
939.49 925.304 939.377 925.723 939.566 926.051 cv
939.71 926.302 939.989 926.427 940.258 926.388 cv
cp
f
934.071 920.42 mo
934.158 920.407 934.243 920.378 934.324 920.33 cv
940.341 916.743 947.04 910.277 947.322 910.003 cv
947.594 909.74 947.6 909.306 947.337 909.034 cv
947.074 908.763 946.642 908.754 946.368 909.019 cv
946.3 909.085 939.501 915.648 933.622 919.153 cv
933.297 919.346 933.19 919.767 933.384 920.092 cv
933.53 920.338 933.805 920.458 934.071 920.42 cv
cp
f
925.968 932.81 mo
926.175 932.779 926.366 932.655 926.473 932.457 cv
926.653 932.123 926.529 931.708 926.195 931.528 cv
923.354 929.995 919.585 929.574 917.559 929.459 cv
920.689 925.309 921.951 919.751 922.008 919.495 cv
922.09 919.126 921.857 918.76 921.487 918.678 cv
921.12 918.595 920.753 918.828 920.67 919.198 cv
920.655 919.263 919.184 925.729 915.633 929.642 cv
915.45 929.844 915.404 930.136 915.515 930.384 cv
915.627 930.633 915.875 930.792 916.148 930.789 cv
916.204 930.788 921.868 930.75 925.545 932.734 cv
925.679 932.807 925.827 932.83 925.968 932.81 cv
cp
f
577.98 1056.05 mo
577.805 1056.04 577.633 1055.97 577.497 1055.84 cv
577.2 1055.55 577.194 1055.08 577.483 1054.78 cv
577.836 1054.42 613.022 1018.21 628.273 994.101 cv
628.495 993.75 628.958 993.646 629.309 993.867 cv
629.659 994.089 629.762 994.552 629.541 994.902 cv
614.206 1019.14 578.912 1055.46 578.558 1055.83 cv
578.401 1055.99 578.188 1056.07 577.98 1056.05 cv
cp
.6 .447059 .262745 rgb
f
770.55 1071.63 mo
770.181 1071.61 769.874 1071.32 769.844 1070.94 cv
769.813 1070.55 766.716 1032.29 756.102 990.043 cv
756.001 989.642 756.245 989.234 756.647 989.133 cv
757.047 989.035 757.456 989.277 757.557 989.678 cv
768.202 1032.05 771.309 1070.44 771.339 1070.82 cv
771.371 1071.23 771.063 1071.59 770.65 1071.62 cv
770.617 1071.63 770.584 1071.63 770.55 1071.63 cv
cp
f
825.522 1011.16 mo
825.274 1011.15 825.038 1011.01 824.907 1010.78 cv
821.486 1004.69 814.721 997.33 814.653 997.257 cv
814.372 996.953 814.391 996.478 814.696 996.197 cv
815.001 995.917 815.475 995.935 815.755 996.24 cv
816.038 996.545 822.707 1003.8 826.215 1010.04 cv
826.418 1010.4 826.289 1010.86 825.928 1011.06 cv
825.8 1011.14 825.659 1011.17 825.522 1011.16 cv
cp
f
509.239 1192.58 mo
509.116 1192.57 508.992 1192.53 508.88 1192.46 cv
482.195 1175.67 456.543 1184.65 456.288 1184.74 cv
455.894 1184.89 455.468 1184.68 455.327 1184.29 cv
455.186 1183.91 455.387 1183.48 455.776 1183.33 cv
456.04 1183.24 482.355 1174 509.679 1191.19 cv
510.03 1191.41 510.135 1191.88 509.915 1192.23 cv
509.764 1192.47 509.502 1192.59 509.239 1192.58 cv
cp
f
901.229 998.258 mo
901.157 998.255 901.084 998.24 901.014 998.215 cv
864.09 984.833 854.978 960.306 854.891 960.06 cv
854.752 959.67 854.955 959.242 855.345 959.102 cv
855.735 958.965 856.164 959.166 856.304 959.556 cv
856.389 959.795 865.31 983.679 901.524 996.804 cv
901.914 996.946 902.115 997.376 901.974 997.765 cv
901.859 998.083 901.551 998.276 901.229 998.258 cv
cp
f
630.054 1341.65 mo
629.986 1341.64 629.916 1341.63 629.847 1341.61 cv
629.456 1341.47 629.249 1341.04 629.385 1340.65 cv
653.251 1272.11 li
653.388 1271.72 653.809 1271.51 654.207 1271.64 cv
654.598 1271.78 654.805 1272.21 654.669 1272.6 cv
630.803 1341.14 li
630.69 1341.47 630.379 1341.66 630.054 1341.65 cv
cp
.392157 .396078 .431373 rgb
f
497.787 1603.89 mo
470.246 1602.44 447.202 1594.59 446.857 1594.47 cv
446.466 1594.34 446.259 1593.91 446.394 1593.52 cv
446.529 1593.13 446.955 1592.92 447.348 1593.06 cv
447.863 1593.24 499.296 1610.73 540.109 1597.99 cv
540.504 1597.86 540.924 1598.08 541.048 1598.48 cv
541.172 1598.87 540.951 1599.3 540.555 1599.42 cv
526.714 1603.74 511.678 1604.63 497.787 1603.89 cv
cp
f
675.564 1604.87 mo
648.527 1603.44 626.811 1596.6 626.486 1596.49 cv
626.091 1596.37 625.874 1595.94 626.001 1595.55 cv
626.127 1595.16 626.544 1594.94 626.945 1595.06 cv
627.428 1595.22 675.922 1610.49 718.079 1599.9 cv
718.479 1599.8 718.888 1600.04 718.989 1600.44 cv
719.09 1600.85 718.847 1601.25 718.444 1601.35 cv
704.174 1604.94 689.192 1605.59 675.564 1604.87 cv
cp
f
469.712 1600.35 mo
469.661 1600.35 469.611 1600.34 469.56 1600.33 cv
469.159 1600.22 468.92 1599.81 469.025 1599.41 cv
567.922 1223.13 li
568.027 1222.73 568.435 1222.49 568.838 1222.6 cv
569.238 1222.71 569.478 1223.12 569.373 1223.52 cv
470.476 1599.79 li
470.384 1600.14 470.059 1600.37 469.712 1600.35 cv
cp
f
665.743 1217.35 mo
648.551 1216.44 632.451 1214.5 618.526 1212.3 cv
574.766 1205.38 542.487 1194.4 542.166 1194.29 cv
541.774 1194.16 541.565 1193.73 541.699 1193.34 cv
541.834 1192.95 542.26 1192.74 542.652 1192.87 cv
542.973 1192.98 575.15 1203.93 618.788 1210.82 cv
659.026 1217.18 717.518 1221.3 767.658 1204.81 cv
768.049 1204.68 768.475 1204.9 768.604 1205.29 cv
768.733 1205.68 768.52 1206.11 768.126 1206.24 cv
735.072 1217.11 698.439 1219.08 665.743 1217.35 cv
cp
.6 .447059 .262745 rgb
f
665.521 1196.49 mo
648.329 1195.58 632.451 1193.73 618.827 1191.66 cv
576.012 1185.13 545.639 1174.94 545.336 1174.83 cv
544.944 1174.7 544.734 1174.27 544.867 1173.88 cv
545 1173.49 545.42 1173.28 545.818 1173.41 cv
546.119 1173.51 576.392 1183.67 619.083 1190.18 cv
658.459 1196.18 716.754 1200.21 770.867 1185.34 cv
771.265 1185.23 771.678 1185.47 771.788 1185.86 cv
771.898 1186.26 771.663 1186.68 771.263 1186.79 cv
735.629 1196.58 698.206 1198.22 665.521 1196.49 cv
cp
f
512.197 1180.76 mo
512.066 1180.75 511.933 1180.71 511.816 1180.63 cv
487.384 1163.98 456.581 1172.92 456.272 1173.02 cv
455.871 1173.13 455.457 1172.91 455.338 1172.51 cv
455.219 1172.11 455.445 1171.7 455.841 1171.58 cv
456.156 1171.48 487.648 1162.35 512.66 1179.39 cv
513.003 1179.62 513.091 1180.09 512.858 1180.43 cv
512.704 1180.65 512.451 1180.77 512.197 1180.76 cv
cp
f
896.239 1009.41 mo
896.202 1009.41 896.166 1009.4 896.128 1009.39 cv
860.041 1002.08 845.745 968.938 845.605 968.605 cv
845.445 968.222 845.624 967.783 846.006 967.623 cv
846.388 967.462 846.828 967.643 846.988 968.024 cv
847.125 968.35 861.134 1000.77 896.427 1007.93 cv
896.833 1008.01 897.095 1008.4 897.013 1008.81 cv
896.938 1009.18 896.604 1009.43 896.239 1009.41 cv
cp
f
652.313 916.574 mo
635.807 921.482 li
671 950 li
682 938 li
693 948 li
707.5 921.5 li
694.406 916.574 li
694.406 916.574 691.5 928.5 680.5 929.5 cv
669.5 930.5 652.313 916.574 652.313 916.574 cv
cp
.945098 .952941 .94902 rgb
f
1621.18 867.877 mo
1621.18 867.877 1592.17 868.117 1574.11 890.786 cv
1574.11 890.786 1602.85 897.976 1621.18 867.877 cv
cp
.6 .447059 .262745 rgb
f
1852.36 828.595 mo
1852.36 828.595 1870.21 840.863 1882.37 872.005 cv
1891.17 894.552 1913.78 931.852 1923.2 953.546 cv
1961.23 1041.2 1927.99 1087.06 1811.23 1083.53 cv
1756.07 1081.87 1743.59 1039.23 1752.6 1001.79 cv
1761.56 964.566 1772.6 928.651 1763.43 887.69 cv
1763.43 887.69 1772.41 851.26 1793.95 844.463 cv
1815.48 837.665 1852.36 828.595 1852.36 828.595 cv
cp
.717647 .309804 .164706 rgb
f
1842.46 912.1 mo
1840.05 977.735 li
1798.18 976.196 li
1800.59 910.561 li
1842.46 912.1 li
cp
.964706 .615686 .521569 rgb
f
1829.32 947.329 mo
1829.32 947.329 1816.04 957.295 1799 953.851 cv
1799.84 931.002 li
1829.32 947.329 li
cp
.819608 .513726 .419608 rgb
f
1811.27 950.209 mo
1811.27 950.209 li
1786.97 948.989 1768.26 928.301 1769.48 904 cv
1770.63 881.159 li
1771.85 856.859 1792.54 838.148 1816.84 839.367 cv
1816.84 839.368 li
1841.14 840.587 1859.85 861.276 1858.63 885.577 cv
1857.48 908.417 li
1856.26 932.718 1835.57 951.429 1811.27 950.209 cv
cp
.964706 .615686 .521569 rgb
f
1817.8 1215.27 mo
1779.12 1213.85 1722.02 1201.17 1739.02 1148.63 cv
1747.75 1121.65 1758.77 1085.14 1752.71 1036.03 cv
1747.97 997.621 1779.13 959.164 1818.49 959.378 cv
1821.03 959.472 li
1858.75 961.459 1875.9 999.779 1870.5 1038.1 cv
1863.54 1087.49 1873.81 1122.39 1883.21 1147.64 cv
1908.98 1216.87 1817.8 1215.27 1817.8 1215.27 cv
cp
f
1806.69 998.058 mo
1808.58 983.894 1798.63 970.884 1784.46 968.998 cv
1668.57 953.573 li
1604.91 855.404 li
1600.47 848.54 1591.55 845.812 1583.91 849.347 cv
1575.56 853.219 1571.92 863.13 1575.8 871.486 cv
1630.78 990.167 li
1633.96 996.875 1640.42 1002.03 1648.32 1003.08 cv
1777.63 1020.29 li
1791.8 1022.18 1804.81 1012.22 1806.69 998.058 cv
cp
f
1820.84 891.242 mo
1820.68 894.523 1821.9 897.251 1823.57 897.335 cv
1825.25 897.418 1826.74 894.825 1826.9 891.543 cv
1827.06 888.261 1825.84 885.533 1824.17 885.45 cv
1822.49 885.367 1821 887.96 1820.84 891.242 cv
cp
.188235 .192157 .235294 rgb
f
1798.69 962.431 mo
1798.69 962.431 1752.63 952.624 1673.86 949.333 cv
1673.86 949.333 1641.48 895.691 1621.18 867.877 cv
1621.18 867.877 1603.34 889.282 1574.11 890.786 cv
1574.11 890.786 1608.72 994.944 1637.73 1006.9 cv
1666.74 1018.86 1750.25 1030.69 1750.25 1030.69 cv
1798.69 962.431 li
cp
1 .694118 .164706 rgb
f
1794.27 889.92 mo
1794.11 893.202 1795.34 895.93 1797.01 896.013 cv
1798.68 896.097 1800.17 893.503 1800.33 890.222 cv
1800.5 886.94 1799.27 884.212 1797.6 884.128 cv
1795.93 884.045 1794.44 886.638 1794.27 889.92 cv
cp
.188235 .192157 .235294 rgb
f
1839.24 903.92 mo
1839.49 906.258 1837.62 908.381 1835.06 908.661 cv
1832.5 908.942 1830.21 907.275 1829.96 904.937 cv
1829.7 902.599 1831.57 900.476 1834.13 900.196 cv
1836.7 899.915 1838.98 901.582 1839.24 903.92 cv
cp
.898039 .541176 .462745 rgb
f
1789.65 903.369 mo
1789.91 905.707 1788.04 907.83 1785.47 908.111 cv
1782.91 908.391 1780.63 906.724 1780.37 904.386 cv
1780.12 902.048 1781.98 899.926 1784.55 899.645 cv
1787.11 899.364 1789.39 901.032 1789.65 903.369 cv
cp
f
1798.69 962.431 mo
1798.69 962.431 1777.62 966.323 1756.04 996.671 cv
1750.13 1004.99 1736.5 1027.29 1736.01 1040.6 cv
1735.48 1055.08 1749.95 1063.84 1748.98 1090.06 cv
1748.03 1116.05 1728.4 1132.03 1739.02 1148.63 cv
1745.27 1158.4 1842.22 1174.96 1884.01 1150.15 cv
1907.26 1136.35 1869.14 1105.11 1880.67 1033.83 cv
1889.45 979.55 1859.64 969.75 1840.58 963.97 cv
1840.58 963.97 1824.25 1004.87 1809.87 1003.61 cv
1795.11 1002.31 1798.69 962.431 1798.69 962.431 cv
cp
1 .694118 .164706 rgb
f
1871.97 899.86 mo
1871.64 906.315 1866.15 911.286 1859.69 910.961 cv
1853.24 910.637 1848.27 905.142 1848.59 898.687 cv
1848.91 892.231 1854.41 887.261 1860.87 887.585 cv
1867.32 887.909 1872.29 893.405 1871.97 899.86 cv
cp
.964706 .615686 .521569 rgb
f
1799.85 830.137 mo
1799.85 830.137 1779.63 823.229 1765.53 842.169 cv
1753.2 858.736 1758.22 876.941 1765.76 893.896 cv
1765.76 893.896 1793.92 856.955 1799.85 830.137 cv
cp
.717647 .309804 .164706 rgb
f
1781.54 897.265 mo
1781.21 903.72 1775.72 908.69 1769.26 908.366 cv
1762.81 908.042 1757.84 902.547 1758.16 896.091 cv
1758.48 889.636 1763.98 884.666 1770.43 884.99 cv
1776.89 885.314 1781.86 890.809 1781.54 897.265 cv
cp
.964706 .615686 .521569 rgb
f
1815.6 919.771 mo
1815.58 922.967 1812.56 925.536 1808.86 925.51 cv
1805.17 925.48 1802.19 922.865 1802.22 919.669 cv
1802.22 918.947 1802.39 918.248 1802.67 917.614 cv
1803.65 915.439 1806.1 913.907 1808.96 913.931 cv
1811.45 913.948 1813.62 915.154 1814.76 916.925 cv
1815.31 917.767 1815.61 918.735 1815.6 919.771 cv
cp
.819608 .513726 .419608 rgb
f
1814.76 916.925 mo
1806.9 920.387 1802.68 917.621 1802.68 917.621 cv
1802.67 917.614 li
1803.65 915.439 1806.1 913.907 1808.96 913.931 cv
1811.45 913.948 1813.62 915.154 1814.76 916.925 cv
cp
1 1 1 rgb
f
1769.27 903.503 mo
1768.94 903.437 1768.7 903.135 1768.72 902.789 cv
1768.93 899.347 1766.93 898.653 1765.01 897.983 cv
1763.86 897.583 1762.77 897.204 1762.3 896.233 cv
1762.02 895.631 1762.03 894.913 1762.34 894.04 cv
1764.09 889.148 1769.92 889.191 1770.17 889.195 cv
1770.55 889.198 1770.85 889.512 1770.84 889.891 cv
1770.84 890.269 1770.53 890.571 1770.15 890.566 cv
1769.94 890.563 1765.05 890.542 1763.63 894.502 cv
1763.45 895.006 1763.42 895.389 1763.54 895.642 cv
1763.76 896.097 1764.58 896.384 1765.46 896.688 cv
1767.41 897.367 1770.36 898.394 1770.09 902.872 cv
1770.06 903.25 1769.74 903.538 1769.36 903.515 cv
1769.33 903.513 1769.3 903.509 1769.27 903.503 cv
cp
.686275 .34902 .270588 rgb
f
1859.84 906.002 mo
1859.55 905.944 1859.32 905.702 1859.3 905.393 cv
1858.88 900.925 1861.8 899.807 1863.73 899.067 cv
1864.59 898.736 1865.41 898.423 1865.61 897.961 cv
1865.72 897.705 1865.68 897.323 1865.49 896.825 cv
1863.94 892.893 1858.9 893.092 1858.85 893.095 cv
1858.47 893.113 1858.15 892.821 1858.13 892.443 cv
1858.11 892.065 1858.4 891.744 1858.78 891.725 cv
1859.03 891.713 1864.86 891.487 1866.76 896.323 cv
1867.1 897.185 1867.14 897.902 1866.87 898.514 cv
1866.43 899.498 1865.36 899.91 1864.22 900.347 cv
1862.31 901.078 1860.34 901.833 1860.66 905.267 cv
1860.7 905.644 1860.42 905.977 1860.04 906.013 cv
1859.97 906.018 1859.91 906.015 1859.84 906.002 cv
cp
f
1784.04 843.064 mo
1784.04 843.064 1793.16 867.082 1817.2 867.67 cv
1845.44 868.361 1857.04 904.294 1857.04 904.294 cv
1857.04 904.294 1873.37 877.218 1868.68 857.814 cv
1857.94 813.421 1812.1 802.429 1784.04 843.064 cv
cp
.717647 .309804 .164706 rgb
f
1790.9 877.939 mo
1790.75 877.91 1790.61 877.851 1790.48 877.761 cv
1789.95 877.402 1789.82 876.69 1790.17 876.165 cv
1790.28 876.004 1792.92 872.203 1797.11 871.658 cv
1799.6 871.336 1802.05 872.208 1804.41 874.253 cv
1804.89 874.669 1804.94 875.396 1804.52 875.876 cv
1804.11 876.355 1803.38 876.407 1802.9 875.991 cv
1801.07 874.399 1799.22 873.709 1797.42 873.937 cv
1794.26 874.34 1792.1 877.431 1792.07 877.463 cv
1791.81 877.853 1791.34 878.027 1790.9 877.939 cv
cp
.686275 .34902 .270588 rgb
f
1817.38 877.078 mo
1817.18 877.038 1816.99 876.945 1816.83 876.797 cv
1816.37 876.367 1816.33 875.644 1816.76 875.177 cv
1816.87 875.06 1819.43 872.315 1823.18 872.414 cv
1825.85 872.484 1828.37 873.941 1830.68 876.745 cv
1831.08 877.235 1831.01 877.961 1830.52 878.364 cv
1830.03 878.768 1829.3 878.697 1828.9 878.207 cv
1827.04 875.949 1825.1 874.772 1823.14 874.714 cv
1820.44 874.632 1818.48 876.712 1818.46 876.733 cv
1818.17 877.037 1817.76 877.154 1817.38 877.078 cv
cp
f
1808.88 909.443 mo
1808.85 909.436 1808.81 909.426 1808.78 909.414 cv
1808.17 909.192 1802.89 907.159 1803.53 904.283 cv
1804.06 901.854 1809.27 891.355 1809.5 890.909 cv
1809.66 890.569 1810.07 890.432 1810.41 890.601 cv
1810.75 890.769 1810.89 891.18 1810.72 891.519 cv
1809.23 894.514 1805.28 902.698 1804.87 904.578 cv
1804.57 905.931 1807.69 907.554 1809.25 908.127 cv
1809.61 908.258 1809.79 908.652 1809.66 909.007 cv
1809.54 909.328 1809.21 909.508 1808.88 909.443 cv
cp
f
1760.4 1071.85 mo
1749.83 1069.74 1743.61 1064.1 1743.27 1063.8 cv
1743 1063.54 1742.98 1063.11 1743.24 1062.83 cv
1743.49 1062.55 1743.93 1062.54 1744.2 1062.79 cv
1744.31 1062.88 1754.52 1072.11 1770.75 1071.21 cv
1771.12 1071.19 1771.45 1071.48 1771.47 1071.85 cv
1771.49 1072.23 1771.2 1072.56 1770.82 1072.58 cv
1767 1072.79 1763.51 1072.47 1760.4 1071.85 cv
cp
.858824 .74902 .698039 rgb
f
1817.36 1074.62 mo
1816.2 1074.39 1815.57 1074.21 1815.54 1074.2 cv
1815.18 1074.1 1814.97 1073.72 1815.07 1073.36 cv
1815.17 1072.99 1815.55 1072.78 1815.91 1072.88 cv
1816.09 1072.93 1833.57 1077.7 1857.47 1070.71 cv
1857.84 1070.61 1858.22 1070.81 1858.32 1071.18 cv
1858.43 1071.54 1858.22 1071.92 1857.86 1072.03 cv
1838.02 1077.83 1822.49 1075.64 1817.36 1074.62 cv
cp
.6 .447059 .262745 rgb
f
1605.21 860.698 mo
1605.21 860.698 1595.44 844.707 1580.8 839.674 cv
1566.17 834.64 1559.27 835.976 1553.74 839.519 cv
1548.2 843.062 1565.91 864.786 1575.42 868.752 cv
1584.92 872.719 1597.43 873.41 1605.21 860.698 cv
cp
.964706 .615686 .521569 rgb
f
1606.04 857.228 mo
1605.59 856.313 li
1605.44 856.02 1605.33 855.825 1605.22 855.617 cv
1605.1 855.403 1604.99 855.201 1604.88 855.009 cv
1604.65 854.617 1604.43 854.22 1604.2 853.847 cv
1603.74 853.083 1603.27 852.344 1602.8 851.61 cv
1602.33 850.873 1601.84 850.162 1601.36 849.44 cv
1599.86 847.324 li
1597.82 844.536 1595.62 841.876 1593.29 839.343 cv
1590.97 836.798 1588.44 834.422 1585.79 832.212 cv
1583.77 830.582 li
1581.66 829.058 li
1580.61 828.303 li
1579.51 827.607 li
1577.3 826.229 li
1575.65 825.192 1573.44 825.483 1572.12 827.003 cv
1570.67 828.683 1570.85 831.226 1572.53 832.684 cv
1572.77 832.893 li
1574.46 834.36 li
1575.3 835.087 li
1576.1 835.876 li
1577.69 837.444 li
1578.73 838.585 li
1578.13 838.294 1577.53 837.984 1576.94 837.675 cv
1575.65 836.996 1574.36 836.278 1573.09 835.536 cv
1570.54 834.049 1568.06 832.426 1565.65 830.704 cv
1564.43 829.856 1563.27 828.941 1562.09 828.041 cv
1560.37 826.634 li
1559.51 825.927 li
1558.68 825.19 li
1556.41 823.26 1554.36 821.137 1552.33 818.964 cv
1552.21 818.836 li
1551.01 817.55 1549.02 817.268 1547.49 818.257 cv
1545.78 819.367 1545.28 821.659 1546.4 823.376 cv
1548.18 826.129 1550.03 828.868 1552.12 831.405 cv
1552.89 832.374 li
1553.69 833.311 li
1554.25 833.965 li
1554.07 833.839 1553.89 833.714 1553.71 833.589 cv
1551.9 832.25 li
1550.99 831.577 li
1550.12 830.874 li
1547.73 829.034 1545.54 826.995 1543.37 824.906 cv
1543.25 824.788 li
1541.98 823.564 1539.98 823.388 1538.51 824.459 cv
1536.85 825.66 1536.49 827.975 1537.69 829.629 cv
1539.63 832.305 1541.65 834.964 1543.88 837.411 cv
1544.66 838.304 li
1544.04 837.913 li
1542.18 836.6 li
1541.25 835.939 li
1540.37 835.227 li
1538.59 833.795 li
1538.36 833.613 li
1536.99 832.503 1534.97 832.512 1533.6 833.719 cv
1532.07 835.068 1531.93 837.402 1533.27 838.933 cv
1535 840.891 li
1535.87 841.872 li
1536.79 842.794 li
1538.64 844.638 li
1540.58 846.377 li
1541.62 847.281 1542.69 848.154 1543.77 849.007 cv
1542.16 847.96 li
1541.02 847.217 li
1539.95 846.389 li
1537.8 844.728 li
1537.52 844.515 li
1536.09 843.412 1534.03 843.499 1532.7 844.795 cv
1531.24 846.216 1531.21 848.552 1532.63 850.012 cv
1534.81 852.258 li
1535.91 853.383 li
1537.09 854.418 li
1539.46 856.485 li
1541.97 858.375 li
1542.39 858.684 1542.8 859.018 1543.24 859.307 cv
1544.55 860.166 li
1545.43 860.726 1546.29 861.342 1547.2 861.856 cv
1549.93 863.414 li
1550.84 863.934 1551.79 864.366 1552.72 864.846 cv
1556.47 866.691 1560.36 868.265 1564.35 869.548 cv
1567.36 870.457 li
1568.38 870.723 1569.39 871.019 1570.42 871.258 cv
1571.45 871.507 1572.48 871.746 1573.54 871.953 cv
1574.06 872.066 1574.61 872.157 1575.15 872.255 cv
1575.41 872.305 1575.69 872.35 1575.98 872.392 cv
1576.26 872.436 1576.53 872.48 1576.93 872.523 cv
1577.83 872.623 li
1578.33 872.674 1578.84 872.673 1579.36 872.614 cv
1583.23 872.175 1586.02 868.678 1585.58 864.804 cv
1585.14 860.93 1581.64 858.145 1577.77 858.584 cv
1577.68 858.594 1577.49 858.592 1577.3 858.591 cv
1577.59 857.89 1577.77 857.135 1577.82 856.338 cv
1577.86 855.537 1577.77 854.762 1577.57 854.03 cv
1577.67 853.795 1577.76 853.553 1577.84 853.303 cv
1581.13 853.641 1584.3 851.64 1585.33 848.369 cv
1585.41 848.086 1585.48 847.802 1585.53 847.517 cv
1586.88 849.606 1588.13 851.753 1589.28 853.956 cv
1590.28 855.962 li
1590.59 856.638 1590.92 857.308 1591.21 857.984 cv
1591.51 858.661 1591.81 859.336 1592.08 860.008 cv
1592.22 860.346 1592.34 860.674 1592.47 861.004 cv
1592.54 861.172 1592.6 861.332 1592.65 861.484 cv
1592.71 861.64 1592.77 861.808 1592.78 861.883 cv
1592.91 862.43 1593.1 863.007 1593.36 863.531 cv
1595.1 867.033 1599.35 868.461 1602.86 866.72 cv
1606.36 864.979 1607.78 860.729 1606.04 857.228 cv
cp
f
1559.65 860.102 mo
1559.61 860.093 1559.56 860.08 1559.52 860.062 cv
1550.83 856.42 1543.7 850.024 1543.63 849.96 cv
1543.35 849.706 1543.33 849.273 1543.58 848.992 cv
1543.83 848.712 1544.27 848.69 1544.55 848.943 cv
1544.62 849.005 1551.58 855.248 1560.05 858.798 cv
1560.4 858.944 1560.56 859.346 1560.42 859.695 cv
1560.29 860.001 1559.97 860.165 1559.65 860.102 cv
cp
.686275 .34902 .270588 rgb
f
1560.85 851.224 mo
1560.77 851.208 1560.69 851.176 1560.61 851.128 cv
1551.21 845.041 1544.81 838.559 1544.74 838.494 cv
1544.48 838.224 1544.48 837.79 1544.75 837.525 cv
1545.02 837.26 1545.46 837.265 1545.72 837.534 cv
1545.78 837.598 1552.09 843.977 1561.36 849.977 cv
1561.67 850.182 1561.76 850.607 1561.56 850.925 cv
1561.4 851.168 1561.12 851.278 1560.85 851.224 cv
cp
f
1567.34 845.592 mo
1567.26 845.575 1567.17 845.541 1567.1 845.489 cv
1561.28 841.589 1554.93 834.778 1554.66 834.49 cv
1554.4 834.212 1554.42 833.779 1554.7 833.521 cv
1554.97 833.264 1555.41 833.278 1555.67 833.557 cv
1555.73 833.626 1562.17 840.54 1567.86 844.35 cv
1568.17 844.561 1568.26 844.987 1568.05 845.301 cv
1567.89 845.538 1567.61 845.645 1567.34 845.592 cv
cp
f
1574.78 858.393 mo
1574.57 858.352 1574.39 858.218 1574.29 858.014 cv
1574.13 857.672 1574.28 857.263 1574.62 857.101 cv
1577.54 855.72 1581.32 855.499 1583.35 855.492 cv
1580.45 851.182 1579.48 845.565 1579.44 845.307 cv
1579.38 844.934 1579.63 844.58 1580 844.518 cv
1580.37 844.455 1580.73 844.707 1580.79 845.081 cv
1580.8 845.146 1581.93 851.681 1585.27 855.777 cv
1585.44 855.988 1585.47 856.281 1585.35 856.524 cv
1585.22 856.766 1584.97 856.912 1584.69 856.894 cv
1584.64 856.891 1578.98 856.553 1575.21 858.34 cv
1575.07 858.406 1574.92 858.421 1574.78 858.393 cv
cp
f
1738.51 1029.62 mo
1738.45 1029.61 1738.4 1029.59 1738.34 1029.57 cv
1738 1029.4 1737.86 1028.99 1738.02 1028.65 cv
1738.09 1028.51 1745.25 1013.68 1757.82 999.864 cv
1758.07 999.584 1758.51 999.564 1758.79 999.818 cv
1759.07 1000.07 1759.09 1000.51 1758.83 1000.79 cv
1746.4 1014.45 1739.33 1029.1 1739.26 1029.24 cv
1739.12 1029.53 1738.81 1029.68 1738.51 1029.62 cv
cp
.6 .447059 .262745 rgb
f
1578.33 903.831 mo
1578.03 903.772 1577.8 903.516 1577.78 903.197 cv
1577.76 902.819 1578.05 902.496 1578.43 902.475 cv
1578.75 902.457 1611.2 900.398 1628.05 877.962 cv
1628.27 877.66 1628.7 877.598 1629.01 877.826 cv
1629.31 878.053 1629.37 878.483 1629.14 878.785 cv
1611.9 901.739 1578.83 903.825 1578.5 903.843 cv
1578.44 903.847 1578.38 903.843 1578.33 903.831 cv
cp
f
1799.27 1214.23 mo
1840.24 1412.19 li
1841.17 1416.69 li
1841.34 1417.52 1841.61 1418.41 1841.91 1419.18 cv
1914.09 1602.82 li
1919.3 1616.09 1934.29 1622.62 1947.56 1617.41 cv
1960.83 1612.19 1967.36 1597.22 1962.14 1583.95 cv
1890.03 1400.28 li
1894.36 1205.12 li
1894.71 1178.59 1873.8 1166.62 1847.27 1166.27 cv
1820.74 1165.92 1798.63 1177.33 1798.28 1203.86 cv
1798.24 1207.33 1798.62 1210.96 1799.27 1214.23 cv
cp
.964706 .615686 .521569 rgb
f
1739.41 1209.22 mo
1731.58 1411.23 li
1731.41 1415.81 li
1731.37 1416.67 1731.42 1417.59 1731.53 1418.41 cv
1757.44 1614.02 li
1759.31 1628.16 1772.29 1638.1 1786.42 1636.23 cv
1800.56 1634.35 1810.5 1621.39 1808.63 1607.25 cv
1782.78 1411.63 li
1833.9 1223.24 li
1840.62 1197.57 1825.25 1171.32 1799.58 1164.6 cv
1773.91 1157.89 1747.66 1173.25 1740.94 1198.92 cv
1740.06 1202.27 1739.56 1205.89 1739.41 1209.22 cv
cp
f
1753.92 1155.48 mo
1753.92 1155.48 1714.01 1238.22 1699.39 1378.71 cv
1692.86 1441.55 1722.39 1581.67 1722.39 1581.67 cv
1722.39 1581.67 1781.08 1597.34 1831.37 1577.51 cv
1808.13 1415.44 li
1808.13 1415.44 1816.41 1324.41 1833.03 1279.09 cv
1849.65 1233.78 1845.27 1160.14 1845.27 1160.14 cv
1802.15 1163.76 1753.92 1155.48 1753.92 1155.48 cv
cp
.188235 .192157 .235294 rgb
f
1710.36 1676.49 mo
1772.62 1675.72 li
1785.67 1647.76 li
1791.31 1675.48 li
1809.29 1675.27 li
1825.68 1640.88 1808.09 1597.96 1808.09 1597.96 cv
1808.09 1597.96 1782.06 1603.26 1750.79 1598.93 cv
1751.52 1626.82 li
1705.09 1660.65 li
1698.2 1665.67 1701.83 1676.6 1710.36 1676.49 cv
cp
.25098 .301961 .498039 rgb
f
1798.76 1628.53 mo
1797.79 1628.94 1797.04 1629.69 1796.64 1630.67 cv
1795.81 1632.67 1796.77 1634.97 1798.78 1635.8 cv
1799.75 1636.2 1800.82 1636.19 1801.79 1635.79 cv
1802.76 1635.39 1803.51 1634.63 1803.91 1633.66 cv
1804.31 1632.69 1804.31 1631.62 1803.9 1630.65 cv
1803.5 1629.68 1802.74 1628.93 1801.77 1628.53 cv
1801.28 1628.32 1800.76 1628.23 1800.25 1628.23 cv
1799.74 1628.23 1799.24 1628.33 1798.76 1628.53 cv
cp
1798.26 1637.06 mo
1795.55 1635.95 1794.26 1632.85 1795.37 1630.14 cv
1795.37 1630.14 li
1795.91 1628.84 1796.93 1627.82 1798.24 1627.27 cv
1799.54 1626.73 1800.98 1626.72 1802.29 1627.26 cv
1803.6 1627.8 1804.62 1628.82 1805.17 1630.12 cv
1805.71 1631.43 1805.71 1632.87 1805.17 1634.18 cv
1804.63 1635.49 1803.62 1636.51 1802.31 1637.05 cv
1801.67 1637.32 1800.99 1637.46 1800.31 1637.46 cv
1799.62 1637.47 1798.92 1637.33 1798.26 1637.06 cv
cp
.376471 .415686 .592157 rgb
f
1786.03 1159.4 mo
1786.03 1159.4 1781.59 1248.48 1801.18 1388.37 cv
1809.94 1450.94 1872.29 1579.85 1872.29 1579.85 cv
1872.29 1579.85 1933.02 1580.95 1977.07 1549.61 cv
1915.55 1397.88 li
1915.55 1397.88 1919.38 1308.2 1919.02 1258.23 cv
1918.48 1183.2 1880.44 1150.48 1880.44 1150.48 cv
1839.46 1164.35 1786.03 1159.4 1786.03 1159.4 cv
cp
.188235 .192157 .235294 rgb
f
1883.41 1674.78 mo
1943.65 1659.06 li
1949.6 1628.78 li
1961.74 1654.34 li
1979.14 1649.8 li
1986.79 1612.48 1959.39 1575.05 1959.39 1575.05 cv
1959.39 1575.05 1935.4 1586.46 1904 1589.77 cv
1911.42 1616.67 li
1874.49 1660.67 li
1869 1667.2 1875.15 1676.93 1883.41 1674.78 cv
cp
.25098 .301961 .498039 rgb
f
1957.69 1606.97 mo
1956.84 1607.6 1956.29 1608.52 1956.14 1609.55 cv
1955.82 1611.7 1957.3 1613.7 1959.45 1614.02 cv
1960.49 1614.18 1961.52 1613.92 1962.37 1613.29 cv
1963.21 1612.67 1963.76 1611.75 1963.91 1610.71 cv
1964.07 1609.67 1963.81 1608.64 1963.18 1607.79 cv
1962.56 1606.95 1961.64 1606.4 1960.6 1606.24 cv
1960.08 1606.17 1959.55 1606.19 1959.05 1606.32 cv
1958.57 1606.45 1958.1 1606.67 1957.69 1606.97 cv
cp
1959.25 1615.37 mo
1956.36 1614.94 1954.35 1612.24 1954.78 1609.35 cv
1954.78 1609.35 li
1954.99 1607.95 1955.73 1606.72 1956.87 1605.88 cv
1958.01 1605.03 1959.41 1604.68 1960.81 1604.89 cv
1962.21 1605.1 1963.44 1605.84 1964.28 1606.98 cv
1965.13 1608.12 1965.48 1609.51 1965.27 1610.91 cv
1965.06 1612.31 1964.32 1613.55 1963.18 1614.39 cv
1962.62 1614.81 1961.99 1615.1 1961.34 1615.27 cv
1960.66 1615.44 1959.95 1615.48 1959.25 1615.37 cv
cp
.376471 .415686 .592157 rgb
f
1811.73 1048.16 mo
1761.47 1048.65 li
1761.47 1048.65 li
1761.43 1044.71 1764.59 1041.49 1768.53 1041.45 cv
1804.54 1041.1 li
1808.47 1041.06 1811.7 1044.22 1811.73 1048.16 cv
1811.73 1048.16 li
cp
.243137 .556863 .866667 rgb
f
1830.03 1185.93 mo
1748.2 1186.73 li
1741.08 1186.8 1735.26 1181.08 1735.19 1173.96 cv
1734.09 1061.52 li
1734.02 1054.4 1739.74 1048.57 1746.86 1048.5 cv
1828.68 1047.7 li
1835.8 1047.64 1841.63 1053.35 1841.7 1060.47 cv
1842.8 1172.91 li
1842.87 1180.03 1837.15 1185.86 1830.03 1185.93 cv
cp
.376471 .415686 .592157 rgb
f
1942.46 1116.76 mo
1904.04 1013.37 li
1899.07 999.979 1884.17 993.156 1870.78 998.134 cv
1857.39 1003.11 1850.56 1018 1855.54 1031.4 cv
1882.55 1104.08 li
1782.05 1121.67 li
1773.97 1123.08 1767.96 1130.27 1768.27 1138.7 cv
1768.6 1147.9 1776.33 1155.09 1785.53 1154.75 cv
1920.31 1149.88 li
1922.83 1149.78 1925.49 1149.28 1927.99 1148.36 cv
1940.71 1143.63 1947.19 1129.48 1942.46 1116.76 cv
cp
.964706 .615686 .521569 rgb
f
1803.41 1127.4 mo
1803.41 1127.4 1786.38 1119.57 1771.43 1123.55 cv
1756.47 1127.53 1751.49 1132.48 1748.87 1138.51 cv
1746.25 1144.53 1773.06 1152.7 1783.16 1150.69 cv
1793.26 1148.69 1804.03 1142.29 1803.41 1127.4 cv
cp
f
1793.75 1135.31 mo
1785.96 1129.7 1776.95 1125.61 1767.6 1123.43 cv
1766.38 1123.21 1764.43 1122.79 1763.2 1122.67 cv
1760.3 1122.67 1756.67 1121.43 1757.16 1117.87 cv
1757.95 1112.64 1765.1 1114.56 1768.82 1114.35 cv
1780.43 1115.24 1791.92 1118.51 1802.17 1124.05 cv
1811.1 1129.41 1801.44 1142.38 1793.75 1135.31 cv
cp
f
1772.5 1137.37 mo
1759.23 1137.18 1745.93 1134.51 1733.78 1129.2 cv
1729.69 1127.55 1731.84 1121.09 1736.07 1122.19 cv
1739.38 1122.98 1742.71 1123.61 1746.08 1124.01 cv
1754.42 1124.89 1762.95 1124.84 1771.22 1123.47 cv
1782.03 1120.72 1783.66 1137.94 1772.5 1137.37 cv
cp
f
1769.42 1145.61 mo
1756.06 1145.96 1742.56 1143.93 1730.03 1139.24 cv
1725.86 1137.82 1727.66 1131.24 1731.95 1132.12 cv
1735.7 1132.81 1739.48 1133.33 1743.29 1133.5 cv
1751.41 1133.89 1759.64 1133.41 1767.59 1131.77 cv
1778.18 1128.74 1780.44 1145.66 1769.42 1145.61 cv
cp
f
1773.12 1149.73 mo
1759.53 1152.89 1745.03 1153.24 1731.55 1149.43 cv
1727.09 1148.33 1728.62 1141.38 1733.1 1142.2 cv
1733.91 1142.27 1735.74 1142.43 1736.51 1142.5 cv
1747.42 1142.95 1758.48 1140.73 1768.54 1136.54 cv
1778.38 1131.26 1784.1 1147.59 1773.12 1149.73 cv
cp
f
1786.52 1152.98 mo
1775.05 1158.33 1762.26 1161.15 1749.61 1160.72 cv
1745.62 1160.61 1741.07 1159.9 1737.19 1158.99 cv
1732.8 1158.16 1733.77 1151.3 1738.19 1151.69 cv
1738.25 1151.7 1741.1 1151.88 1741.26 1151.89 cv
1752.11 1152.49 1762.98 1149.49 1772.69 1144.78 cv
1774.99 1143.62 1777.33 1142.39 1779.45 1140.94 cv
1787.97 1134.19 1796.54 1148.69 1786.52 1152.98 cv
cp
f
1746.26 1152.8 mo
1745.91 1152.73 1745.66 1152.4 1745.72 1152.03 cv
1745.77 1151.66 1746.12 1151.4 1746.49 1151.45 cv
1746.59 1151.47 1755.85 1152.77 1764.86 1150.99 cv
1765.23 1150.92 1765.59 1151.16 1765.66 1151.53 cv
1765.73 1151.91 1765.49 1152.27 1765.12 1152.34 cv
1755.88 1154.16 1746.39 1152.82 1746.3 1152.81 cv
1746.28 1152.81 1746.27 1152.81 1746.26 1152.8 cv
cp
.686275 .34902 .270588 rgb
f
1740.86 1142.68 mo
1740.84 1142.67 1740.83 1142.67 1740.83 1142.67 cv
1740.46 1142.59 1740.22 1142.23 1740.3 1141.86 cv
1740.37 1141.49 1740.73 1141.25 1741.1 1141.33 cv
1741.11 1141.33 1741.11 1141.33 1741.14 1141.33 cv
1741.69 1141.44 1750.3 1143.12 1761.02 1142.94 cv
1761.4 1142.94 1761.71 1143.24 1761.72 1143.62 cv
1761.73 1144 1761.43 1144.31 1761.05 1144.31 cv
1750.18 1144.49 1741.45 1142.79 1740.86 1142.68 cv
cp
f
1749.41 1134.37 mo
1747.92 1134.07 1746.95 1133.84 1746.83 1133.82 cv
1746.46 1133.73 1746.24 1133.36 1746.32 1132.99 cv
1746.41 1132.62 1746.8 1132.4 1747.15 1132.48 cv
1747.24 1132.5 1756.44 1134.65 1763.29 1134.65 cv
1763.66 1134.65 1763.97 1134.95 1763.97 1135.33 cv
1763.97 1135.71 1763.67 1136.02 1763.29 1136.02 cv
1758.47 1136.02 1752.69 1135.02 1749.41 1134.37 cv
cp
f
1840.58 963.97 mo
1840.58 963.97 1892.64 963.022 1918.91 1018.76 cv
1945.19 1074.5 1955.58 1121.17 1946.14 1142.78 cv
1934.22 1170.09 1812.41 1167.73 1812.41 1167.73 cv
1812.41 1167.73 1798.51 1147.13 1805.87 1111.82 cv
1805.87 1111.82 1845.68 1103.23 1872.58 1101.1 cv
1872.58 1101.1 1835.3 1006.03 1840.58 963.97 cv
cp
1 .694118 .164706 rgb
f
1842 1105.69 mo
1841.72 1105.63 1841.49 1105.41 1841.45 1105.11 cv
1841.4 1104.73 1841.67 1104.39 1842.04 1104.34 cv
1851.74 1103.05 1867.67 1101.03 1871.6 1100.53 cv
1862.47 1078.63 1849.48 1026.84 1849.35 1026.31 cv
1849.26 1025.95 1849.48 1025.57 1849.85 1025.48 cv
1850.22 1025.39 1850.59 1025.61 1850.68 1025.98 cv
1850.82 1026.51 1864.11 1079.54 1873.21 1100.83 cv
1873.3 1101.03 1873.28 1101.26 1873.18 1101.44 cv
1873.07 1101.63 1872.88 1101.75 1872.67 1101.78 cv
1872.47 1101.81 1853.28 1104.22 1842.22 1105.7 cv
1842.15 1105.71 1842.07 1105.7 1842 1105.69 cv
cp
.6 .447059 .262745 rgb
f
1826.4 1168.42 mo
1826.21 1168.38 1826.03 1168.25 1825.93 1168.06 cv
1813.25 1144.01 1819.19 1109.21 1819.25 1108.86 cv
1819.31 1108.49 1819.67 1108.24 1820.04 1108.3 cv
1820.41 1108.38 1820.66 1108.73 1820.6 1109.1 cv
1820.54 1109.44 1814.68 1143.79 1827.14 1167.42 cv
1827.32 1167.76 1827.19 1168.17 1826.85 1168.35 cv
1826.71 1168.43 1826.55 1168.45 1826.4 1168.42 cv
cp
f
1807.5 1011.45 mo
1803.74 1010.7 1800.58 1008.65 1798.1 1005.36 cv
1787.98 991.973 1791.98 962.461 1792.15 961.211 cv
1792.2 960.836 1792.55 960.574 1792.92 960.627 cv
1793.29 960.681 1793.56 961.025 1793.51 961.401 cv
1793.47 961.701 1789.42 991.602 1799.19 1004.53 cv
1801.66 1007.8 1804.84 1009.73 1808.64 1010.25 cv
1830.05 1013.22 1845.93 964.659 1846.09 964.168 cv
1846.2 963.808 1846.58 963.607 1846.95 963.725 cv
1847.31 963.841 1847.51 964.228 1847.39 964.588 cv
1846.73 966.637 1830.99 1014.73 1808.45 1011.61 cv
1808.13 1011.56 1807.81 1011.51 1807.5 1011.45 cv
cp
f
1810.26 914.75 mo
1809.84 914.665 1809.4 914.62 1808.95 914.616 cv
1806.46 914.596 1804.19 915.913 1803.3 917.895 cv
1803.04 918.464 1802.91 919.061 1802.9 919.674 cv
1802.88 922.488 1805.56 924.801 1808.87 924.824 cv
1810.49 924.836 1812.02 924.304 1813.17 923.327 cv
1814.28 922.375 1814.91 921.111 1814.92 919.767 cv
1814.92 918.883 1814.68 918.053 1814.19 917.297 cv
1813.35 915.995 1811.91 915.079 1810.26 914.75 cv
cp
1807.29 926.034 mo
1803.98 925.373 1801.51 922.759 1801.53 919.664 cv
1801.54 918.859 1801.71 918.073 1802.05 917.331 cv
1803.17 914.825 1805.89 913.22 1808.96 913.245 cv
1811.59 913.263 1814.04 914.532 1815.34 916.554 cv
1815.96 917.521 1816.29 918.636 1816.29 919.774 cv
1816.29 919.775 1816.29 919.776 1816.29 919.776 cv
1816.27 921.524 1815.48 923.156 1814.06 924.371 cv
1812.66 925.561 1810.81 926.209 1808.86 926.195 cv
1808.32 926.191 1807.79 926.135 1807.29 926.034 cv
cp
.686275 .34902 .270588 rgb
f
1810.23 1427.54 mo
1809.93 1427.54 1809.64 1427.34 1809.53 1427.04 cv
1809.3 1426.4 1786.97 1361.94 1786.62 1247.08 cv
1786.62 1246.67 1786.95 1246.33 1787.37 1246.33 cv
1787.37 1246.33 1787.37 1246.33 1787.37 1246.33 cv
1787.78 1246.33 1788.12 1246.66 1788.12 1247.07 cv
1788.47 1361.65 1810.72 1425.9 1810.94 1426.54 cv
1811.08 1426.93 1810.87 1427.35 1810.48 1427.49 cv
1810.4 1427.52 1810.32 1427.54 1810.23 1427.54 cv
cp
.392157 .396078 .431373 rgb
f
1766.81 1568.58 mo
1738.64 1568.58 1718.85 1563.91 1718.52 1563.83 cv
1718.12 1563.74 1717.87 1563.33 1717.97 1562.93 cv
1718.07 1562.53 1718.47 1562.28 1718.88 1562.38 cv
1719.4 1562.5 1772.4 1574.99 1828.58 1558.76 cv
1828.98 1558.65 1829.39 1558.88 1829.51 1559.28 cv
1829.62 1559.67 1829.39 1560.09 1829 1560.2 cv
1806.77 1566.62 1785.03 1568.58 1766.81 1568.58 cv
cp
f
1864.62 1560.95 mo
1863.64 1560.95 1863.11 1560.94 1863.05 1560.94 cv
1862.64 1560.92 1862.32 1560.57 1862.33 1560.16 cv
1862.34 1559.75 1862.69 1559.44 1863.1 1559.44 cv
1863.67 1559.46 1920.7 1560.98 1968.54 1528.96 cv
1968.88 1528.73 1969.35 1528.82 1969.58 1529.17 cv
1969.81 1529.51 1969.72 1529.98 1969.37 1530.21 cv
1925.58 1559.52 1874.18 1560.95 1864.62 1560.95 cv
cp
f
1762.95 1552.38 mo
1736.81 1552.38 1716.17 1549.08 1715.81 1549.02 cv
1715.4 1548.96 1715.12 1548.57 1715.19 1548.16 cv
1715.26 1547.75 1715.64 1547.48 1716.05 1547.54 cv
1716.69 1547.65 1780.69 1557.87 1826.14 1542.04 cv
1826.53 1541.9 1826.96 1542.11 1827.1 1542.5 cv
1827.23 1542.89 1827.03 1543.32 1826.63 1543.46 cv
1806.67 1550.41 1783.16 1552.38 1762.95 1552.38 cv
cp
f
1856.15 1545.65 mo
1855.75 1545.65 1855.42 1545.33 1855.4 1544.93 cv
1855.39 1544.51 1855.71 1544.16 1856.12 1544.15 cv
1856.83 1544.12 1927.91 1540.86 1961.48 1511.78 cv
1961.79 1511.51 1962.26 1511.55 1962.53 1511.86 cv
1962.81 1512.17 1962.77 1512.64 1962.46 1512.92 cv
1928.5 1542.34 1856.9 1545.62 1856.18 1545.65 cv
1856.17 1545.65 1856.16 1545.65 1856.15 1545.65 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 25.4.1
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (VSI526.eps)
%%CreationDate: 12/16/2021 11:10 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BocN@OX9jp!<5Do!!1N\Vek6,]nZVD,9eu`BITmUBbe2`"N=iN3Q%]/@[0FOf0;@;bl-B;&P4;cWI#o]W^N`G?%"Fd4(`[6
%7mFS1p&3'PT"Y'Nc)^mCZ^okL1cXZATud8ELC\k+U]:2W[njbca#SoV:VM>Ko];Pq?GCgWoXjScYF`LTrS>eCqnG7B\bjq;5KRgb
%n%O,Er;!BXmr"^]Ie(87Rd4>A8%6g95J;L<qShJR]5m!]N/r5Rn%Y'ej9GB<jn7"S?ARggVf1G5CWO3bgu&,/B)P95)NGp>bL\WH
%YA5atf+d<7,_,!\C\@OJ`d\KurZ=A@D6A@coW_aerV#dIa)@Q_H79C$g!7e2A,56SnFU'0J,fG+^<^[W9E+bL-Tg,Cs4[G6>=cKg
%<CL62o5Jm::VKQ>3.C/_^ZDioJ)T9n(O&HCo>MLN4<s%r`U-Qh?O+3YT04<i626UVh;:ADna5qgDk=6ZI<=m,bOZbShYoJeO?V[G
%XnF931L<$4H<"Ek4(!WPl4q2$_H$69fk&?_Gl#=aVgn^!m_:r6r6<^Bf(%@qhgG7ds-!rT&Ahh\?i9Wpk>,IbroLIFdZ0$eY!)BW
%=5Q,g/oSDXi:ctVNe>kpoDe3:h`ZGeVl+HDke;BB4ZZ%r?p<](hnSsJj1d^q&G>aYhgG=njmQOSGJ:(65\X<)HYN*4YA+HnTCQtb
%V6ohS\6X;ioHdZaN5r9Fm3/tamPg_:d=#BC)#heGB7G7$nn2uCO@OS_Ck2Q`os8S&nQj&8l2U;9=)IV;+91$;92iKKoCV/>)BU$f
%J$k^omcmk\io.qEhs=^`5d,Qj+)danCWQ-nrp!;QgZ8\>:2]V#\+VZn4Sn_$\_u.6h"]i\?gI17UG&3g0>IG\lW;tnqhpg@qWd$l
%+('NhlAn_bs8D2G2m6O\5C^$:boct`r:#p+O2$\uHl\.B3[X[+Gl99WQ-"]=11=Z&q#*s;OfJAs0,Gu5S40%BS6G%2o6FDuT7-U#
%GJ'HQg$>OtrN0>J+33:5\R&6eBWgG$?Ukq)IILRn/ak$m6iJal8''R6b.m&QRWa"\j3&O95(E5WT!,W:cO5+DUZu(Zib(K7ce.b5
%\]Hp/=T.MkO2CC4rGm,[k*\'q*D_%J3FDd]nXCp+p<.)ur9dn;HiEg%j4En^O(m>J,T"Y6WR1q)C@Kcbe%p_[E"N?0*.@hnm3F@U
%oZ\KGo?R6Rc_!H!e*G'3rnFb,]:7F0J+mlnhn=@/r8V/ALXd?([u@@JP\g=uI/rG/=FDBBaDUhQRdb%WpZ:`#D;Y>dd`)7[YKpO4
%)W,u=rNeFYFZOktrGhQg)DQ$.bNcII,N%84]ghri2"SBMQg\VQn(rHlk385A?i9od(f]BVINfI$flOO+X:ijOi=8Xi5PsL<N9]<5
%`8a'rQ\Dq_XYRK-/a`.qDNTWI?g+)0nosgWo;YSJM/<-h_:FU=Dos#Jrerp'j3&ei=f3A#a,!is<;p-hM6A!8oG@EZ]80g1$[oG%
%5DQ3Hm#cdYYGpR@q9t\fI.mre_U/&&rZ:OOmf'%6mJ<W*[GP=tr:/>/BA^DLB!YQA2]LWs/On?Zs(kS]A\HW-^tm.8)bWR9bCSP&
%Fs$06g-=:pa7Y$7_s98-SihN!j^5`KoCO&8Od^d3?bE1K!up=oX53dPn(t^'Ja#-'`4)?.M_?.Mi0o"7rJQaYrU5mj"n.'/]<?]8
%G1gcJ&+\3;cd,q?MY<82XB#;uKs"GUr9PBeq_-hhIduh#l#`cEO2M0.S(Kt(l._29T6<.Hf;JQEp#Bt^M0]--h2d'co&\mJ@X.pp
%6p#DRj>!"_iaCj'br6.Tr6)t_s6mi1if8jsiem&>mr#i5d:_A7[E$mSO?sC>gk8$S7OJR3Q?h!>Fkk#I]M1T3#YZQ;FId<t4rr,>
%_["lVOCd5.P+*FMH(PWC=QC(5QVbUa./;7`0@t72bH]i'=2hkS1?NATV:OA]kk2ODeG[8iocV;[hDTYa(7Mm$9=T,.S)D69>&W#5
%h!it*K,hpTgMXX`iOaJ*O)i=BG4Ba&Q:"uOb<pUAqWF<f:#F-6i,RgtMrWO5iNIkSdKJ0Y8!ZNT=8<PUh<SYXDRKDQZ"),?0TVtK
%[lA9\l1+8ZNTUmu6lp&`A37rU;=/&gkW%X`I</YsNqK%CjuAkNa5rCE*oHS!IG;#nYMQm<+9"HZh!n_6mDF>_\`:BLrC=HZ_[$3Q
%d4!CR=(UZ&91L#$=+X5^a9:odW;$8sh+IWD6DK:gLEgr#(G1h]$%ec5cnl7T:tltR'7CN^j(-Os2)S.DRrj`ZoM3!B?M"^a:D1oN
%76P%A?W6ti",RN1\(!]!-:A@rR]'+#WA_Trg6[HU,gf669?qXCC+&3mBIMD.<$0IbU8.F&W1H%J=38<GI0GTFW3m8G<`s.=7a8?l
%?-ln;%M'XXLJ`u31mr*bXZk2YDfj\mg2`##>O/hnm;>VX/R!'QNb]*65,\p%[[L5:7p$f%c6Jl"GrarGe>MbTe@-N?a*4&Y3neul
%\`:BK]C,DVjGrsupE/X[B,[UDT,bNXD#ueqY-a#r;7&nQHNi-aQJ*UA2T_gjY_X?pXBT/G$uM/$T*uYCg-kRi=>?E$"SsD$>GI!c
%DE?l2>/g-V>,r(FU44)SFgHY1%F1HB@CA4/BUQ9*M.S!3Q"5'$BU$*V4,`73^8-8@ELb):kok75eP3'7Q6Y#o:QBO?Y]7oC>E3aE
%;=DqRVha'49agDgr4/+TIc@?rq2Ts*40CE_rVh%'JfUR``*3l9+RTXb0d`Pq3HE/URdI>&NahH:>!,YuSg8W^Lo,dcF%pLoOQ1M\
%Z.&idVUdd:]d5]h:idAXK;c=SDk1[G^$2WWGnk'EBW<;bP^$N/UZ<'`<M^!'X`TXlFV47B'Fgkl8+d<Jbq6=3ZjO/H/l^'r9qaHP
%k!*JSR+45^1$?pCYUZLZ@9*GGJ@o(K=)5"@$2R.T-29u#o8(9''8k99);`[.C6h*V=2[VFhi!Q#[e\tKaIArr*.9ic'#rh\(QOtH
%Njo%Nok8ifmr<=@3?CAohg#HVha?gVmrSMkmPm&GmHs:,L0']JPAfK`5MdFlip_+oW3\H:rc!3Da?]*tU_[rQ_SPVXpBMQT?'a4h
%'0,EnN6e7-QQ$g]Z<E16OCXmY)^huM+AVd@b`F<\-HZ2Uf1or-5mH>VX@Z.;^asO[aujc$,EK-^hoKp)10:NXs%09mRK$_>318/a
%):1;tjgr\..Q0d4lQ_8knC<A4EYP(KVo<[.'=it..&&Mj3MKV8^:5^9-p$IO`A?Ng]G=3D1S]iY_4O,r.>[r`Z\)m;\d;]sT!/Al
%rXNL+ZNiFT$UgVDZ:jbK@Zs)lMNWtIN:?^4n);&-`PdQ.:a6$2%b2?=Y/lAfhBqN[J4&t-k<[W=DL!4I*:+LPlqfFSKc.m'Rg0D2
%LCa0(R7CR(Bm%A=EVd^/LYNJk]CWqthJjOmHAL.!O$S4JGXUtE59T(M^5(M6hWOmuh!t+3ZUXbl;*Jc[cPknDh=7g@q5dFWCR!-`
%jjW&51eQL#kg@Z@LC`2*It%=aj+$kX,/1(fq\FACWaPNC%ot$db]b>Q#+t!1mrIG+VuI%7lk&^,m>qtXkgS>Sju[i],QPkjp/b#]
%g3g\mGaqq7Q'X_IR')=mBlj.8n&@4bmZBli"a:\KYFB<&IlFOPa@fj38-+/I(h=m4N4a`=k7[POEX=jK$0!G$?sdK1+FZ(HSEjC^
%$ZZZt!i-7H@5#B-\7nJB0pCYSOtgY>(3r-jOsf.iT0/b!&+e\!O8RRYD[0g4Z3F^te1/WAro%/4+XChm8Fd;CSaY[W5;!De:NA[A
%ZJ;K@=f64sQ:pC*I#,G#X8rLbh)484>kj)5n9@r#CUiKkofgnXm0u;VCHl[jI=g_Be)fg;nrr<X+k<H'Wf94U$jI8j9b@)#MuaB>
%G;1NHq?B:#eO&,GHH!5lfIKRRiM]sRYXo6fFf*_0b0e#\Cr#HJK1NH[)[-U?,:%pBd,'B"[g_%[L0lc#7akfX&AGP/(^4mo^291s
%Z=ceQXhhD==HUVJ9M&ql377A]K-l2o[#54f>#\!8e;F%M!*BJNH6E!.CXAs4"L*elFhqr_1_+1W0Pa(YTMAJT!<&2+&,PI&a/pCQ
%LZ@=qq1!l&RtFbt0s-I`/=XPOE6#CILipl](%o:IjhBN$kH9j4TA0#^`k/j%ghD+@35YBN4,/eWioqV14Hk3KnbJ46HfZ_bmMVs<
%Q@u#AF%9FuET'=8##k"N_rm0HIas$ILF"*6*0_b*5!i+;aDhuQdU:StL%+n!G^_f=!OI_t9*WTr!N0(nr':!oU]`"KaGU5!3h=.$
%L;5D5XT<?CW\(KQR5V[^5kYI[CQN:aRR`HS,fK%<_i9ls95kL7+j@<Z-#r#lAAu(<%:.l_,er).HCq[B^=,p0>mYrPY#N+]I8B;+
%p&r+=V!hSaaL`Z#mr!(/?)_<h.Q;pe[iaiuLYVE+kLi_hIE3GtERt",J)>IGVGYD$dfN1o>@<9t`-qe>adeS5HBbsd6XZn99[5E"
%"+d;Db]j+\$7gt`$<X:LbVNAc5[`jDY`aT1$`mm3&n*)<8of`OHkB<b"I0rmV7RkH"],8r'F('QT#MOB3e`b%QrGE"ZiuW<5bs/G
%<Zog+6Fm:A<BErAUD7#ZG<?+g(7=;<=Qfna=W`<JmK_-Ehf51I*6B3s,ei+3W0[uTK-,9$bD4mCNo,6Jnb7FO'*rq<95;'jWbZLC
%fZJPURjM0]K"a6+0rL^bY!qAMnI:XT-SJZd-sC7:bHpK)b`sHpE-%b#%L-]-=`95"_GR0:JF,c-Fm>W/n9-L9qacP?Aq8YI+&F&U
%WKD')Frq.\^0YM#"21D#W1AZl;Wq?$Dp_Jo+#)Y51JKQDML*`R[rb%K.ldHqq)>=e.T6rNKZ577[:d(F1OXGi"<fg&Wn.Y3^SZ0Q
%r<<^4WTB"O3p8Uf'[qdi)@TC8WrG`thAWo,a2*dIEF.oJQAf2iBqc%o1U+!A\iS!UO\_"D5B=ehi<XWKrZ)5$p3i#!RIEaAI?3F`
%mR-DeO0d^+pj9a87ao0CL:2Y9I*K=u-Bkf5o3bZj0!ZOi35+r/^%aau&Mhs!FV7poRA:?8@%qWZ6m<%A$Cti[+;%-/WrnIk2:Sf=
%'Q)?-Q0:]r1t=$#k/"q?(*17Ib&f8@Wc/rWk76!apnP!B3[T`t>*c?<\#E(lfTu$oR%.oR&&VgYSBWFK5/ZAS/:N=:<%PTY`]%$:
%*Nb6^g?,?'@oM5PgG#6>l,"#c*o[$Y3sP!H[iK)b>*k9.mh,>DTB#^L6gj`pF5D3_:(Ms:TCho+a7hUN-]#d`6dJ?/m94RI<QT3_
%>UuKLQOcZ(s%4uXaZhGt)F!d'X,pE*VpR,Zr07@\iJqAJOcqA26.f8X"db)Ten##_`<DNUjLV]`D7S-TJTX$Lbq,JbFF:hPRbF!$
%Bu/<,o][BM;JB&NPrAkAk@IEKG:]/.c]n-MrqR(D7o.%%ZB4RqmCd#W&(9YP6nHdqm5:c-<2Q&Dg&D)_+78O9qJIj8;<o10\"i&E
%,o/BtmHlB?C:<hf$c'2OX#e^iL@qWM^l@$hY_g=#2JX-&Co(,MPG_]a*dssL*i!A*`smIc/Ddb/Q[D.21s+*.@QBQ(0B145d@1)H
%^b=0<?6=CO@2E"gF[;VSn\c8/3SN.`c]4!)/pFs=U7WChml&J9pmu)d+q,4uZ#Ih49X03R=`2G+)^a5pb2cZ`17Dc`VS15.KB?La
%ZF*8Yrgfq=ap\psa@ri(BmS;I.9A;uc)Y8N*N&p\@qO.CM:D#tLAdjLekl'<_1"MG>[N_R_UgdGg*#\`N=5ukr<V:`n88Qim76rs
%+CP`9jaEPJ]5*/f%N;LV?sR0-/i,cE(n/'F8FC.W37!,EL=du.B\*Z[+XD6S0GhT#8^-UC*g+dS=s;BG$Wlc(1o4$,#kB/bgf&A:
%6u#9QLnN);<IPn9-C"E?2po]).Vg$@iA*;S(0TK:jO>1oe9.RNoTE`_?Ws!boF;tX^>9I<%VHC?eMJ2.BM>5p,`9LOR8[de7dEVk
%55t1l[aW;EdP?Y=Kn]i=p07+[;rT?,J%LcIpaIFWZLprCr^\mtH5u)ha4d`LGR>D%r\/,@j8lU.l'du;h\6N,>iY3R[.7*g9cJ\H
%WiuLmBlBC3TpEc6EVKInfXPFc>]/s\UO1af91>4I;0'^gZEi>0jED]8@aT69D_&TS0eLIBG3Bs%_DYsh'R?5DiaES^.#'@c)<L(J
%3ZDbW*#RM)(%^pGg+]mA1o^T/0@`>""]c!L'0'AN8;kGDK=t/7<oIT;W^5!BGufkT,Sr?;JB3A_*)MBW@^*qjdGbEM3<6"FJH!_Q
%N+o=PI3Wb_QAi<X!Kh"t;)'4K//ub[@GCUmM&lEfNrOmlnZV0:G`G3($QN9WMh.C$Y)?cF>K3t1)hBd#asbs9MHh9c?D+Mn(O6TO
%,V-DO[=FDJ<#4`T0K3I7.>a?*J\6f$'sSnr.%XOh/i(I?R5?5A7OOjjh3q$Q)4?!rM)c4oCSFNQ!?U7V$sJ4O=lF\2j)uD30&U?-
%`V(.75JmStLXpQ@Q]HiBTV#$j%+9\Ao`-eqeeA7"j9$d:")FX/Mj+;_FPmcYE5,nj7[X:k4l/LonF"1VfhZkV*ETs!K:Eho<D,W[
%(.EC(,ca5bOYu9;$K)bNU*U0n\DXGsc^Z,(BFoHJPgLRfW=7!nTZX%D@H?6Ycs$%aS/pIHV,1Uu=WGCCO"ubV)e;iA;N0.^=Hh/a
%#k9qpjfgd@_[Dr!bU1h\)CF27YNGqb&Y*&(SGUG(/DO6mEcpWNR43>BpXA#3rL=JkS/u^kbLjYmiuXUKElWBrFU?m6o=+l3q1o,s
%>f&hI4geb3HWR6%MYD![FrO%YmXB`eDQlcnFPVSS]r]oU7]K\Ee6OQLUU%1m,#i,432,&"j;k54a#gMV@]=3mV"KUlTa>SVREXf+
%!aD*BCBGsJ1EgT\TH+Ir(mmUnPVDL_9`3g2q0/D/HPe3IRKRHN"^r_Y,8`<OJ[5O'l:_G#k4:"lIP[1>7p>E@/SW%ICt"!r.OfT^
%kD@%J/SW&eA*]Vu/OB._9j$h.8&Fch\<oC+nX,-d-TcRn3I`qq_G^^;jt&?6*Y:GR`L1+_*qEOPHP]"nG6HdR!M)*Ma#[gXIH%i!
%j0B&2DEQSqce\E!9>>W8=3gd0R-qYA&Z2><50hj8-3UP92K41[NOs^l4!9-=j5"N6p\XR]k#)*H@tG?Zj*h!I*QLUDn>#Gs&hHES
%;d=%KV<hV)4K(_J9fCAKA9t8E7M<s%l_N*_W4Y`AmZuF?#dKY=SDqGTR!cSA$70XfR%tReS2e<:"2TV*Jd7QTL5G/JhU2Uh9F/:>
%@UC'mGa<rl<:s9b93S0!DNZYSM3m7?##63KP.W-9Y:sKb*1tU<_-fce*!b,p$"LI&5Q,gXq@j,4coWW_h1Ln,!Eon!ToTIt:EDTb
%>_SV%mS`^1GLV"g`(fkUUg%VE+??=WrBR[M'-(m$&R@kC<Z?0j-Zr]:G5]J@i#u?Y_*r_aAYtB]"CAnm#MZ7j@R13!,c4&fj]CMK
%K>)+E,s0KA)!#+V?I('KfT#"4md2U=]nI)U%?uJ4f"CI]UGpmp/Y$Vr;R69!.fHNk8X[f-dlXQKGOl-f(k6SqZ#aqdM^N0XiU2O@
%ArPZM'6W/5o<L2#X1[O3(Y$8J(1C"-pXRKkrQ5$0g&4^]ioCF+>L(cVFI_ZuX;'d9E_Mh#kZ,od4p+0.(#eU`6dFlDl=97V'0C:X
%)\P]SkhF1n`=:cX?.3$/&[%RdeAWI]<b$W:]7'%AO-ao\,'hVcC=9<&;D[-H2(1r*h9?polT"?r:,gaagW?"7Yf,RC]6@Af_m2F$
%;VM>CAr;u0Z!4h_CVTRWWK(NOB_J9,#E3%(:(+n+I$<o5WQrqUQK1.F4URCB26ls:K+h7t>>;,Z\$]+l-9cFdl7OUa#YrH[?m<R@
%CH&O%Hu_oQ5X9pp#YUf"AcMn5`%BXaY#2SY8l!858>&L+HiuS0f7]aq4n%Toa&4q/Y8?=n>Ca6Y@+TrEFL\;7=]_53C/61%af%5Q
%<h#%/'C#%B%q]t+;GlGO)0e5Y7@&gm;=-(f2#rkVauPbg]PurSM*D7u0dhVZB.F&#bcA9$>g27N*jdJ\Y`;+gHj!aV2cpTA$NSK2
%Nm.qIk[k:Z/?fRLRthLYBJT[YF@XT`2h34o3&Au@%NC&u]\7\&XKbLM3(_W0.nN)Bhc'V(alhp6,JW=gb9;'\S"nhc>_;ug(goAb
%N[HsNG91\YLL<.'Nr(WaCV^4MALnCCZD=!*?2EQFDdB-'SJ[@I<@l*LcLO(u=RWUTNYBbW<SaG@GQ!Q>P1_05NKg8b[g>U$(#Z<,
%%ii(I]s2r0anln/G9>s<0`Z;^TIUS<0^'KRRRJ=#U3n;.N?kZJ9*j#&'m3&^O+*nH1e,Po[]KD$hQFe3.-hkB&%R'I27ZbN9a$lT
%iQNb8_.VUJ#P"&N%OHokjl=@gq=)#KH\fE/Uok;4*-^mPg^2:g'N_h`,ZV2,_-`$kWpBESLqD;dTIWS>,&X&Hism,B,OSs*>L0#r
%0DTi7Er!aZHf_!,=+8#W;cc@-anVG(H=`V*cGLf(a([[[o'(hSBhg;DeO6kjqYbLDS]-F$a)HkhX:+;@,J?dUCuOD9)!O'.`e$'7
%`ti``HX$9UE60,%Ob^b7^MqI?/L3GF_<]o.`XY+Z;g*Wn48d5"4%mY;*KrJ/>!.d<=DVI7ZEqe^>gOq`ors<FZl+c]C_ji!CUdto
%k#hVepf11XHQm)gR_9csRJl<j!hSNkC&GouEO$T6N@)j.^l'+r7:>LtB8`:KlTRhb)GZ)(l.!ddS)`^%,F*=OK4SDBm:a)>*E2[4
%4]BqD*$c<nB`s@Sb..&_aBHU7fKCP*h%&/ocY;`gE*2M#13Yd@;&35[*NXHE=<_%kZ]TFBe'lt2l)8q?X@Cmuj(TE0(h$Y6RYAH[
%%mDeG7)d*()7?@KV.0`TBC]">Y]DL+-Wi3Lcs\Km^7**nlAeDHg-cCN[.c>Ja.+1OVQke,Ys^a06+WG[2iDZ*`l,!IW9ArS:efDD
%?.)*I(P^UhA3&r''@n,NhMJsPSobq;*OsZ]i+=]^/R:^m37b@VaJ?FVnub^E5'=`h%-i6NmGMW,#'*FmM-_DIE^V_T#1JTB^FiCj
%/6U>2[7f+4rGkA:N!a*PZ(+6]5-^_>TeX+<;H"ZSs++^-&7h\]]ZX%QIJS"DFE\2s<2<S#(sk&^DqUOdd85aE3iib'!HO4mVph1D
%6o,]Db][hbbWT"8HPKBKCm(H5`9SIa\o)61dibp4pf/d\OB?W<^aT"Oj<t/e$]/1LZ4`@?Y"@fNNY<gFFD$.DS)p5W"P/?D\k&4E
%d<P]'\4)1p[I7[QX%Uq[=4*BBi[M/Oc#!&:ZINZRCSn[:SP:Q4(6W"M,1:92Un6_O!f1(Un4is_bkk&kj?'(N'5(KH:t$h5T1j\%
%;<WI0k.VP?M\XLmB$)ZEpD`sgGO`7^=^@#96aYkdqcP+-,OVm+I?p7](>pU_L1^hdOXSWe#rUca:Erj-MGKd4V[,QgI#%nGi$dCo
%CtKD5kQD_0JV?Wc@=ee-4VgfNE4Vm<BJepT@+NBQ8&K\4#>8.tK]<*.6,phj*>-L1Hf#G*ai9#,i49HN]t!LNF\f1;Eo!4AQH\R?
%p&&.jl)IfDZ[CT4ZY*jOp8d%UpMX9\pN7"Mqfpr?f$@e;%O-hYfB_;-9YYXMm$H38%j0#%?haHGoBX+tpO6I<XOmES1cf+TX@L*4
%OmD[2=H<V]85dHZN/@LF4KM&k1+'I&^L$?K^agrh@L0^282%NN2!T?>(B2&:V<[&%T,DbU64mDE)&9mh8ObN@"iD.HqtIbmUYYdi
%"\^553VI7P]1d+Tj37F]-dMZrOl"'^=4]!q`d1^`ch[9TX-CG[g#uN*jacOKb/IW@bl)#%9jhGKMm:N=-IY^I:8:#%Hk!;^IF[>-
%/k-m!!;hU=lT$dHq+ES]d&&Z_>i,WD#5sKfO#JPp<@cajXuF?Irk$/ARHCA9!jY8&dsNZ=-N4MgOu\G-0+mPHB(4IT02'2QRX6E#
%[_1AcG0Bb7Dn*I?`Mb\X,VKu[9C2R-[QQ/:k(7c-De8f`laPW_hslA:V6/WPbk$'[M7C4]qG"Hfl::[<\I+AV!8#.[[:hN/=U._0
%@cqJOiG^*!8s0>[;e6;ohRfSM5L'/*XA+=o*iBA@dP!gcl.1bR\)'L6hFs3H+KCq0nM[o0$(d%>J@S>B\^,Q6@qX,Qnib7M()p-`
%YNlqSFZ]=J?S]*Wd%B;J`tc0Cp')kD`P"?[]p-;1met=)G:t=eb2S[blu\5WDQ-:TX1d-\gdJcAja(118I[UQ1REH!EfV@&E>;$W
%<:u53pYuZ-_ImbDV:&^7a&9rEQYi-pa.X"kBi++@W""Wa#ts'C@_kpn.)d)n>me"U%(2^8nMYi,hJ^H].@)p?4<$r0&C`I4q'?0`
%0h"n"p'a5mO/om:T\f*$?03Os*Fj:<Veq'Vma"@)[.;gbMuobX?p2)=2rrjhXh^c`[#V'sODZis/L-*^BV=knN\N8IZdTpPf;#$G
%87!5>`2H<iO2i6B[V3M,LDDnddqpYG;9WYf3iAAAV=Ce/eDG1<X@L8,N=-UA1+&<M^UoU#otKL&>uXncAEonIqiL[_=Sk.N1MCe]
%mOl5r1dBf/r3(aL:4nPfSeoVZMqI=1<NB+c0%fFr?+$KQgU!^#27D47YgmRrrFCjjEkq4j<UO_9^i&ms[2iXtPSN!m+BpDd`[J:)
%>6>j]\(=#I't_+.WZ!7bMVVNU=a^kEb(AGQO%/r;\J+;R$<+&_eRZKp/(7-*9gs5O,!"L00E!\mqADqS%kRDFR.rcj5*(QHA)_?8
%inkPFrS+sIQZqhsIZrDJ5"BgX_Y7`,*Bo:ojVP%t.48E_LL-piM/We\/tk9/)jfKG8SCT0`[%e6hG!rraZb)CS7`Udd,e<8ofe_6
%V\FU,jWF'SZR!Bu\pS$!VT8nXR_@o)?<TF#"/=U>56(`mU1=%RIp>Mkr:mn;kCi_9N9@B[EaRE2jM*,CAc9.Tq9OOrZhuo^SbuiV
%s!o9fE^n>t"g3gTMcB'[EB0^^>`&jc[s6,cjNUteC'R9?)S-^#,2kBn,g/[;n*)]N[\I:[n[GG">UtS*E0KBpG2kK>+mD^EiuYgP
%Mk/\_@Su7-gdVP8#N$_TOr)4^r>qTl2*PE:KOeT"/;"HX'0iBK#2r?XJDlC%NR=/1-nct4K_Ucjg^JTTqup,alGcqfF\f7H/id6@
%F3=$qI0;JZRo()_;D+>a>/1kh-^t3fV*!@D[_6R@$j09a8<,6tJk=S`*b;8C@`BR$p"C8>o#?(3Dt^7Mk*p!Lea6nGL"Vd]il4g,
%Vn#jLq?C0hG4%;qKYk2[c-5R4JT/h-M@Th@%VELnpQ]H)b`tnnc`H]bW8FVta!uHR+k-jkCkeN]o`/UWeFI9!cVhTCCjk41b"Wgb
%iNcg3g+Th67fqLs]5NXm@U"pq-Ojj^9_8]?jAMjfV0N&--cs<`80p_;*\]KH6X5TRZ[!$#&N9j@Pgd,ZQXM0+jsI;%EB4)H6?^Lj
%4?/@Z0lnY,iorWOhAD;DC;th_i6C%sU_>_h<if@..r)AEm6't/!>A$^C#^nfhp'r:qfMRp6J-#=5%6U8/A$u@4%=8npW'mc7rl<Q
%?>65*>E#3I3FtVO\_DnKI5nk+_\iaVG=u=3qI5R&\7'=^cl.GBK,D0j<Wp?e4[HJDC549eI++,Zet])l)N]EK&Gdl=IAA=s"4jJP
%E\V!"6SI4.@]ABk-uV?WEP'rf&qgg-'%`ZB@X5*UXigYjG5NuJG^g@DnsfRWJJB]GH=(Y)S[&m1,7TuaM/H'kM7C6*=@KOHm)>_4
%?pE[SCIY%3&Zrl;A5OpU)M<`7)2JLsd+EehfmL/1fj(-Y5$9kHiQ9!RYk55lBV"KTf>deG(k+r2f@Xgo=o$i$LXY7k=c@:3?[YBi
%DC0SY&t'TAM%Q<*I/aeN(_I+p-tK%(Y;?2S,,-=ZIiYLJNE)KJ!Dme28Q.TY(+Yij/M5q?=fe>5bLfIbgt)"tFl[#HV@Hj"/XG2`
%3>.Z>'QVd[SCXE>Y"%*_^IC*'\fQQag6UE9-dTkhiCLt7[)pqt3#mcpSkZZUa5TW@ADC^2IOpLI')bh5k/ZIPB->!-(kB5,s!]nD
%86[TcL[2SGoD[Z0(eXE$=(dT=\^O'__mkWle"(#O^dA[V\sH8?R6'OJOOU0IKZq$Lo:<EVkkb&J/^11GB&VnsAq0B0Vn;I<mWnBd
%"I@@?/>!SX4t!R^:13mf_"'L:j`:LHk6.*sJa(M&$D5AWk:uLP9RKTCq,@YO,'ihH="h=5rTrX8B.s;We"<e6r:OtL55=f[r*@h0
%II[*WS#<Gsdf9&AA)\q@PReg_;0W&#hsGg4=&gf4S[?76.PC*dmT3[`e1MMd<>*M,I+,M&onPcln*foSj.bB.i@k'!J!5B^:QbWZ
%)J]#Ih7rju\,5;2YPKjF5TS/hGM^#`q!<RD?Z*gRc$m46aW9C.9jZiZros:PS&;Q[Dk=Xgq=sViG!FIS=T@XJeZ7lF+(,&bRde_p
%RqHYG]mb(pprWQ!L48d,B@!26qX)`ZDgo"h^N%6mKE%D_s.@'X],^IdIq(`>E3;(#oFuAQN_O(8kc;Qu[If6pHM+]I;f#O_e["d$
%?=bkEXF4QkJupD0)4WIEG;:&>`%J.>Hi;*b/-:=_A(OYl)""p_HDQfPb)PBpKAXcbQ92]0'"LoAa'J'!$LC>GT?:1$1%4hG'OpOl
%eoLX<nW'oF=Kc8(#Ebf4q2?GZEn+X`,)KB1?O"2CFN%8$o(G4PM>dcBd2lB2afg'(8n($RIaHR7Q)H:Lles=N7Cn,E`OP6,12_Y-
%Mm^97rCWYE5"UF<ab4O($@!S0hF'<j>*88E\1Gcnk],3nAkh<sE0Wk!m97(N!H"4"a\jZ$^pKFdlrQXJ&-S\l17GH+f,dge;)h96
%g<$P[p>2\s!dX1op]<b<?sG)*!Mu3sB>J<Q7e/SqRM2pGdWSu31C%W_XPtAB^76S>j]Z+('teON#*8k]I29g!*'GS7jQ6:"lmjP8
%8At.eRlPaa=^e\2.7Sr7QfVYc@gBK11pQ]BPnU?ScZ#VO72"\S]X;oN.q]*la$8W&B]ahJ.?YrD>U9+PY)Q%OR$T/IXf\X+09r,L
%(o3Be+$`_ph*.*c`hd!rS4jTPX1[IFep`lF-.4f95N`r)@E!K#lU34>*SDW:Q7G-a7kpH-51!KHa[]BId>W@'7s8$f.-\H:5;\K%
%+rs't-Aa*gXe&85aOk^B2""h=)<GElaCl*lN&K!Z#'\&=`kGGnQH)^1:<453#Z@8r=lm\j-gAbT=bgUI8Z#b._noF;GSoRVn@W\_
%1+MZ@l.>>`^T'Z5b+'js[.6u*nOK!T)=Pdm\#Z<AUrd1OGB#?_QHUtLIpGQ*D@9DDWue_0*1+bI5dh_'M@P0j^e?9g-(bf<V.^g+
%'`P=m_j-T9kX7P41eP&U4d>#,4!gUE]<uXX=&H%7kmUfH*@f(NPnP2!]sKg>h9.LfOS5D:<XmHP1$-ru[!n<LJPV*O:a-K5#AkX!
%8tkLOA.9DXHJAalb%k(%OB6QI<f)ckRb9r$X9F_SOgnCQ2Y<:lVKB6p:pGdDgJVH]dF4Ih<CVt8@aq7UYG`Nmif^s3'-[O?AB-T[
%nr"t0SY50<+OAG.6au:p7)=]P\;R&SYo4o0+UoHKnrp3WTnp^A`g;2)a=e2a&Yq"Q/=mjbMj-%qg%o9QZI]cO42a=G'@Fcog0Gbc
%]9l6Qa=>]M`7-!GZ:hH@H>M;h%9$+L<K(*6DYdpbW@S;<AnmDg/sRsJ2.[&"@4/T+?6_r&fppL0\<lCgn8^nEA0i3s(=Nmu89np7
%/jl)(Qg%P_$lBqQdXcH4:(1IVTa`Bl$3je)0ceYs32L$PB+3$K?4PtLJL;+97X*BQ6p+Eo3HTTrQ7,;bqo5S#mm5OP:@)qfBQD.L
%259%e$KFuNG=6+-4M%2ng$I/?/`P33(RGnng_W5I;6UO&Y<Nnkas`T<<d@/OHit'D7"Ba-\?aaS.oa).6+^%+=H+d5.!GAGb*\it
%@F9Wo[B`>60TVWSAVpS_@SV4Z==4ltHp5PYS8Fj70]aWbR[k[A;D<c<ktrY\.AMH$m]nsu>#%NqH7=ZYO!t#D=$q^1(4e#@:6aCI
%319,BF*f2(<OS(c%m^?H/fc0,:2qssJg^aVe^Dl`>ic(SUF%W)8JBuT,T3t]\2<2J>pNNXLI$M-Q9N<Fo'usj8VXQ6XG@!/Y\;M-
%_`B)Q,*'Jb__a=8.<a^gmEh6kYelldE<ITSn?C-7L:OgO^'lRuHf(\N,cqVbABBD2[[#.[IF('MPFN.Lf/52F,)NILY'k';M'Q0u
%!`Mi#ZOI"*ekT@R`.sQ].-LlZ9RIY^R)Obja1+,R$8d=H!I@7jD<I2*,@[^sm;O`+K@i-c+5g@nQT!-;1qHFToVbEq:du>:1Va2%
%lsj0uL(Y8AE?S9I4N9C?JI&kg5#8OHm#S*'-Y<t*Hp8%)![@eVS\VHL6W"06E#:a;3k\Gj*]C<oa0u_;;7'!;FsX#TXJuGrotrbo
%2URN4pP8jF(E+"%I(tkoaZ7`9bI'YLe.1(@P9mkPE6a>CQBFk@]8K04c]BcG\O/phXc2_qlua_/?IX;j0Z:f/5eF52cL2%<N'SYK
%%UqeH!6BbQ46l`q+LTR1]gde.7*</XAqS6hI0BbB>ohiLUjso7*lC[80s/I0.!<r5k\o^a0)@&+&J\S`>q;tTQpWXC49[PYeW@eV
%Prkft\T(fl)HCneb;^2mBU$Ls+sol#\f+>+/B:>;$?S-N%;RE4X1g4a-$b/7BWoa;2I0V9l=*o<4HqI!F/F1>#JV0o>`goT'b4"J
%?;ctuQ>/$b9J>q3F<G0U\#u5HRAOY=3NnZBG=NRR;po\h]VITa*@a4/!>]3nWC0]8,rVtr&mZ>,O7Z"_.^!)i?%Ua_>DWF)daIp$
%At9I,GO70<>.!eHeM)&hRLe5gSJVBj'tW#CDS_B,=[o&FSr9K@-!.HF6m/??";PNhip+m$&1h^)%C&a2[\8XtC/HP(8X?O,i"/9%
%iEKP>Fs8IuH+L(Z-D>XFi=PZB+1b249TJAQ'4kFIGu/6S8b?,t;Wl?sA"4@J6`9Cr`=)Yc'q"i=Sq?2[Lum+*+I(32l=gqlk&<,-
%[F)^>m<e9oo>6!j$b?'&:Sj2C4?EFOpJ5/1H2[*kT6<H5\[d1[jSKb.IJ)_W:-O@_SDk5"`17*q1nLe,=TJ^8@Vl;eTe]_*kJ,YF
%Q2N5Q,F#+u9D2)Hk!&/pnYF*Ce"MntfO3cAN(*!P8ojtQ)JDWlinDniQj2'Nn8P?*)V-q$)_s.d`:)3P@P:23#6f:hPG,&tW]M=5
%@_m,#WaQ&=\N?'m^[oo5l$r^2-b\7=:(fFOZ2D`!&f!aE)];iM:Ep?*^+a1Z&iu^X$`RV>J)eLMqf<p6K7s:5"he0341^kQ)n1im
%,=D'``Di/8juH;W,qMk4*a<V!1D+RV%!NR*0`.M*VHT0<$k,Z(-%fhuJ;p$e;W4E<#m]goPA+*CCoXf`:9<p2*F`J*kMX"h:%X?/
%f2A#COY8Z>P6hp)S1AlM:n$(Ifj7%IU+pcJB2ksRGSb'tR`BuJ%=j$4HoNDP+i<j^.>AWb7RYSl??e9)^]l'7Qf=up+,KabZ<2DK
%H;2,_o>A@d">?c:208FhLS1dIHL)Vi@UNEgG-t_$8]MQc7TCn3Ocd;Y:JQVG?:s^7VH?KkYJe5q,@KoX]"i^!:1+fkjlmN0POFgV
%1`.S2_b_?`K.-qF+#"u3Ee68\*JOr<"Bq)l%VRLom7&*j@_GC7_mSn4+^qJ"?-2q>-_jTc10gVf(CN_)7\i"QZ%+*m!?_t!-rC&A
%"bKulUI2A?1I%O2i#X7Ki%nL5+VA'Rep]=T&:rf:Ma*iPPejC(DEgC7c)hRcdWO2/g>p@#DbmJhg,VD8`H][CQSj%k5a)4[6nnLK
%6I3UR2Zhm/=LSIT#UD/sjf&uTXk8\!N)_67?Ai]eq-*/R=um+cEkon`739`FJ.dZ*e\MZPicg;_>!M%/!aHj&6\<t&Z<k]>TdQN[
%+e^&fQcc7"k\1m?dSI6[,&A/g0I9W\j6hcY<NQZ^R-"jqZ$Qu4Js*,VPDM)Zl2W_6i8jVGAHe`t+?!=2Fon.=<'8bACNV?Z`"&VC
%4=@LUVim^'W3IoA6ujF7d[A#0K%27W=U<ANKU\f^!o+Jmoh'<F8]/8k'68h0<*1QqZY%-`:I(>u1(.M5&^X\aAdtG8nL!9Q=\NP>
%nihIJi:D]ZY0q.TKl>0<3A]R+d#&IT/DX\/Ojst];O3+h]";W3JGTlhe"aiK%u@#Af-n`q)\OHOV3iXsQP!_h%]V3=`=s#a5nptl
%al_rbTPUn26@uWYSREidr5lbENR_S?i_Z.1=Cp()a%Bhf;-*=h+JIa@1D\h`kC=pRWg@mt%[j(ZS8t%A!*eDFaqM]/QX1L$7%b?7
%.ou:e-k$,R`LLZapn(0s-Om;c403("$8<IUeD^W#WScb]?lWZ2:,%-Ph^.]R3DZ@ne_BanV7iU)JJ0rl(cm5dg\"g4BPG`#'6,59
%"?hP-,U'.C'[`[lBO,m4VbWbPS;6EuTqpU[#(f:l_ccmh@Tq9H(uXbaliF_k1LaCX-jKj_`DC4ALk8Y%)#&'Qf\>LqSd3bj`V2\#
%qu_26W*9!W."E[$>)d^;0N_Zb\=<'BU4;)kB<F#Bo7`?X%u!EA<1@Ws,j"bgDua[qj@s`N?nNZV;W;NcDMF'/dPS^Mga[7mbAi[<
%JtQ'qj8e>3Tc+el4^hW!)50!#q([[BJf1-%JG"b.%<9\2W5(G(+!>(IdV3F&EG`4CSHc1#EKTZXg-3E30!Ij>NIgf(,h'mIS&&^N
%8u&:E,!K\m/bbDG+g7=#Tnltc;pKhS'Q8alP0?SVq0(d+A4f7X3qfQB@YWscC_BDp'dKN.`ahcI+`8-PR/p-H\2IZs@89e"WmOmm
%]3#uI@h^l@RMD`+.'lLm^ZoXJ,-&cKJp\,0H);h9eTFVPWpTJrnF+:NOVt[P#XH6pJK;pf44@mD/=W[)9Y2"A,EQ$#rpY.g5Zh3,
%=MJ9XLq,)*!E2R],Kb7iI]R)i!AQtu\TDu>1e$&1n6g&V5`$hSpTbA8WQ(I$MP-eDWJJ/TK!:,7'NjE5e^Z,@BsTiKfS=ZBr%OHO
%Z!\7Q@2BrTY)R[E<KE+PL(]#V1c4^7'_"X5TRQ$LMJ!%r(@Y`d1LPW/6BrrKho"74V0r=NR"AWq#6po25tO]p(`,H2#m8i@oG1,b
%cO>?I&BiCk:^".-/mQl$;\`3*?J:J%77M:I&>#gTXsRVW"\(.6e]4p)_>C9l6HSMVH!WlY=L9mEs&d'uMhqF8Sd5K8+5f#l`oL@b
%X<Q+tPWfd6QEc)KN6GH2`9<W@62SaQO`B`gN+;Q(0F!of]WPf:lQ(M4!DHrWR$#SU0TL1Z@?,I3Gb[/8@#bF[0.n$P$cYr=]-`\q
%E!@QJaY&:`2Sf\Ib9G\mRLW2D[9:K<'K%s;3.Su(%KHdN2acN7goiX?C6ODb/Y3:"Z95n<K/c13KJ\O!6Ff>?b:j&f&AZdFUK`js
%Bkut2@7Xn(M3:4UJJc%?(1Q(iQk#C=?l]"m@nDqEQa)hlj5$D(LXBFS(1M3>dD`mZMG&1Ej<SI/H[/O,22q9SeCS)uM,Fpmgd&))
%r1u:o?X#Z10Z"qGou1kbj8PQE,"Vbs-_-CbBiTEB%L?N401JR`>_A'Q/n0cq^oZ:Of'h7nPpf:(8C?%`Llk"F1i"ot%4Bn6!u4/L
%j3X1?-h,hI6H8d$U=Z:C^q9)rJ,lY=mggSXn'OB\bX,#!(W3m$UFoFXLpna!.3lQaR62di(;s/;bG@*ab(qQV%7((o!c1T^<>cP%
%/k$V0VVhaTlSIH/b7J/;Qg`>c>#,H2(i-q\;KPgrZ9OpH$)Z*tO0`d'oZd4j)!M.j[Y9j,3's(L-;-\,p<R2pVAjM1<cBh/.%$52
%X78`Q6"j8%o#7hI'%Ac=,7hBhH<cYO@/.g9;c?_5,FK.]-F&@E_@Ek6F7k7EjQX#uR%Db$),l(#8`l#n:_:B?N&7mOdkeh)C5`l`
%Jc`!\-Hn6-&BrNpYr"2RJV>8)s,n6L`KH;?McaAqKH`<F<Tjup_iG-(kQni;6DKTG2:5p2&S5)V"7muZn%jnt>8A3%PNI3m0aW23
%V01^%#o4XL,Jb"F5o`$dUlZ`kUR\47B%>#O:(D_!gkIH+$N$3i?l7_P/K+\FhrQr0>hX<#@B6P"16_>m9bsJNDgDuXd0bY.XA&F4
%E>KJ=6*#mcQ$-bi%]1]qM!9H*TVKC1Q-:3g(_)0gK.PMWl$aJp)gsd9!"ZoP"G0:!%^@Yi>8'I8'#`.293quG`#:2WUgPGq?u8lX
%\?oY/8+`t%mR8VSP3tc#")?^263.B;DHp-R*ET&U1gO_3YS\ir%#G1P9G\Z##V\OgR_V"mS)MSgM?H&[T\T$apf+C"*k*c/b'LM'
%+sO0s%J.h!5TuR\GI0+LgC2s`m3G8YB!a)e9&N=b.['=ib\.S?Kd"7q%&8$pS&>@ZE7?JK`$8U@/G-g'8HbA3i=8=3DUn%E[[B5\
%-NpT?oGDQ[7r&ig?=9iai[m#J-C5<QJ_7do7YZj=]87n]h@(&boC\J$=I<le#3=!`#/!UEcn1hB-[&qJ*(Qg2i;GG]Ag*9c52R//
%;Ul0iR@iL7^f#itM1C,DST2#_2PW?jH?!c]Cu^Nf1h[V_?#PaV9ZT'7;A]pX3[@G9$V^nlC9@k"SdRB09d,AU=HL%OaCnC)@cUXu
%1^K#BVQBkm7UmNCXcFh3bn9gf-N]fh,6?\_GqTT]`PdI-1LV-.RueAZrQ%B\QnTJn+SMbmZiIQIT,KO0"%CR(og291N+cCW?W0iR
%&/V(KY=>T]K"@n3+]XNl_S@>%"C'UAW_kqL,mT0('to0_$%kh#f1a*c5s[se/"ElIhI.D&0&0/qH7IRP2QN__8D.e=X+6!:4:U0q
%VM8X?`oNV`3B;p6"&3Vtd=3pci&Pie_CD)T-U+7)@>6(1?j5IU2=:thJu/tg/1)&H>M5SVDhchh"*2aJVkqH(SQV:@)jh@u$9m;i
%#(`B]o>iUpMPhNCq3ET>r+,#R<fk@Y6&(mZi'Q^V@_mf^%LI`"&/9AHelRB/n^*<h'!ht-)cQ$`P3N:$7!C'>,<Ch09TMcQ618P'
%iTiKcJ136<B.?fO#sKP7WiHUFkH@]KO9,c[Q7FRnJ:D6]O7Y.LkKH"6=GT3e,`6GJFjR34XIUTCLpb/UDN)MG"=c45!`DQ/,[>8(
%nIr$jJn@/"M258:.k6[d+UUOmV8<Ciq-h1^i&]fhXW8->16/T3j3(>g7KtVU3aOl5.YRCKo,usXGp!aVX.Bf''RHBEIo')Zh$9$:
%hNk]B:(q=1Y4PpAiG(GUIV*diS0G\?A'+;1N.XD*;kjomKT"Y&e4ts.kX+?"'Nf(bnOgjQ)@g0mVgr.'RjE4;Vg7;b]+mpdn.@^R
%Mrbb)2'*?CksK`JVN27a=i^4F73>-CUI:*V9oDh;O<S@!,oH62Q&/@;acI'2Ju$_/@Sr?SDZc#13YnBd<_?aN9/RX7TFpgb=]W>+
%'TNYo(m%M;LnldpV'ns-Ogp6q5U<+X50ZLVEb*F<aW+J]r_X8V_k[8;+i%(7SW6>)i@UpFVC*9=)%/@.G=>;,1E($S!*]Z`iIpVH
%g-qe?M,%.n!1btsC1JdpjSE;tSRW.`/.)g8&-AZpL1LGH4O^;Y(>bQ05!VP*I"5a:fKiC9ZN([bA.=o'o/[cN%msJC(=+>+JA'>5
%aLZGY/&N'oY6OWrH,@W+JH<X=e"dKl#)te5*>Ki$U+o1=dV*B*1?F9.0o$2>"U9TiB&-oFA?\Z%/;jRNi5NWKW/es?VK6]_YpT5P
%75h[N0F\nH`Z.9PX'0ruCE"D$]-CXDa4E+0QZ]]eNlO*bRUV$B>^7UMA9uTB`WJnH6801"@VmkgnaW%VMMqlf9RSdQ\b8]dlDI"M
%6%VeF7*mIKV(+dH_%#%ZlQ+O^,[*gDb0)b;*Q'E9UYV^Jko_2X%HR_LAe%;+J\YBd@m\5?G+6j;:lhj.`7r3D:^l8P[PFLn(]e^m
%6IJI9]+gQ];k$Zt5+\c%H7^hm!1c+n0R_+Mg>ffpk(1ZBj?4_#=4E=#Y'u+f&CcYE'#uc5hItY05DZ2m.2lGJgIGMf[Z"/hM%J')
%ScQMsQn?Eo2oGHe?&p[[*]CHQRn:Ti"bH*=W5PEB@\f%jbVU`l;ddN1#98c&#$QYN"&ni&iIp6KS37-="p2(3oC>V]?=4@u$X2K)
%,6QE4?`tIprm^=b(Xu=/i\$Mj7Za:V1rb6^*Xon%UFl.[`U\0XQ>9]:c(cm>"+YFASu:[0k8"+oPuofK\'rl)9mu)sdP15GPgq['
%.E.KZH"j<(mi1A<0W@sJCR2LD?m4+C!VJL97P(p8-l+D`'<@c8I7s,os3a^#W,KS752^>5W]%dB$Lh:<`2M/+b+(;Gfu/Y\Nr*rF
%E@HeH8?`:USuU@.0n^+\QBk<3dP,.=:nhWNSB+;Sf]6;ROAf'BN0>H0*DU.\RYb\q6``tI"X5!)fC$5?,*pMShV@4iC$Ylj#"%*I
%<8`*.-E*2!LTE7,1fk-LcV(5@&33GcJ35)ZQk29Ca,^p/4G2c!17KsInI4\66rY&ZJA_VEPGp>&$Gc;Tg^Q$iUS]\T2.%MhH&,]u
%)cr8g<L0M`-_4.rWY=@l1k25==T[HK4Be_[?0W,`@ZJW&U1dAfN#`"LJjcJBi2>^O&^:GSZq5nHO1->l_T"rPmoSQB=P!a3BLMVN
%ee>j'JnAaCITV=JRYS)+`%$!O!>Tp+jBAjA2"tc"&0_9++tWk@3Ir)r:b<@m:hN6)Hu_hk@MQ4u*Sr(T@#N6BECnIY'b#/@k;*uT
%Z/h:LQp"e&U$WtRksPi"59qXZVM$s%G%o?KCe,?.J4()57WC1/!&s5l`rScGc-<0/gEH>>f!Cfq^d?PP8%C.3(<_af(-dR8LH^>Y
%qaZqUg]@Q>,!`B^>TrE)F-Y*nE+"bK<Jh,G.OMRNi<qL)aG^NIA5:VH6$O:05GCHF_[@G('Bk5#(K:a^49;-e<kOf]KrM;lq;@MB
%fQCc:r=0nOD_PD<X><OIB.ScC>YN0gO\S&K-P-sb$k,C9(0E04j`+I--DM9HLSogiBm+&6^^Y!hLas>u)N*Vj>)R"sY)kf@:2[?;
%,1D".NCO:YW1]0NO.7.K-8"P?XJA40=+R?3BCK1<gT.P3.9WOPVh&&#cEJf4o'-5Yiu-'nK7p5gTiam]>oHfi-ONS-6JP3;8LkDB
%(?.N$k0imuqbX)Oi,>Ak$5oK2!6/`?>n_iK;PR_q*2JS,,`#)iZ0&9';`MQlQlD=75(SC3X&lU<X_9=!O]"jkck.rLLo&Bt@":!Q
%N6@(Zcaa21XQYMB=(5b\TPC8=XTD=(\G<h_9&PhEeaYD(n?Z@qhFpm5ZD!'acWkagR`Is/!"S9*8M^Y'+U=$iF1a/aUld/d;tJta
%6'js[,Z[Z[66ealWE>h]R:+,N^+odl?;$no1c7m-(Rb\e(A+F4bc:IlkUrEliWeVr7DEkb+e9)q5Q%AB0LO"L[[Ja[%,N/_*i::t
%AP6=P5p0mL:XpIBo-ncnJHo2j^aDM<=tfWf:r#VAhF54DM/c^bo6?DUCU%9_bJ;GL[Hb`,3EQl.#X-.A2IrmN1jmYlH>)m5//d(m
%ZrA'%?-/CU%ih#K9Mgu[Vohf"'Vo6lV&7@:N]M<USd!f.($Q/R02!A$!9+%rT.@B@&h9%Qe:PcM=B#Cac.%R7DFMR]].Wp`.hpio
%q$fQI';:W['q/U#);a<7pOLp*qn_e:]Z!S#aHegtU"?#nB,T0RTJ>[9?mDE6OKcHKin#6*lkC\J!VqR'^5^&_R1/$g%$.IuWri>A
%i,g78c4FqkLC#'<f,u?:9tm9&\.C/>7L*dGRSU^/31!J^@ngk6_ea@r.7?k9WW=]PJ^K3S(_q\hUWH@[QSJ2<e!)\dPbHqc!b8!#
%6B%P)c/'mm3jE3B.n?O9B9k*,,GL6&"A@)Y0\/ALaahIsjGW>3K9"S5>9,[TJmgd>C-VKbgN"_t&9_l&C0XVs8Ml\.g?8cCYh\d=
%o2FJl"Bk&'dCs.)_"7d:N5cI@.Y9QqJf;j4##5lZ]Tl[&:]^]f"XI\j59PN@M<[K.TTm$iWepCn=9R_`:6,Q(VLi_'OIGXuZK3P$
%!`^fb$SBO]aHF]`eH_N=5j&^Od$5D9JhoD.^&ijPi!.EF6u\/26;[^g#jZH+>\7RAMAmdARH+ASERIIt[ih0i,+M6t#/oe:+D-SH
%$;?\:<pE[`Vm+/p'?r;4Wg/I9e!V3Zc'cQiQ'dL6>e"Hb2#RutZiU-QFk]ZmB%`kg(EadUN:DJ73m)/4or(_uM!8ZL"c+TN/(VP.
%YboUd76sk,3D%1*4T%\?TWiqi#8@HHS*Ms^->B-Wm"^-q-m#6CH]9o_0T^`a1^(BC$jJXp$))!q8a'qW'(Rf"\l+(^\1a@G5Vk0t
%o4f"iNG2p[#.775h&F5nL$g1dU,CkZ<,>sVJ`BT'YbK1$&Ne2JDl6`sTP0#8`:AjYK(C0k#8dR<:_3`e[?e$P;N(Z#@jVlp.lo:X
%WuGY;Z(k3LSdh,Idj)/2@C$#)J4.Xc9R+s/MqTF;NMKFi;BYK$c+;Hq+LN1hN0*O?9g]aR"58_g]OlXLq6t-E&J@g77d9pcP/DAN
%XR7JDO!*X$*6UUAAQYQJ!q3ul.KXTFRbg7l$)Q^)g<kfA`ttLFeKMt48*Cc#K%MmA][Nr,">-q)$8MOWUHR<8`XbaH]"FOa#]Co<
%&"[Ubfo8g,SDeE0$r+uQGki8oL,DBr*pjAk)AQS'?\\0MGH^9+N8!5g6r8Ls1.^`aSU]n%Dq)7I9CIA>4)]:nMs2&84o4QpDkB4B
%oCSMBEeW?7nqk,-r9WO?rMsl:o'"W=P/QVJY?u_XmHN*sm`.QFrSaC=cO0kNmoaXcqK+3U<7Sm9U!cK(0f**gV<n_,MrF0.HiUPt
%gsT5\!?(CTNRF@0L9q@Obgj9<:!C3lGo4qng,6[a)%2.';,i:U8[#N0*p*mr0p-'60/Y4tOdfo'88Vl18>Sf+:^ju`qtUI[#pg;/
%.:/e/L_umT(*RR3q12&B<f(0L*X^DF2O=2Tg)n45,Yg\MHO@nF*Ef60h(Za.j/P$NXjN\oaR+6nS2W"FfB^Fl+X,H_c-Zo,c0.`_
%me,=rIL8B!j1;,LUQd*J[@&ubdfglB=5(B-7n![@TeID3^eBStm93IJ)cIWR=YkUJ5b#(&KVWK0oHu@7Uq;`9JSg@7$>./KQlRLk
%e>MqV@<)ahCIg8m.9bM&LC;a=4>XDOF5fr(b^6H>/qD_R][#kNjKO@NK:sXDn;W-S+CTelHmrGdJOICY,$=sk":>1F0P,ql9<>_k
%6c,XHJ6dm!9Ouq5!F5`mdMNAu7Grne7lHTg1"iUgiW>Q'eQ\VIU:6O*%75LZe*Uf^Z$6A-4/e4e<_##n6UhNDIO)iu68fKE(UVFa
%&'rak#$kI#1buHqb:P*oeQEr&(5.-*N`MV[HNIM40Im?V;%:ARDdX?AdlPh+7_LPW.=)BCZs_OMlZtqJ%!dsrHc*@Af=Vm4Zm70G
%!"BaqDo+YfOV*l?CuiM^k7oAUT9n!@%'8Apg^-f321*`F95Sj*.hMel)P:(U>DkTd_0SVIJa'\c=id?bSgB2oO9eQd<-Add`F+KI
%[uj'9[.N`6mTMQbgbukeq3S+X'VX)S1VAK201@=+b[GW<,$Gtm]G[a=(.fd2Lg:>EN(F=f=7T\BaG^2XU5fr-U:ae*V'AUnbc-7+
%UQm[=-p18.VC1J3@q^ad_Tr<K-aaQ(q/?TG=fO*WUV<%)(0PEg=:5=)JR+<hV"YUTq?;h![$DXPH3>=L7erf'@c1G<M@L?V+oVHO
%V1eg50_WZuBS6(OQ6rfccCfol>5O.(Y]MBNf0J5:WRh:)PSc5[6g0&!<)U+TRgq(sR[dY8$.UY^U+<7qflB5im$+K<W"[O/fs<FE
%5T^OX%3Ricd7!+Oc6TnhM%k2@SS.9QV?L]G;roD27oUfk<!,M95q2mA&I[tYf%hTOV?OBlAG6EJ'%!'\L]Pt,M,"/dbU8;oHSXGA
%G)l4W("h.rF1)TK_2)V,LUKQm/A;o5kp`aad/nLLhc?M9(658^ZnFaH-]Qo&QsJXf6<"s,cTM\f=2luP5aTK2;$=8"miq@T6!@?S
%GY#A&#fq3a?LD.)322V8):&H9U.t]Q^pQIEe_mYWY.S:r7"%BePqE1qlN@V/U<NP"Jod#&pdh!2!DD]F02#X_CS!TJm=Q7K40?gQ
%P9T!:d)Cuu'N+1"OH!SpXIG$7C^*->R@Nk<-lp1Fo6I)&S#*pbAUH"*)O6_4]D:02)o/SN?RJcd#bK70^eCJeQrd7Q0;RI#aas\d
%$^=tdH`X,jE!7AZ(hQEO$FC4J/5iHB\i3T=k8fmW$qoYE_T>33'\#%.P(MnI#T+c7\#P16(Fq;#X<a.8bs`F_SC*I#`tDuKq)ONm
%7HYFSVP%PgRd^_E)C>UnS/AeiO4/hV(U7FL6pR4o:LIo^N`iAc22(U05lagaW3)\I1d>@Lcn^ue&CB,W:($Hj)gMEuMFXTV*"9p6
%@k\<5",\k\@\p/[N&FbZ6j+pp=R7F9m6K(/j1GjA!i\pmYf+t1KOth[!Xfr7A/%kXJZoE5;/oV8MGG"+!ZFAV=_P)HF!&q^ICT)T
%N]ME<Wn4Q@5UoT-g=7Xq-^H,_?`!AjRRRc^7UheelWg\CnF_lGLf+Xc:9qI?'dtH.\r]-YJU=/@$&hWb%Zp`,bIsMgmhq_RJ`d9X
%1f-d'qa_=Er$j$a3-\!AZ1(=<,d&245@oReip1e/dG.>#7TjXjmqAuUWN<.d+a0[6!L#f8%S(P<1+KV/P!Y,#91f<h/YeYT>u@@U
%beGc(HllB]ZHQQAHs5,5.d\@S&g14`[UI_QWPl(s:V;MU<)A:eit+aMKhGs6lZdbeZQnC#NaLE[&S/"[*Y3T?O`)G;,UAJ=Cfo^;
%>W[HI$tLQW%<mMD/<%f::]MB`D;'W`-4oPQUX:S\70(!Y^#FWIq2O*Y\4XZXP??]/Zf\=ihdE<7^g&-rS,M_3]=sa)LB&U>4)u_r
%"VEb3W`@!,/a"r3#:S7ET[L*L_r@AX<K-4-!P@;>OcMfBN-%D1`Iq_*kWEQs-s8sr!J?_\e-Q+R,+9KN:QRT?YRF;tjdBc\/l^na
%/)_?AK%U;h%b(9nY_kTZp)5c9Pt3oU>,Hg<Z!gsNZbQbsQN<K4&0QGSiK0^9T9ht^.$7S)YN+HF<_tQiUbBOSPp,+EVL!8/H3FCt
%4obY[;p8<&rP24dP^gsC[h$YgJc^%cWJ"9^oTW"j)7(7:pd2lcTe=uqE59<e&6Te-[:4h8P,9+ZcU&#faujCZ<c@nHOZ%/TMiPoO
%EKlUk&G,RnjUK;IAMg5#2]H@R!5D<CRN>'kA7!>>*[W4cqMu9=m_Xu!UXNZgHib(.18t?Q"BfhT'oNf!i"9G$F\7r>RQsphY!^DO
%lDL-$RBW'gdiN![XYBWlbqK7Oc3UPYEp#^"Q_p(SH"'kr]<T0&6)ao?l\\dP45<i@5E,1KnH[(n=Y(Pp"Muc#N*MI9NLBJ1E\YF<
%7pEPeeerpr<r"\96o#6`H+A;\?6U/gP3N7[#"5D&phNGmMBQB!O/<OjZ\.5*ZQK?r/U0^WR.k8cnT=X/OARcqX&,mdP%$BSJUmiH
%&gV^&J`g]S>[nmG:pHtHnsYiHk@##g8tpMJK$ZhAZEfPXA"q59/9b)%%Q0B'ASGE`13g.VPuWe@<qE<O?=d]2V^?M<Nt=!>(bLbE
%".bWR2)UTf2XQp0;[3r`!\$';R#?;F4=FFa-;^X'aCecuq$,(7W[ohB0F%rq6e4m4O`f1RJfops8!B>P@MUnaVZJ;naF.!)A$e[B
%RNY3Q!pQRj&e77PqJRJd&Y9S5$!S7qQ-">@f0</Med6CcX/]]ZGi5Du"4el:!kk*pRc_"C67gJW&eH/h'oT8]BGooH7I,VCXl151
%;P=es]+XXq22gBb9dX<)'S7NG7*dTp[G2^P7?:hVG$9cRB.,Hj!^neK6F';DOh!r=@MH3o+NCk:*;ZfN1'\s#^9,+#1LA89JeHS!
%,QB=AM,*Cn]0X0Y<qMOd1V3qPg8dtDY-2"35]@;dR7ZX*JfBtQ'U,;B7!B':_XB=q3OUF`9ZH^W^WTg&Ba#-r'XGnjp<XUe)$k9W
%Ii'"GM4Pl&eLe+0=oS\R%af=VLoc&A@;S!>Oip./U:)g&A9S$PaU1"<a^M5qU4tO$QisCVR/Fl`W=f5+'ID;'6c2H(<0Efo/'=)9
%jgQC9VWo=j'sp.=$n,$#pV]_jZoPptearm>9:[EBTMIlLrm`]s#W&-cFE/SLW765i7g+Cd_+n7Q>Tg]E#86k^0GbEd,8cC3-qHJ!
%?F=7=:]68QbA.hkCL4!4A3_E+4*e'oR0'iS?`f5qP$h78BpM^5NP<K6WW^kQKb),q&RGO@$nBRu":+$lb]JCr9q@:pks@TPeiBE9
%4G!111s[,<O0\io#rX];"C.I?A^L9jjh/P^JVX_-,fu!-#l@3fL6$jEK*I4V2lg?5WjEr]Rs44FY?>$5O;=[+,nIBFLHq95>d%iV
%_@PZpc%1#n+FW=RAE3#'IiZdi_'#7\jUiP.pC9&\0l^XiK.IA+r^kR7(hX4[04:Z"cuO2biS;<C-8@M+"?"(^]^X.!M%)@%.3l3g
%Y0rR_9$=M&^'*Fdljq^T7VlC&O:,PDG<?7F<(YecXKVM9i7TQ)eHk/Ofgi7p)'1DoggRfpDs@?mgjUBA)?&oQC_Qdm),=!]#Wj&)
%dSUDU8Zj;P%+L,MO+B1KTMZ]52*<@O'#N^@,3_51&-AaoTa$P;%OSNb1YsVIoc1'=StW4H9'00LO\&kNL]B;h+SY0*U![#uqLU3'
%&,N4ia=f(7*O(M1)OOG9P8Kcp;Sj\oC4nce"IS(]13XtGF@?Ki4Ze)[P(N\6b.O#S=E/(fq/4A++;==OGjaZkAr@pG`5Pe7$jpB!
%bTe<3(fi+k8pch&@=@QGi43ceC?>S%0p(Z$7T'EEbD\rSoUB$cBYb7!PL."nX>,Ws6q:5nY[qhVO,@24@*#XWR4HIj;UT/_G)?R0
%CRPmR!Q"6#,U-D0FkZq+>FsNG$aD1IEf<Cgj-Tu)T-.mY6$L+P0osd\9om5qPVM$se)lLI`%4UT9,a$kdSo42/p,C?P_=So#SY$>
%1]S+s(_XO&)+eLFhb1#)fMN_@?ZfNaXK@nSEFmI%2Fd?j9+`t1:_Inq/L2MP]!\(bqDB+WA0h_<B-0_2R1_8UH_X^b$/*u"+u/YH
%8kMi,eA,[/'n2PiF<F1WQ-VECRquII_$FTf$1Q-rXMtn-b9.0RH<Nd4$*=Gl;<2$ejBkA>3IkP^AhpnG)r(o/U5$ihf@QID]`Jqc
%1PoL<-^*F+IS:fZ#ZQas']MWCc_MJN(2Qh'8N#JIdQ;S!nncF^+4sjjf*E"S1J%WdcdT13LibqF$#66k.VMg!Ch#FDqCZ!pAlc)%
%[-[(/q21>Z+0C'aiAdcQKOcp0FTr9PeWQ;m">u@$-n]i9`R+A'b@O.ril\(Ao\?LcCU5F]75^+[))KfK>@?s9ZDI#j1SlVC$E'3b
%/r9f(>]cM`D:5X?=e.Nq]A!'Hc)KQgAo;Q0Wp/S[j:g8t<5Z',#dPB_^Yn`O5Naa!c#T0__5*7IOG9ZBq]H?nE4B#M[#?d\J$[4B
%9c;5SA,oV^0t\EInK\NUTXEnq^2Ta8Utcf7iS\5*c?=gm]JnjNg9?9@D/LsZ,iC*ICFh)FPD,c&5a)@F8ihQ%(TMH8lfj@21PK=_
%K?T;`##i$9.)OdH2n6KJ367m"a44W1on=;Hd)PZ)bi&)("u/)D[p!5HH,5VS!4(H50/u.eB\B$^#L`iCQ<RDZ%]?]-8I>r;/+p,c
%K!S*@J@+8<LQ`M4:CKj7?kob,gG"3qbLdYbi43'pn_aMImg/(/%37D@)P*]C0qcSJ=2m@]%%OpNj`&'?:99AmIRXLd1g/nD%jl7m
%djBR]"AWoqr3o,u%a*4kqSE?[](:$\!a`E5QX>!QO`Ek$OY%*RkKZ"?*!Qp5(^ZU#3dJM,)oVgQQ3SB\%:i0N1uM3+baI=lJAYU9
%Q4V@'OIOjq3sGpL2W1?.?Sd3W5mUTtP5niW!HsT2pqI\1LC^tis+^86hX//Yh4nON)u2F\Q?,7KrpEe(himpV%$El8-hTFPL]$HW
%k&7V(6<1fDrW]-`dCQE8^Hnf`J^R?RDsmN=g5>\F6rtG!<c"2=\b-nNdZaKrrSa/cDTpugadW$0`F1HD=69>-OuMFnk'h;$moiY>
%,L:u.VXlVW`?i9<IkQroq6u5aaCsqt]GD2m-Mo`9\DW'ZftS]mVC[r1Rrep,<LEF9jQj[k%9r[I@aRH0-iH!'ZQ)QLfC[t3$([??
%OoCgX"ZU?Hs#6p`4Lqt'r80=USIZ,.2n)Unam%a`L1/<=]FFful%$ll4m9XPs2=:+#6-V-]!K_;ru8bSEg%I@2[/P3A,k]BCFiHA
%Y^Zc/SI+<bG/ESRO_!9`qJYMVW=s1Ahb;sM5]d802Zc2`O'DI!ce:@N(]&&@aC$pj^WGVRI,GD02\mnVE)$%EXAd9m^1%$gP_6iY
%ao5!?OGWqUr_:V>>%RQIrf&3)1j"rZgN26eBZ*4:%1nT=?sEJG/2u8tKDsVhkT-VDT`9a7bMbDPhk"%lQ*AVb,B1TlOY-Mji^AIC
%#5pK;,!0(1V>o+_=I2eH^B9mD>FtKEJHUkpK`.B>6/;?RLp>)W>WUQQZ-G@M)K49C_,6:cco9UlXYOA)riM@A:[#Pn9_dH-^R(E!
%qJUd3_<3]S\%Wo3>bh=*5%0P$l_glg:R2caiaa4A']TMs2k(Z-c"-id5gY_Yf%@aZcH.6C@K6%4n3INWn"A0kIUW6\`l^'7/c.J7
%2$Li%q_t`=NBdsHDk,:d?g*7C40X1:Kn]IEa=`l!-Mo`9@[.IOc2N^%COG-]r_3C.=lb>"NK9MYE^Kd8c]ZB,V#Q1&k1uj57cn%t
%pqoGu9qJk,P`MX?-DrPc9fDY$FSNq=2!D\Sdcs1!]j/.Bs/)""o\Mn69j0"%kg\h28M]JQq-E4!d0!!>B_:1U=,ahad!p*M;21ME
%rO:t0!OXTQhk7/-1A*O'2\m&B5>V,oF=GZP[e/Ggl].fos-kA;KcL$J=K71BXSKW9coGV`&,pKYf*m)uIq*.[nD\>Q=I#LZM[<M[
%`\'YmHglN3&plTf_Z*?IUR(2^s,CSn#Ps2T)l/uro/uf_8Kq>B?hhB!JCA1u:B'_%/P?oRn)hhjh2m-(Db"!^i;Npsg.Ipchos+C
%h<gY,]+tk#%cZpqPh9F6I[@4Efk];[%^9%^lSg`+8:GT.Q]]k4U&6N./E&f3j#8\;5<)ag.%4&FjnhM0Kc.=Omb<qa!f#!Xm[HpH
%>(*1CAu7<W>8hV@/36TgqDI(f`0!75T_i?KJo3eaFPi2DDGD.^n&DKmiahq@S\]^d#2(qP(aBStfY0._/BU<QSO[(:OF<bsm=2MP
%-dRZg+&9>[aa$O*p;-)i+ti_kMkm@oYbfXbXN?UhnA_`8P#)r9DS6at[3=nV1N`ZT_<e;m!>'$=86lL\^V,ksqe>^/$KC>&cG&rN
%XB_Y6@erR6SJGb<RD**ME2PL%qBdF24J"k3%?h5'F3X@%b-m#eRp28c@Up$uHWEn^IR<\O\<$'BD+*9s1i-r?,Pl#'9k9.0Rcp6L
%FD_K42[!0oZ0(lESu<d&*),6$"@%1GrRa,D_t/l^ATd*BqBd^B&jloQ2d[7apkJ%&"[%;;#1GMJ?`smsAGTp"NgO&*jTQ54G`dXB
%S(0W/'Gs6q"IFMlnpHYbOW;c$kF36oDKrqUq'Kf&bD$5I2e.bF7t]uo88r.6esbckRoP[&D")h9=dIXTL?G%/1\floo1a:WQJ8).
%#$W<frO4W@gc1dW,(o$ICi!(_KBAZ!L9+b8d!RVTd0O;$(r<mK;3!eR^*-p^qNg8JD+3%mRVta8]_2`X[qEYs/=?sl2kS5M^hCH=
%N[p1eRc^*90H+LWRW#2BV0"VaDqK`SYNCT%)\\#(OUmar:F971R2_H1THHo=ROm?DeUZ4/Q>[TLjKR=cHumCt"D#r.HfTM%.NLA'
%OH@V*_t*3:3_W72ZLOH%pGuHkEFf/cY[R@i1W`HS=MALsYhj9%I!ZL*q@f$1I&A=!%$GPWCU,@(6h8KT,jqfj8A:MJ`)/Ha^+"'a
%0.\C+IVtN08A=m0aK_*XhfSUfnMr3IhlOmB#&GRBBJC-89Tj>?4g=2Xa#Ai&q+.:U7LM7pQYHrdBI]lVD]-8lFOs/h(r#P:SrET"
%iS,lr6eO5B;bC%P(qqHXG#*bLRhCAc[LD&8P(IPi7.c;s:C-&u)89hG6mM=N`AcPpfnlO"-EST#NReg$=9o329T!c=8%pSqh`M.U
%2fC^jBen5D^TgR<ko,P3RhXajiFKgAL>n]PNkt'J;LHCN,>I'kpr8u2CqDRD2[:'4r?1oJ(7X`B]-d@)QulW]I/?4,124If\(7!Y
%U%sGqK$-XTbm6Q.FrE3pJ-2%KI)GQ8[q:kNnpKK@FE2;E^?P>:bC<@[.sY%uKBF14@r9/=jr5o!'2s=<k*u40'tf1]>6EP2S^;aO
%XNXn$k$'RVL#e_="2^4*P&H;%<Y%leDe=k]Vg(T"c0UP==!Z[V`45QY+SfX3>d5!eL#a1-<$aaH,i9#.l)rr[P&DO!NU;mad9AHd
%DR+XGN^Q-W_t$M(<9_2`k*rcM7+hdl[oR+pcLqW7P&Ef'0SmH2m75U<61bUZ6TGuB7,JCXO`>"FI02mdIJa;s2^HQ([itU&QjI2R
%kSoSeD;j)7hh:aF$Ts6ZR:8^nD@h6fTsQa:7,JiH]'n>qqF29b6?a&j1XnbNQOV>$L56K(%&.\4'=[=t7,L[7)mQJ9CWWHUA`<GS
%hGV.\)O'Ah'>jgcD2>oKQi"4#qXuI(*@[SfW26H)Z##fAC&=bA(T),sE-NoAdl0(p\BF5nl!'9%X7,."_3@/6lj_E&PNo/V[?bEk
%%,2Xnhn^6TlB^\(D%SA$8STH%H/!3lI0XZrn<W;XNRl_bKBX=5GAFUX0RX%8X$662l'nfq(KRDOG!>kV%F[7FGJ3X[RnV_\nCDTc
%@ep:]W%?\G2jqB_YEb[(A``."7P2>_qI[,O9<AHJ2fan#08m[=c'gB#qjQag'k^-C?rZ#7-0#J7KBjIp;3]LWc1R(JV(FX)^+n!B
%OF9LhNIe6<1T8#f!YB$AIIg@%XJrpbqAW([;152gNQ?@<qUX;4>aW6fIEiiD-IXn!k,>DM^<mJ&7E8g4AkKecFW8dgcCq;C+o4Yh
%HQi"Z+St4fCKYnr&]N,]Yi5Dt8#bT+GeOct<Iin]^;5Z,IB[/V-Jo!+(^AGJOl*],cXcml!*4J\0R_ER*0fBQ/oIr]=uK@;l>HI4
%:jk.0_ecJAoaM5.#Id[i>V!g;3a.,*IL^YU+T$nD[<rq!Dh`tM(_3iiIQi^O62,fiqnEO-pgC[Ok"=(rgsCIr-JYjS`TY%D6+K4O
%d="A(`]B("0u&q]_d[n%qdrHom\jf8homDpl,JJG)j@gm4?Co=1Cp9a,n/0%CkU"=ZD%0XC=E]ZZcH&ej59(7cbK,$2sPlT\o1Uo
%!PmU@IFELqZT[Qe1"o3$3pFB#:W(Vu%G`t3R,6o"qdrBaj_f_=gQ*VD/_rA(!"^L32eEP.qT8GjR8.Ml/_`4ee9(Q'p.Yi,SMtBB
%Hj%Uu#2;).6">&CI4NPDfFKoWhfK3&6pKA=)7"0,/8X55`ar8K/_`3hGOjo,Z>[S\9O&TKhZ*WpD9`UD2oI!*Qt5)nV3P8$OF;KD
%&^:mVRd;!Qk./O>OaRng$d;aUPC;KY4R$kkfsg-.ojjXMZ>[C2'#AJ,^4FhB`+gG?qhBco*?2/"`8!Y&26";%>ps\]p!!URf1q^I
%&\.$N01=^=6"S<V+StN7\(R)1)t73kBqb?W^r<adHis(8,RdqAHp_BekW1`<=k)?G6LilKpPpiCGIQB^-G_WK&2iW0"Q,e.$mdG-
%hiMND(r<]E7c7g/?5%^=X,]22KARW&%8-N+r8*]+1bA:UW7%Ed1YBAY+FsQt+np^U9r_DBpI:Q7R7IRl2sAK$^:L07L5AlT1M-84
%";/]8N4]\EcF1CBE7<X[lHS^rRAOJihT2X)6/..C]11m#St+YNW\d8^(/Ae*aZ)(9]cg5Wo"jQb$%d5&:2c(tQ@D\*D`F)3`TRb7
%&"&J`6LRbi3Vg<bGNV793U"-7.Adb2Dlcr\:'R&/Zi.chQT&s(H95R+-=LKR$^!C)RR*<4j@rlSR6T:kh@qat`/)&T!:2Lu]HO!9
%YpJu/j@nnJO#R!Lkkb[GGP;Hl9bqZs-eF_$&oZhd.s^HL_]+MRC(#YQJeQ5n)#W4B6eB6HhU$Ij1D_Bd2gK9pI0Y*Xi^b6T%='o+
%\HIo9jR1%K-/:5R]:j?S;s)ZTh$B1,gjUr$.o]/NhDK@5`;GG5g^OS3od4`=oANfAZ_?fAQuRYuh$lpd<m@i3)/=e+OgO*87S/9V
%@A3+D6A<Ol+n!@:7FG'QD`7b6-uKm/h;*8!f^O&?'HO="Ld;/?3!$^`]\S,7WL:66h8K2QAM]1T$2)mg(?035q^=ee&pGQaiNOd(
%AF:ci%bdp7F#VZ'I`,db`^2'@AR(V7Yu9%hhD0<87&7n!ibf)a)7eA;h%3N>:?HFb(aka$h=O].8QXKmh#r`MoH2T=YV$cXT@D]$
%5Su]B;KpS\C*bL^h*C!@^qWIs%>e-=CoFr\FUi\jmNuHdHC34<Ub42fTY:K)QnZOO2=bWg6eV7_(\2I4Ahbsoh>@TrlGD@O'9#or
%)t%TOhcd'=\@\.>(/%c>]01!HP^@8W]?+e!;I+OX(!+FW*o,SYr/k9ijmMj-[.f9d>Og(M:j;4Sq1Q;JkspO@:?HF@O!n(\0m=jm
%^tnq>`8-BCYg@k2GGB/G,s-sqfhp;.DcisMM1!e?*Rrne5F!@%:#1ei-"]0:]0.=#\1i-E2'Pl0AaUo599jD=h%6gOH89\#f&?0+
%EAqrX\CqANDV4^-\_.O<e*8<9V@e"S;BUhS+R\sY7a%\Cibk(SEsWc'h97XLfsbDXL;0\2ie+c\4s^69akX#J)cfDB0R!W0dEO`W
%F1:+qH"$+fek)oN_q`N-(P#qX\XUC-P("?k2r9LTs-C27i',&qPIVW,5X/pLg^P]XKEc?R:NNsQLa=`8;FG>H])aaf+Yn;SM9#qV
%n7CSG-8<d<qn_"rM(XF5[i6a/mU`cam3\(<8qFh5%7u:LRCq@7`<G7BCYis[SG;:aibf2KUp^hYe$mY6dTmN1PA;K9)+ND@k\^D/
%j^ddk'TU;e)sV<qMNKMJWOo,<@K1/C];ZFR'o,Y1;]1>L([>m/Lc]LA]9upJ9iqUB2s*;jLWSAsb]*%2$$S=Z4G=Z4]:8C,*AtC>
%+]4!>%<j`YXIfg!H=\Hh3N0R9^&*"^)BW5W"r4*0#TN&Hjre7Sj$qkLOus@3%-h_NlT2@Z([>m415pXTm\U(jrPI>![o@RJg+[`g
%i$(8(@.)UEFN=i22ne7k4`/coh6\Jq8O&TSRD7')eNr#>rhZ7$;?)3ihJ1tLf>+E%=&tadUkEOk>[`*kl#\G&,>Sm7RP6c67Fo%/
%"HVNoTnJ`4)"sD,.@M"QK+'K?>.YWdl7Cu4.Ki#"7DLTAZ)&'N.R=rn[-`Z/,spr1Oc,X=#r.X)^gtM)k(mhRK[.@saOK/#D$(qP
%>T&srfLK6An3Hf1DT\QXqNKc/nRKTl1A]Ad#eC6V5Vt5/J/>/aT\=8uZmD<&lZ@IW'%LG5#&(tf`B)40_FkGh%a7BaJ:'[u@^cf!
%RdN?"Q-9[MgYN2dYrO->&j7,gURNHX>Qo!P[eOR^$;;:]`t!)-&YtaQ2[!Q*K=*/&F`ATS5Zs*7[GY4K34nQPa0KhuFcZkChCeZ*
%Jc,j*T_)\:a_;A__Y^.F!(PX,;Gj>8M9l\:pgK\k%F`RqLI='e5RMK9"!_j*,"q_tC,`\GJT%:j!7e><P(FCUR.*SV=6(&8U^kME
%OH_Gu;GkQT73,jN'HI0HJ.`aNOAp,D!(e(=FG)63N,53h'o]AI\e3N@pl6=9;11iQTBW2VW<cMsVB?bJTu/pY'r;Acau*talH'`u
%'`MX]!h_i:NE*$=&fC2nmMQ:A;G*+&"dRTHhY,,bLph!/B@tqH+W$#T5^f\[2E$3cA*QDo<_+ANI?QtuZo93&C1-97#dKMm'U_2H
%eZC4MBGY:B=/<<d'`ji@KjtrSH/MM]"C4S,YLsA.C!o]r5_nBaCfmR*P(dlEj6!qN2/B],'-pmQ9/=+fl&k>!:_Eg+57P2,fW9YX
%,cL5?!a(`u5Q\\>!n-C)PUXi/;ab@XC+;J<!0\`RrJ2D0!>CBV/Sj*+AW;r!G&10l68"2k"BNUk?g"Oh<0hp+!OFNq[&g>l-M'c?
%=*`=.nAH=!5gVhKe=36QZQY`N#I0T\K2*ppT;-:^*sr_dg>?S&+Sqee%GIkMhG*'sbA<oS7.-/Tc?"lk2X.'S@\';n!'s9=p5l(K
%?k(n[=bA5XY?GE>nd8M'P"Lfp5Z3V;`Wjqa9Enk*;WC/#T7HTcebl(`W0Q/mTRAWQDaM3^WDfBDFs29B+q.31_"Gkf%e]\nV/?cE
%+;U!h'Z2m$!h#1Bbt4'1d#.&L?Ef.<A6n=emD+3ZC@Y9nLOrbnC<;a#bc#)C0cBX;,TOp?:kk(_!-ed4Z,0%*TGYoM&17H*Hid41
%+^rY=,p^'VrRscQ0tK"S%VDVaRTNKkc&U3<b:'TOXK0761$Z;8=m1at7rI;J<C&JZPG%@k+kr3#.5Ab3(QRA^lk%VbQp'+K\8*+V
%MF<M.?iq<VN+$=J?s"TO%HB:Nep.fA6VBq66dLj-e?m\"0aiaj@NBJ,,E":S3lj4H\FCY&#C&.uPqB9U\c!Ae`Vk[O1.Ee;V1F5e
%G,c6/CmH,#>:uWU2*"=H+nH(.+:1W^aDf*Y9Fp-cSJ1;;<SDfSU_B\11fo^LNWRMECQJZ2qfB>_X.Y;\[c,0%Ci5WPgfY#J%#)dR
%732LUZ+7tA_n$1NEBl,ca!iK?n-mlk@Z1qA`d98e+W.20FOPWrVJ@M1'9&E8Zt`h?S//A<H1E@Mk;%f]5&rG&Ztm"]e01eV:J<nt
%N@9p?Rn.<$[_j2%QiI>af1CUM^'XA]p3I!cE;rc<,nMWf!"<!L4p%hiNAn3@nHndP0q])EOhS`qW!!8K@0g\Z#UKsabQt/En6UoZ
%%\F-gi^24OG#F?QaYrHJ(eTV*>/ETE\V\>1BHsQB0`aOm_eIm35,s9l3_Z5HSR1"sN<E#;lerqE?g4DSFNADLK=_S%mPtYrN5;cT
%4LC.1*P8&.\K+]d\,?D=e1?Q>i0Qbc)8m95FsJLML)-dW;18X>J\R$8m!c0,Z_t=J,O@>7>9co(\i)jAlSZO"Xf6S5>'N/gZ]$t1
%"sploarM`_T#]EO5ccJ+L"221,1c*9YCUNE-oL4cd+C`fGDX6:VkCWP^'+ZrM9W_Oj;[9ZZ\0SbV-,`OY+!n[H&S88lsF!9-V@31
%0XK!:DGc9WU"`OUAogE.eQs&:<8n-d=Mc-5ClLje$"s\jl*unFG%IJ4To$>7/JK)92;FV\1/rFZWiOfD"E]Kbios%>&g*"$]->&`
%@EqUNhM+/Ukt0DK-4<!q;[t4fVBg5de2#$efDK^]Lq;S\GfJMLS$-&:*b%\8<kEOZJ0q.@@oEC"267gija!EKN%jT@`i=N;GaZ10
%Nh*aimcp+4BEl[NUkj0-I+=HN8DN,2j@=6g<+']j&h4*tdH6W8cl0ROIZuCNKKDUo:^P%DPe^_c,/<JS!AUKp1,:!nZt:P%pB*sR
%Q3IZ;rG@o<%7`eGEs:Udi6YlCI%W_7T(?nE\B2dTiSi5t@kn?K8B.2Ved<O8fP9Ie)gE/Qj1+[WpTL]W,]BF%i\_YL@LQa`#Zef#
%<C/!PQOm!g1u49\G8nL4)Tj+-9!Nr@"D$&+j?c@[2$t2MTnUH.LhZ4U]-@:Tm(I1U-+B!gqHX^0&,bDmq8>+D2c-8FlB^g!pW/La
%ZKKpr3h`5!Pf,;Gm)*GYf)5B&[5*<5g3aX-g8+$/Gha7>(TN!R@V+\*F=q5,+YQ3t!t6`Z\Y`L]gdsRoLAT5!;+lhM!1M:cENn@L
%P==tG5O\W;?A3OXibEZ\<Uu(oH[/Jap3tI1J=)/a,b^0_SZg6P=\hn52lP_0*VfTF-E/rcV@k27!VPnAWM<jq%![q]5^n?:1RTbl
%7)u'q!giZk4t":pZ+4AY'f;3]YVO&,@!Tbm[\^A;EFTg(U/MI<C14IR<S#M`W:;k4/7Xlt>h;5R0Bod!a69+4'KT;X#nqeCT,e@[
%9/$VXZke2']iILhZ'RfL`:Hu!WSrUgb>]=h-O^QKTWV/>+-)kr7Q)?ih8KVnZR[&5%=,8"[fsqiS%Yh#-VgurM6qbNn(^;U67X61
%m(L=OkSp7*Lc?-"Ht"^1Qoc'SIO9GM`X95Q+ef[P68^tddpXqt!cs$&/-aqu"NZ$7'b.2irC_sWqd/oKAr`b(U+Zp!lIk-qOJaJo
%:Qgrcp]\B1jFO'O!Z#pMjK`H<GQALO7hc=_^g>C'oU9[aaXKq-FDR-!C6E6LrW?;BiFqBT&>krbl@Z&H\H@U5AtZ0rbP;a-Y\L2b
%\J5/ZG[^5c!'b)B%)^6i#R''`PZprf1ZZ9;@-=ONWN8ZXMZrW-F`)V#LW6>]2DYW8(1a-15WUr6E'VBH@&Y['e;X%]^756SL+H<F
%Wm?D9?&*f>$h>.]6(1?c.+=%"1S\W'"n(*=]IuKGQl7dg-;ue9?_*F-UV@O4Q^VIr(p++U:k>V2Gk\EGE(C%CIM]@=kRFUT.F88P
%6/FYQ6*)"$f&9TE^IB(C7LT"LK</.+.`3>OS-'b[2(1+Sp]HF+&0*4)2$8d\BX,dWAQnFRc*2E]L4X_*#dZnBS;@CmWbtFI;.h;8
%m.bg5@UXprC@G^8DqQ+SBoVt&U-i8#&".b)&Vg@u,\%BED4Q=eHP'Yr!<5OkOZg(UTU:W'L9k,FI,mu^F;97k(5JOsmuSu$9?AFo
%:,^fRL6I1eK5pra]d]t68+n$bDjC-]:9g$C5kVZYIK?jEZOR1cDILnfI?+*N7>tAN&(RSR7*gs^7Q#E5Y61&m[@WhJ41$2=1fHRT
%F3SbZ^_TPiK:F$t1JS*A::YT'EID"LdCNsq':/uAho/u-(Ja+Af/$2geZ)aP$("5\&Am=0N<$ncrcCiR"5X--R4?]88kC[AT1#Mk
%XC&Pq)nBf0N"e1=R+E/nOnk?jp4]>ZN'`Xe[TW?*5`;@8U`0u<?RJ19%nL_KGsg<i7&ScLg+.8(P#$daO?/]T3C32>FQAb&McTWd
%-uXu&%2h/p)QI-Xf](7NR+g=e9;9sY$,S,:SIjV2a>Iat1W+GLVZil6FM<lq8TZ.(8H99(jl`mVLY+'i,PEG%Fto*;I7Ih8&h$4B
%O'fk,QJ7m=Cb>lKEN;kWO_2g3$Pn-AN,M*@*Vkb@(bgG0?ucNO&Kh5M0.i;]`lOMsX]X&>Bj.XlGU[kgW(rJ%!i6I1fZ%jNLVle5
%=Y1_uFT>_\37Xh&KO;)t^V:E*/nmeNMj^]c:5n9*a_OCE0#?qN`L^b:D$4ms4El/k5u/FIa/_+d"9KiY>(&F75+-O/KH):Y'/[eE
%H"=IGN9P>+QR'Ql;%X31KSV3\mHQY;D%a8iV+n+KHn*Y&?opXXhZt3f*ZNJCC>'l-XJcFrs/EsL,M"T6KQs\pB0hJf&L7gW%Rqe5
%cH-jW,WjC'&LbQuOMCjS7G7f=Z.1+#Od,p<Z73Ks9ZkeX>G*<O[u=AB@RJ8u<>h1$ZuBuM]c()l9*!%bXRu$^9W>2<(WgN]Kk6Yb
%&cp8k,WhiVee$[YF4tSJb=iE\8T_g;c1O%A/Tq2]5Qj@8VNpYFkYT,910p=k6khdX&N;Ak6EBaYXY"Z$B9gRA'O%S;m^kbu6$*QV
%]1`tA:kmaj*9J+^"uea`K<T[4`+1O^+?"$KbFFJcP/iq'(Q__?'Y'lKdt+L88XLkqq>n)[(6CE&D8@F4&';=l;0!7NDf4r6S_q7T
%X9W6+'-]tL;e3+&n/2]S+pQ7(^jIc7Sd_cs^s\+YVEnI>@J$4jEdumW$<*[43ml^d19=X+<arY/3gHBb)\9gH7ZV4"UkO=N/UV0)
%+J>dl&)0Jrn?.L3JE\7uA!,H4"R,o%]1.+A0!uF*'e7i[.1qZ3M]-#7-6PGE6pV,eO$0`]c(t<sbCfO\N$\[)Ake*AiF6>A'#iE#
%]HE\S#fpZo3fk,W"T#(H&\<B?%0CG5#nn0gq1EbrJlp5.i$?3Z/u<':A8!VQCh+_T$V;4Ll7bsqRK&h28NOfs^X#045DeqTG$(&<
%.Z,&LJC)Q'^pWE)[`Bp'AJaBRPh@Wcj(:`#8^HDtf>/Q<Ao#7I87Li*M]$cgr,#(!^cG;G(/Agkq"(9b5$?1KGcFN*e=oZkFCW`1
%-&Tp`#rrZ]%<U*bmVjN_dpfAtOb(Oqn349_.EU@)eL+4J*Ugf[`&ZR^SEoG<^XTAqCPmr(=Jje[f.%jY?A[#9J=6JcTnn[te.`o_
%68<e+D417S$_5Vg5amp.e3OYfbZ'tS*2)+$&NPW2,#t<kR:Ueg8YdgRl:#;o7%S[59K5X@,n`G=6u!E`7nuKJ#GN8E0T]0P)+:<]
%$:AXS>P99%JfVOEM2)73o>r2e'tNq\RM!t(O!5tYX\p(4pJ0b<A1K9b4=erA9:07>i.6RcQ,7UqM6lPc;7RY_kciNOS$,?4`Q&b"
%aAN5Ve&\h>-BkAT9I0;nTON5UZ_kX6#;Z@GWOaOC".<QX\LD4G4?/FO3h!#TK`-SBH^q*K<F8pEmO4%ApEtNt-q9.P'78Y>8.?G-
%A\/Xa?n+_[6#IG=_:9+Y*/)<CO:Bi]0u[srVSHU>8<S.D=!h)TE!a;uo2N5E!R\S(MK6o8_#i;g@oaIdJ/3Ce6deCAb@M6iA6F2P
%Bsi,8[62Mc)k%9<0?(9m_MDQY]e4GcWO(@ciHS;($q@W2i44t^O3n!dZ%$[E*im+?e#`)*%=C;`60pXQldu=p(:Th7;o_lAIR6UM
%R*.%)`blXK6f#c/K1^dYT,<h$Uo?bf'3ZS<L.oQr+j2!SGT@<W9aWdsh"_1,Au#D;l<>+[$ES-LOoh__HDrGcd0%AIcsh8TPQsdg
%T,6br8;!]J8Fru,RXn[8:1ZQD@-G03P4X>I:eMQUPQ^G@Y`(Tf4;9%S7?Dh)8'9n^d_pSZMb]eXjeRSt$O7aE-NP0[L%Z()NKI1'
%JCQaeam@qT'f^k7+P\(G`'K34S0[ig:gIV.P;G(SNb(nY[.r9q5(M?XBI&HsZJY-mf)>b\AgLTqmZ?Zf=KFV$:TFdX8/pc>m6G-L
%,02Qk3-;tI?35!F)b]hR8_sZ:$$+e"6oE?8Y(Wf6>*?njW5us0`/n"rfdVWCZ:'83e->OOhDY0]Qn]4X5otPFi&bU`U*23ZEqr>W
%O=n6\U,Qs,Euug`B]KqnCba(M('Q!TNYia"9f<%[M;E[@O<@(sR&6&mHRCMJ!3n2AHX"<J8U&)YD;V.`'+#M_V]#S$@h:"8odIf4
%af5W+(+s_+D9kR^*i]P![A-h/AA!.S>lAbXU2Z!nK.L@(/\hW;cgcHm1M"W3N=t\=;aPm81jd/PJ/lZPQ%]LHY_<Yu(.Rp>9u;;5
%'QH-*Y%L<YL$'.9-M2BFI!#]?>":1mm&@oE5cIOc8"1PjEX6)_8hE=:e7m'#%_Iq#q$)@(!l\EX5aX\e!7O`S@HPo\=+F[&,EZ*V
%$%??/OPD!(MN`AO+QXc<F1*]/b$g;"_<"/<4u/j8g%$B8LfdhPdR&!F8.M+Tng5cA+VTMsIT@NC+lO+e,aLm.=I8r,"7]4;c.i@O
%69("D9[*#l[8^ZFL2_=('T1qER<L*Rm`]70q+4%2D"+[af5be/EZ(3mVLYA.Ukc3h9qd8.3\m=t0J\E"F&f=*__JtNa%5t9>2p6H
%JT,@gC(8@7$[;I'b9;-j+F19eitaD>ULkhP^"pTRo8c0c(jK-YG^RDNX\dN4,W1;G\aCNiFiH1b:F63!*@t\iM8dk/bR&hBgN/IO
%f?H9BSB0@b3)r5g'ehOZcOfJX0sNGJ$WrYOebJ3M<tQmeb[Jo![)h5I5lG*Zb2$PA;-_4FiTTik2gNMjMMZ#I*K5LLbgma3i5hIg
%PCtMIbTp3I!2`POgdiR!9\7(WoMnE"J>PjQA6g1*Y#/u(aesr<rS/I>0ZaB@#pMCJ#`/nN]/II@[lPH>rp0n(^iG#n9UDh&%P8qj
%nO*S^&HrRlae)PhD.JC2+@X3KCr3FX$tkQ3dP*uNmgYhO<8sSIThu@W_$F1oO"Y>Zc!qIU,C'=*E$PH^l]`XX#WQW;88.+AOkI9=
%>t^oc*)V]W]YL\O>`B#jJs?`\)p)D1[B!]'(n:fa%4RIAM3oiU5`8qiH1XhT,Z72[b%_"e)oj\n$Z$#tM^,PR#Kb0r4\%%YFZ;qK
%-t<C)!KoB6Ia?%-NM.ts-Q&h]QPO*7qBEQZ4B5PrP\B,b0e#1GP#SBF(kE;U1''_e@=38AH=VK/'3GYpP%0<Y98=\"Bak->E>umL
%\s84_EpgrK$l+rYN!Vu0*+hEj#q'Sc2djS3PkgBPb(3;;<?amTVhMNFS\O'.-B8UNb@&@][ikZ$lT6?N2_L&XPBrtTUgobue7/l,
%S><B>['b>'$?efU;=5rKpHcm;%upOd\G')RR]A%;:B3M;<@\1GT*#JRi@L^408_P7i")eC?8^LXM]iGK\:MH%,3[7Q/1C,:1.:P6
%P>p.LVkRi?F%Zl9&@=Er@ATja-7!ON$?Bnl-^ZUpL&o918:8nCVXt]\":2'Oqi$\^bpeDNEdiB3O*uU'1mNt5&Wf`kbG;ZGd7A"5
%(>KnK6QLlciGZhb8'h9a!-#$V^cbkc'`i*UbRe\?-tMD[<Oe&<Toh-eUL-rOchI)2?g@T13'F%b4A$Mj,)A+Koh,W:3OTBu!(A"E
%$SBMiR<T,!.-Blj37Ir^-%5Tf^s8$%ASa?=KX3=0,ReC>8L/DfhLL05"-:o3(t4B3!\s)fd0=-TY@F5WghW-_LVk:5+j_(*Xc-d*
%.1[4)%qo_PKq0DY.4RQl#V$R__5(t-WZj/a%8QB>E?rL0j[.)V@c\B,"/2/W&>"U:<PX<>E'6"7jWT*ul],0-"Bn4')g'RQ"I7MT
%Gsa,AO3/)1"9sRb/0go606XZS29?>_LgsKocOr142CoA\SC!,BK-SCT08Eda7nReH?^EXupfQTc7MW5uZ$>@VQ+,%*?dd,4d1Ndl
%81\<<K^F<7J@7_1.,si?M5d_4h3]Qs=`oEtB-9-Pfs*(Bn!(I57X4EV,*Eoo=bMqUd74T?FQ?D##Or;>Z&LGTB#'k`ifo(ZEhd:c
%[C\$@O5rPe?51-qPa%M4ctHk`UhffKH7J\\M^[tSgD*tm38U^%YInsV0kXqo@R5r_!>VH-U(icAn?cT>8'?Pn)A+FH*HL1q.Xk:O
%WsjCKf,DO0!*YOf(1f+rS1k[6+@\d4lf,o"VE!qcWKrAKjHGQm'o?ahCC0qS;=,cUk:.onU@>8fTfEhhIjDeKW8`\k1o=E=m4!P;
%"e<pjC(e<AD6te,"Br-d5N;7Bl#c_roRVlkE'@]hk_QI+)b7bCgF?#k-4BWQa/WWu=-[Gf$^ldklPh8%<?uQXL-!4pA8l(qZK']@
%p*0'>6D7Eo^m/^-G=!Wb;T2P2Q'BD5%SZ6illV<M^^HQ*S<,VEg6%^-h[cQoj:Ytm)D+QZ'fCO#`_9^8E%Z[k%]O^jaJ.DOST%q4
%+<HY/191EXdXDs?(`3%q,S[_=](!O,l8L$@$]b<-7d%!H:2(0-MPq[2SuB9_6r[`.s1fD@;]a9s\[*=!1ss/iJ&"A2l6(:XmQ;1T
%]G\aV\KY8p_DM<,;hU1%$2BP1/lMr^+\'BDbN,](T+nB3e"SC`MPOKcqm2jj,Dm6<="NQoP2+KJ":oBg+]0RP%5a<pSWCi@`U/dV
%JJ5lk9`LSE(Vj[K<u+*_,W(Ei%<ob!&QVBL#79p>$ki1uF)*h%"IlAC)2dqCo,_;[,p+a3=kEeg%4r7<-PSH^?4ISZ@;F1=(lTje
%,_Yi3"l\?)1Xl3rTue(:KJQFQ=H!eA&3/H`B6(=IG.!Qg+eE*ZXA78lUo#ncMTiM+bV!T](n7W5!?lJK(PGC]aNVJ$M?8C#.6BV"
%;FE%Y(Vn]d1qp["eN0%8d?2@`DLS+,Cc?S\'GP[!bX]^9`MB[HW''W95c$pC%VuYX<?%`3VS>#9@!I:E@)+&JMj<j;lGt<l]J;hh
%N%XeT`^Sc`bX$B_V8rkJf-E<VE?=CPOS%+P'[(^a\K)>8OJE:hfEMY]&700m6G)<5d:-3d"m><9ADap`=^:0\nE(DM!sN&XM]i*b
%[hO3n'\WYXA'oPF_PsNSf.3\&7#m?B_ktX875`>,:]\;/'ROSZZ>cM"Z[fpo.d&KX@(Tkc3a+?ij+L*3*Y3K?eEY/6#,%'R^I1M!
%`^of/7)'F!E'92Ao^dnYC*WRQ+D#bZ!MUc\oT#%6?7QBUJY!df[`p34'>+AV?P9#Od7CQl3a.Bgr)bp(-4%Sbb[(jMO9GuZE-r&o
%Q:P.fbKqiMeN-<WFNKW];n[njdBT=uJ`QW<:(cZe6adKX$4:A#i;j;%26]h8kN\#2Aj*Ad;$m$WFmE9L+rn\UNU:s3PgEg&4/D5I
%,UbCm9*Z$]oR$[iX48-uP4=TFL,nIi3[$1gJen8dU+KoF*Elnsju65M0Ft-8_Pu@Ih3_k&rK!CW:3nf@=d\-a;8<]XA;nBeZQq`A
%=b::LTS(W#?;arB,D4*!g-dI`*>1g-L,oKp11EeY*!%W/<NJNN8'XUX_'*dtjYEEBAR1""CimK+2[4:Fn-o?R?ErQ.`MgC)J1r7]
%_-2U<(>"dGaYSgq7,L0W4(dO&bsIC4A>X@PI7b1sk.ZoKB7j.hZNY5^Et$aK*,;]>#cjtkYtA=&ku/O<.K\.r.Ud_Gp/=ggB&rj<
%`SlAuH_pU/Op;8tZKHLR;sr,m&U:01BIEnbK*$miWNCfWXH#]>lm<'%aMpZP&1]ms7X2PA5-pY^Ca_goa?5Csd][H#0jCSHMSupJ
%?GgB5>D&i)Y6<B\LmkiHA^+n.&:kXpX@C&KK_l>X@HA9JJre*p%Z;BL:Q+G_N]B;aDf`3#+XTe_du_MWM-,te@fb0^0t/dS_]>*]
%6*;q=mCm;P=C)*_bHR65Ld8fmd#eGdC`/)VEbR.SQpI3&lGt(m&H2J?j\$Bc"'4uCK_*ECM%g,MTYVaEZc#H<JJf;]J_:_Q*n9Md
%#!G%W=[i'!87>$'kZGY_7M>IkNo'dth4e(8I"dOK3;6D)CV4BI5;T)H&4]n+\%KK[*Fn'`HU/R@b]#98Z%!_Z@b;NsV%K.#$bQVC
%cD)eeO<:sT<?Q4?o[O4lF8@6A7"fuY&p_BYnk+;jH9I'1q%EA>iBgCY,"hEMDs<^pc;"nV&g>;jLgDlB>csN?$?%8KYY$MUa<6AC
%,NDnC_*f<1hNB4"bgJTZIj1(cj^Qln+_'G2;CMqhYF>lFouARKGd+"H?IGljBH9gP2,(IPX?)VYTiMr3`1lf5@M:%>hoh"Y7"II/
%ACKS1U_tF;Km4&J[sAB@XH4"C+;ooo#r[N?9Wd;15;tf[.<AN]2W58W=]r[6idqsBQ40u?-E+6c6]E?@%!:K$PS[j^EfeBnAQQ$j
%n4@h21o@$F,.'o)SkA(XM+!GRXA"3k2!\PE,e46C>C729DsrrL%pNhL+!@R<mc.`6,V\8aC7ij'O.$??>@@RN/[NtI1'2S(i0!\W
%d$-Z@A!6V&Lf.HNDA0ZOjP""I&/.>9HXO@H4OQI'77VB)Z4j*'*_&XIX(!@\c(QR6>Xr'@.!dK17fisY(",kd;FeUVY@Dm>OZLh6
%?Ha-+'p30@?=,H3)a\!Ed]BaQJ/9:Qfk'fa=O@..L5leQTFcrF[$K1(VSKK>2,#EC"QRLV+Y19]iN;Q2abh81*8Uh21$845iHZ(=
%J_UEfb2O/PBdENF`_eD/lA@WM#H,LS/AP^,3B,ArMk=[38b4&N#L%JR_m.oKBq>nmd=Vs>Mjt.Lbss]QO<R13YIk^bfs/Ll8;Z$D
%lm=n;4uFrnPR9u%WSDM5P7W7Y=#Fa2=%Cmb8QJOI6jpe4VUuF7N[VET;mFN)!$N1tN_[ZoaA%_CAB%<>//N-Z5"\Z^(LXU@ALp(K
%_fCe\Qn_c834giAVAB.)67aMnK/tFE^*0pX"\]F(*p%#1Ve>P+Psfq1l_882p[C!Jgn+"Ta%B,s.3jb1P#-Es99s>\!N^-OOYlL%
%q5JZi``801Hq)m:H.,<)-d)j-BOZ]drnRrV)2BJf29/<Ug$+>K'0o[S]ksc_ARVlSVM\=e-nd=@Lo!)-.!9NCqbL#XoH:#qPicK]
%F4aO0BO[WMom.2R;"@!S/WsiZjT4H*OkLZWIZp^UaW$&Is+"+IqC>`cnP\QqL%!6"P7jKb7%M:@K<-U6Z7%!r^][">![@#*\ae_l
%6Z,;iC#GA&_H]54A43nD/19+j$S_khEOgoqL9k\a]b&_XE7oT3@O"_M)3R)?2"JaV,Q^(cWCT;WFgp&P_cNe7'_."1N!qM>m;kG2
%DL`%%QA!_)b'AaQ0D,'@9"i<o85<D,Aq9nt@;-.UfL+lq(1)%0ka0pkNkpX)^(iIc]IP[k/@feA+s.</0r?9!8Ri!g$8"eE)-k[W
%rVfDC^SEjqZ(2"+EtjR/?b6QKXUgbV*(UP]YkF:SMmBfp<mOY6%eDJ*[B,<g"?]P)N$XB/S^^48DACSoL?:pL7eDj[;-:Mf-'+&n
%jiXfXj-Tl3G`GeoD1[mOaoHKj]#c)5$UN9VP'@tNGZ;tBUG/KEVMI'uqL/cIjWoO!PNW6\V+aR/#!IqZmk[uXUKo`/Wg\g@$DW<o
%b1o)l\,]rf-%_6^!0pKVrABBZ(mXS]<s%0/E@G9q3ifAPK!B#9@3/Wl+RKrD@bReV[0NO<i6_fSF@YU23)YlVSIlc5:L^,nk_Yl%
%%WTW>;._H)Nd6:-dfLZMmqr"A0M$aP8>f$J8j'rrc)C+o3W[bXb]Qqo+;rHlV@'C,XZ7RlXRsk>-q^WX@Se9!J:p=FLKXIFqn^EH
%MPPHa.]d^`\j6^=XCRT[LC"!f,3-0"/PsO>c81']+R$kA9n#;8(0jF1Ruf?26U`T6&Y0&_-q6.*R7!;*%NX\a9V&pWk_8+ie..Wk
%2pDn'bJ92Dq(KG>R&0BX1":_a?eZu%8X&P9aKUf7?iA-KMK-FM;52'l#P(L66H#1aJ/$7_+mR1Ue.e^u-of2EE<AVIl&2S%6/mBg
%FpTpWTtNPq/r;X#6QRa%1p!gq_bp@JUKBo#_<ki=A<]tjU4aupVl.>,B=qHC,Z&^U8]44K%u\4`6U+$TQ%?:J<@oo0fQ-IQ\rRh[
%ib(RgCmi8Y(5AuZ(>op;@qgCIG62tp.8"#&q=u<V'%M%rNJ06hm_l1")(=iDcm<a.@Cp.t/O0:I3]IOpKh5\SVBjCjp,SGd8Ji];
%=!8F]B^.TGi&Ul!f%##^I%4c7%L_d'\_JYFj<SB(C()Ypm4G8t@7-GjLr5l_-E\XqYZZM[&NcnPkKlC#fa`<T!:N1na\,`;T#-gc
%$_K?<bu=.pW(YM+JJM$qL%ZLU*PMJS\okE*StR*V^Q9iN7.!]iD*2VndM,fZK$8CYTJ/5nka/jI$OkJ(SusU1:C&$Ce3J:)\%Oa9
%n.\e==P-4XAPY7eq7?o/"G'<2lnu4K-!=*'.oI4U6p_)0KQuQO,fTn%i*(\8-I2[lPMd-T/UhRB;I9X*:j=s^=9TllW^tTOiss^T
%5"JI1@VrfpWMg(M4)u<oEQBp8?T4)N282W4(pcFhX)G(qf@E_Bl*mJMB80!$ij$sJRk73.WX-g,YY)V=G#rqAYd>&B5a&J60gQRS
%4dDKE;54i2@P[AfH01\@.FLMr<-[ZWksH2k<508qmF8:*c6ELKn7g+V6(qfsU*7NK<Y&nfkuJYG?N7S'mC;8Qi%\A/!V.!5lDeeA
%\UBI$S<G]-`OF7r9'h_M)4Q#r%5YFN#]$[NZQf'Vr*hPl.Y;8!),0iXD7T2lfk+*]V6AIm)'okS[mc*l=ce4<7O%)/P=c.Qd7ah8
%2rt*ll;PVQ8;p#h4Tl(-b>BCG@%msgaqG!<5)+@!XbO\,dc!Y&c"<XY<=f/,*(D&nP.*6!_]YRO\o@0C:fbKh'-o+bSI?8Ia\L'g
%&fn;&\o*VllKn2(8Ohnap23<aMjX9l[>3kQN,_G;f1`LcIQF2t,-%^_BLXU4ZqS6ao&('ClaV%K-F"o(;="nO&3VKZ,i]%knC1/7
%Df_gEj5(2tZuB;RL*D#TU;&Z[%PoQi8u<&-St7JV:=CPlUoi)m@\:Kh\INd.C5XX<7YS5Y<Q$3f"nYKh$ps-Y$Qb[tUO7NFd1NW0
%VZsoBXE0ga,MJ+d9gNj.HBJ!8W#*>sKd*7Lbi6ND.@Dq>jQ`4N4Nq3'kV*X-_t2JK;.:lF>X1NU'B*V:?+t(B7r0uuD9sP:MeL3X
%fbj8h0r0NgLe_fJdNa?^;+hH_1I\C`MOO#QX$[c$G*6$b=E7\sPD0K#T:;&`2i4Ap6Sebi'AF4M#NMZOR<"iDQ_eq2<*Zbn.O0D5
%WElI6VIY!cj>V?qg7t6#ghp.qp5LN-[u<^bWRZaY"j39c=:K-X<O?/N>m_7&%W$7NPpS/)FdUB-o4b>.HJK'M>s\4aNJs1I(h0:B
%,CH=]:XBsKIbPs-\.?h0%q:5>N,M\g;\j%%>_AiTfYe;'^0h]J+CPM_`Osf-IP^cmXbu7DJKQ.Gc\:q!=oid6Ujdl[he>Ds7TTC?
%8;phSag..bE"b\(JdSbSb+?YpJ4(@k@Uk!>0gnJSOemm4Q`LNh1+koFammT);]uKK.1'WOPHqKq1]#O`nr@+M:GQ6aBXri4#,Na`
%(]djIe@cR;Q.R3T9g2af(i&D6)l<EMW.Z(fMl1-]_Xfqsi)Nm^JSHiIaO@/,4EMd"0GNf.hQ]]%MoHfLmjLq-A?P]6;MSm#8kg'B
%(ZFfu^0VI`>f5$H[OE5_.@s&W3e?)eUEYbYCn0!G<4\VO4?4l<U8LK29SG5I.HN:(Xjd5eX0Wum(fWbV(/X5!3N)D-?-o&Zd6eu.
%Sk,;J8kYpMb#LkE^ae)!_@M>NZ]i6ip"OR=%R>Sa$rEp<n$E.P#)u'])AO2IYt3XnWEiBrA&u+cq$U5s'16D]Y*45JOq[)Z7BpXG
%XDt4*$e4o[F^+-Qq_A@1=%4i&WmJ'`ALA_?=1i71P\[;A@(Q+85SPHbp08G*k=Hn(N.eckDLEEqOCB16EX3*%B*6+<$DOpPEriPl
%Y29M`d>'.-J.rf5&V;#QE*BBrc'!NO_@&NUX0rm[^lkX":aCWA7D5c/Ln%ud7hsb<CZG"QN%GY?#=AdA,<Z(0/I$NbPO->(r)faD
%6cMgc^hM1FSRmL\Jg<`]Nh[@HC,A@9'.Bnq[0,JDU3[89di`!#;ak0@9ic")E$=c:#grLogPGg>/!BiU[&YI3<2$[Tg&Y+.=j>.\
%4[k;Ts5],pROa,Dc:hPD,'BmdlC@A0J7F.EG&3l%ZPRI;Sgc6lUu(e#=^`mn?3SL%=BUO*%*3sdn^X>SF-)W'+U<OKEm-![Q*Y+]
%b\2MGh&!!3!H"V7krD:%9i`/Ajt[a8,f"5KQ^E(b2gg1pjAD??]VQU6=I;GOGKpIfhC_]!Z?Z4-<dAObfh=(@[/q$O5g4s)_59e=
%)68f14@Sf`24aq"*^isj\^&aNUb,#Q7=Y[`9Gi2bn3_7E.UIN;aijXk'D7Mb7,D*b4%Xos5LF$Sb6X'+;mO8`+b_=[!T+/A%X?jI
%*@j6Q0D3e)V8C5lABR5f.@A>=-lBum[u7k%,Z$#;oc+US%L9Oe2'.H?AF$4ZC2_g1Q$u)IgaJX*WE+S%;APQ!4-"pV-M*2_Djd7S
%$ouk!eDJ<p,u,'mAicSc.PLLb)^_aQ0ICIu%R+G=E$qnZe9OA)V\$j:=-C_=Aqa^3YJ>kS"J>/JrP-n[/]X?U9?9r0/ns\ZOI-"j
%RVf2)XVqKS*\t9867KR#ltX`7fISKbDjjlZq4\-2,Hsh_?MIbJ'+dar-p[kpM5^`,OE8Y!ifqb_;?O!Uo='7O.B55@"^a14LqaGR
%/1<K>Q:+ROVr[s`feGpqSf(2iVm9?[`O8gT`E9L#aGP]KqfBLWg!YEDEoRW)1e(!+14Vp0Y*BRB8Bf=Q+d9`nPq^ej_/<<42OS@O
%<Z#7;)X3OO`/DK:'\[4d"6;F9-:#4U:`6'BqOZA5p)J?">K0)a.XDds=fd,jO6+6%]VQm*1>X"'"E"O,nAU[4Xc,bkK6j4Y.DeC4
%[+a;*eI_JB.L]IHQ7[gp[4Vs+J52@^$*0>aeZl5)Ml8]fA:l!^!9Thc'a_qkdu@pFUii-(bg^%IL9[091\54h0b0?piCKk<NJ9ET
%M0#c8)+7M`7G;R/S')S3&RY\j1e`_i`?r:B9\cRt3sJ!\r%f7L:^b)>>c\@67tK4#hj*IofN6E7,iP.^E?NZM[GW$^+rOaK=mCta
%)jda\6E+'Dbq0+L"mImI\2:1$K<g]GBW9*,3L!^i>PAu:76"j(<sR,H(ZeU,##lL4YbMk-m$3+BW$QKi1(odOj,(>`=I"7d@soE-
%?sRW%9.FM>@`tn8lZR-ZHEG+*<)\>DaSi9P.Inb%]PY0]+<Nn(1R8^XJ[>.5;0(>H-t["cU:Dr\QAanE-VZhTpKiLd`fh6CKpKgt
%mtEJf>=]#&Brof0l_Si]"HQULmBD^/\o:2L*Op5?mXgaE%c_]<W[&H*D57-ok]s+KNT5IC$.FQqoINmf>5Uc>RRlA5r)+FIUG7aU
%Fr5p5d)pZ`jP^NAfrVT16>kbh#T10aOp@<XU9U+YitQaZ$Lee\=iaI(-g7B$7U<4daN/gc%)P\[B:T,U!oeLH^=I%P+rT*Jk)5m"
%9jT2d,Jtueo,Y"_]1HZCX*+mqi5R_"4Vg7`<a$k1iSIG\%GkaDnc8`%RjoR5,3s(k?V[7Fel\,B\r5gWfKj2A#73qBQBNd#/RhqS
%'Uq\&?g84Ti1WSWTU+(U*g*`N:25E@AB6H?MA$[!.\^'#BOr`H3\&B3.G=qW*Ci:dUn)0k1-LjV*GXH+%Y6;`\QFUcZ&f&uKlkF5
%2ED+_#p(1SeZ&4b;@F_%573`SRtjs/W:"1s/6l-]EK/-_7P+sYi94B[[,U>.l?Ijp6.1CN#aY9,MDAs2%gCj"e:94r.GU.RGUp!2
%)CRqIB0'TN**TU/3>LqSRUEhmVF9eT@aZq[>eJ2GP+>S6;UF8/OoS*n^4Z<a%&O4IPIR<Tb,(!`qp9.5RVA4G5nd.!>th\J/'8<C
%,+<US<tHb7*2o(_[!2a//`B:Aar\K@!J(h=I3qcKBb\t;i[i)TZ2C=bOuNZjoEiN4oEPMr/q^Gt0fg:3bE*o?74XtnGlokhQkl+u
%.CG;raLMEi.T)>Q$?;;BV6J<Klp7KS\`>J9lD[bA^i:SqJM.GKiE$I@(P+\@$4pEbP$&f-O_1DCCaIl"`ZEpqVV$e"#GoEHBOakK
%lX#84YfQOD+/9sXO^d=c'%8\#_8s?Z@[T]oIX&]3=(S*d5cU")[?-u#&?c@Y%eneT-7*)*-9Xdj:M,bnPfuiFSI@9UcsT2fQi]44
%X<h^@9lRhc?S5'U`K5j7'/>qh"rdlA;dUY<-^YB:/NZQAZ@!/n_*XpH?\k_Z&<e;cM5V,i!0K3L(tNCd,:cpGR.\?C#`8Mql3Kp:
%]o[p34e&$HGI1dM(iY"/8t'Nn>Q?@M%>k=q:JIWT&POP*`_R&8=BZP4TS02G`p@^NQR6L-,lDAnDOsFB:3_&OCPC:cN*<-8\WXij
%3sF:Kr:Z:+/,HHnnh`,%\K0'R0r"?Ao`GX@Llm;60*,)jMZ'>-nZ8)kb1o^!W$]\,-s9J^D/M*8]jd!C%25+`[dkU&,&'tY.^qeh
%Y%u6><]H7Y$1#4t[KW!jbBa8rcRJp>QB^BL9jn[^->u?=PoFVg(@,1LLe"[]+U"3.+PB"2Mbq'!fGUB^//hiYTRj?bSIE49@J(>k
%0Z7=d+H;aEF`4rK6M+ZhW:bHj)[;-+B?D$8eQN3$/@jV:rL$-BOb/7U1<G^QO@@;75"7iVhja9PGt2E(=uDMl)0i=(8>6QQ"Q>E8
%,t9\EGu2aWUL`n"+..Mm_B1%t>:%2Ij6B;sP'Vj!-a5]U;2/P36lFCf+9>RG7S-fX=4Gg\V2Dc4P0#-QNE94can6&V\./k^`m5?/
%DP"Hs33@c4I#\a5VHNeV+se#=;VWj[(MY6HaX^/&;Ji?1[`4,80g$TR[G:V!VBFQW=gA4*(Ju/fR`GBhLlmI\IP#@&8lH1pPOBb[
%M>LgG0I-ICM_D(,N8nVqV<DhQeea!rHJ[9NJ#ucq9K0`?%1/ZpKu`FiKm/=ZdXKCsn/+Ak%;h60"/Hb#."OmK7$feGn.=#%*J(;a
%4f]E$f>"Z5R\>Pn<;mC'EFalBnomX!M(XkSGApHNWi1m9G?B!GM5-qR+_-Add(W-UJDJk8^]\\Z](2C:pPPFHhm!NQZCFYacA[X)
%Ajbk/&8La1dN-V.M*!Im\oVuLm"WkmJ!?gOa5onYQ,iuWkVC,TAhnSo\n(c?arM\4aIAf[gsMb>_l.P[-RoOBPdo`i)5pOqQ+4`o
%b<pQO.GWI%$rNP*^g5AdU98E)11+ipR_0YbKqS13WS>6?EQ?PHm1QaDe#7,=$?ccO9r76Qn2kf)4,RlB1p%)=&Te;%6eIELR0ku0
%Ldu%g31!@jNWb2I6e&9Q8]FiCXIY&P9UpJWCM+7UTp0/Q[Bjh-/R<jg[BleH%Un"O[4>Q3I_2U#X<[D>B;0Rg8]FBSZn"md(V?I`
%C-/@G1_mAJ(eZ+t<]rN"0k#:$Ed$(]Tf-ekAqqrAar.gY*O\3UK^2fbe.'k7O7Zk^=MkWL8_HBU&NF`2ZGX&HRc$l\DEuSl,)]19
%cIsmY51QpELcb`bD`W%W6#0OK6?[K=Y.P`1+Zip_Ta[Y%g$s,+6_Fh?9j4D\G1,aJ-tLARUC;>[W3`p'qY"19c@X1PJe-mm<&h\W
%Cf5Fdb=p)SRS!0)@WoC"b.,$MSHTrdpXW7t41'm^E)X*Ln0G[TURE3,,jAa7AnOJmm*MnIB1Z[,rJ$a]RRKN@WS(Dc*;Gaf3BKk_
%HRd35jm4Pf:IOQ]S/iH3=LZ]>m(ej=%%t/"*QXcQQ.h[q*@RULqm+>s=it8PAoB/3#>-Gmg/Bjj2XggKQlSq4g@\^p%V/8/8*t&7
%(.:t-H-Xq+/B`=L[oP@J95+HXZq\fj@S;?DcafL8V>R*JURI`jF;nN1%P:-2m7&flP['D(^5:O*_2I<*;_^@,@6p9J->#ap2epi"
%0g!s=5Z)#DAr"GWP#&]USY_,r,rJ]I%T-8if[&(6_!`Tl6IkEn2j\"mea,g?LYCImR[p:X4@l9;R[s-4e[$30G*XSRhMu>oen`)o
%=0k7e&9qT_B'6,_<8siga"Xh-)e*uh,k@Y)Yo.P/k1Fl44450JVJ@Mj8+m5r8uS*tGn_,IBju86ip;DgSMV!V=#IV[>#!7:DOOa`
%:bPXbNK_&Tfo8..g3(im8]1Q&7X?j=-,%`Vcc,8GNmZ$&AnN"JTMC].g#:+bNp)mu*Ti`nQ`HJoC0dVN>fH%L\Zk!!c,At1Hn<Wf
%'=.f0L'3a0R%5H1Q,6eM%MV`_-uKa*"7IEiR[]\8&4[5"@Wj#W'QH7;jT8_W+I#UEcE]JYV@>CElb-bQ:!F/"Ftgh4AnP9?6@X3Z
%Ad@HMOYLNaFsJU`;:\Fc%eL.Gk2"PRU]gu]27rD.R@5-e+%2-nWS)ij9d4%@bmq0_3-f.OFth.7VpX#\@.u&d1KUp#l:""LY%D=g
%(Rg+Vc-DIV1mSS.4%m(NM2TIOL6[E\=>MfrZq>@=PI':h$jALK402@kU7BE[@@\'0cmEC<K57Edb1YI@;KR!U+A:Ca'Lt/FIRt;t
%2*!`kg1k+VjQp:R.IG^Jm''I4E1b8*=et@^W3"+o_<pbdKPY[P(,!,K;b&i0">d>*`U(AX+E5J&b76US-;cWL4)>%WV?W.%/ItbQ
%1)I50OfCP/fKn]<l8sTV*IPG_h1ge-a.#l"L`IIe?q1O8'UoNe<5B&IEi<I3!d:M\V8Q<]YCj1&C?M"4*C;*S!H77Gej*49B]Mk#
%%aE5&n*5%/Z'5o?l?1[b8MsGM6aPsIWi=TQKFgOU?.A2e+Bmk_of@I3`^$#<*W-E4IQ$RSqD>4%1Q'e8>7k"D?+V_td!O6E41C3a
%%N2g"YoNHuFQ)B1Fmt9f37rrMi+@j[o%9*_X*piKLH-&3=W9ab:)[@YA`_uH<dmj;kAZ>A[-\\7KffR4WntT<4=gR*;b<Vt-F[B8
%+!9KI5O\W;DI'N;,X[_VBG@ToR@[su;2+<U,tG=OL0bB')HjX,'<WQ=dmUXi1#`o7W*;dK?5Sa6DB0_AJZDc!X[C@#-o*[93]O7h
%1D=K&>=XE\16neS*?(/SA1Cer#8Kr!_KDr)[\IZ0D<fbpffD5N26+6,*HMj'C'8[34=mOOB>SdBU.[5"_KA2_XHIcoR#*sfj3Y,d
%#H<V4&8o(%Q<,CnU?^<4`qAnWCn5/0M:#(p"egk!N/*g;*=el4hIZ#WEtG&4-<k,^B&M-mC`Qcm!,DL>04[X4ir+UJSRn*R)HH+e
%;S]d-Wc_^pXWPDuW7KXfdGIsi/85gh0WN^WBJa.<VHSaeJf\4*%P>)dDH*`*Mm+SQ<9rI@OEIA"etGNjBiMLcP2p:)oD/[JPUf(!
%Xg8G.=gt).#KKR!/#ld.(+]5lW`hoE>(#YHC7U&d>AhZZGU6<iMJb%M#EXUir%;/C,Di.q/m8L8K#L-!eN->ul624gFV[@I<XDMm
%FGlHXJ_`$if,E1?l_8N8&^Hjm>%^G+Rb`^3*H+QdSL.N1GD@G@9si3/Lt6HWetK")bL/65KVFd;Wi9SNRRKfXC"AF+%)]5`f!33X
%Q=A@FZX"]dC"?^ncU,CL=[tHeS$J_j#:EV-ihfk6okTAJe5OUQ9A0'P+^'TO@,n1fB,u-'7_q,YQ;nk_"R@UQW`'`<lgXh\Qok`,
%Tqb(Fihh<MCo1c]Jotn'^j-Tp@gc`SF29p4e&A<a2ut@a9*`oB9Ejb/bh-u<XKu6lrN978+Z%>!UR>S^ARm"(;6^W.:6sm^aZ:IF
%lGpGGSOI!sb@,!R%/96@.-CoH$sNEa;lmm>5Z23_@\!s7&h^e*SL"eZZ5\[Df[nX'AtiF`8KC(X2qP,uZR?qSeN2?8jAk62,!@V+
%,+U_mX[BG7PuY4%/YZq8<9qW<bXfoN[LQ)-'(I;QLQ8Y!I4eaEI8SA(#QDWHUm1A-b1>NTAB11=f&6c@JJgYO>"95t[_8PAB4D<]
%:K?`-3[?M?Wc`n2Ngb)q*#O[*C"?^kPFk0!lc>dG/E3(0*>ULZ#'J0O6=s10D45U5.D3c>B\%`,hbraDC"D8AMNHgkZd.^1K%EEV
%E2mI%2:4J#GLQkhMq6jd<S^DMlbHUF-sY6''=@fV2g"A%;9m@f>=Z[7m+Jsf*W1n)U7^c&_(SA:LJ>5f5bI8$2;L<N8rsF!VH_*P
%$YFrIh)a>ccKW!8>=SgX!`r+*NhR1aCZ\aU`k0[XR-E2<iGrJHCV"Z(EMs&kFmE.b:F5P!DB5bN\a/[pFhj\K7"SLhX`H%XePOkr
%>6if;^iYdB6\.6d.CsC;`?I'J'PG""BGRPX$.i=#VJ0Ke;T-XHPB5LjY+m3]Jff^4/;)kENP]h(%".R"B#8\BIZ]pkL$P\d5]](%
%Xs;gU'ucY]*UuAr5Y\bK*911c69>hbn3oieb9gJL(/j(4iArEM-gio.Y&g\&^^Eut3g)Iqk%cSS7ns2foqCAsi77@;RrBB451ORa
%_KFAu84+GPlWDfbEAJ926`F2W-BH#dU^;o^K.1p"LkSYXD^J^ZRN[gs2W6][Gu:'=$.k<B81m+AY+sPLV*^Yl*U@aEZJMDCn/P#!
%$E)<pXDJp3W*G+o/gQB3jZ3a1nG>'(3bc]b<3G8\dP=h*,@?M9MlLe<WQ%>hCT:Wpk!Fb`'s9pX\HmI=iAq_Wakgka>_fL+[^$4k
%M1.u57c?BJK/kmBX[=.VU7>`BXlE-$SBBD+DdFd09X]tHB68WlC`PODM8M:.3m(%a1X(O<8C^<Vd3`*gPdi5=pBj]TA:]_.\;iYq
%VJjKcbq5pD`4&US:,\cHRo/9.C=Y).X!uXtM1GEO1Z^YQF>T+n+Vl9./?</Y]1t2e#/?j;#Jq,if6$C@dF65Oot!k&i&W:If(F&o
%lf'O=VHubZ/bZcTf?$\)<*&ZQfL;F%/(l6eQ%k[Vf#6mQ;afNXM:YUALm5/#of>]H81'n-f25hOZl0dVZ90m8B'ONo9+MB^0i&`m
%J"6Y@??a,]p]"-`WHqiuO?_7prU`>PGCMT$X]Jt!7)O4US/d#YHZW:Mp#:\6^HD:rhIZ8E%mTjK/cTFBr:-9Vr6l_uO6WQ*r8?W7
%DfkL/^]"!"02>gqnDEiO?h($iG!>cSS"o$?`u"CL:Ck3iIs1=ASbhOT?M^kGLM-'&Dnd<Ps)YjIk((L`SWEg2ph]rMZX;S3+7$Bq
%h:oTqr_J;>Y>5\il[<mGrI5pUT=m@4J,Hn7jQ4Lu0"KreHUmPdU@hEjkPMaCp@=i2YKqZDkl+^pI^c+GqCoDHbV'L_O_*ADjUPS+
%m*e1>(]JQ4/f_TSkWXCj+5_M4NVU$Z>Mo8s^9-8K\(,d#c7\?"*q.[.qs!&.a.LYcA\POLq6pN^m(-i<bF\Odc0Xut2dc!FmJVG%
%i)\D\H)9!1\b.@rGBS5>s3k<bNul#6a!]d6AkVtYH`UFqmea\A#Cej!pqQ8.NqXXPi7;2fP-/Xae?(fVHLUA$d=]d6ZhLBT0BlJ`
%RTju+*pV]GoDY]&pWMt]lVbLg<<hdI0@sM$VIo/"Vn`4fYC?5Tq^a+5%o2lE:9M"HGPs@Ra%JV<pb]HenrGF[Y)bbZpaC@Ma@#^^
%S!3TEqZhU3h0]%JiVp+m>sD\&S\05po'Z!`/#LMW:]C-qK-,8#=a,&Tc>MIkXZO/Zc7Z1[]6.b1l!%FM3nBkXQL4#STf)/Um_\BS
%`l@G%e%IeLNkRJ5I(+"\eudc35ASiPh6/tIT#fLNl\Ai<UY1K9q.B'\4"\[kN=G2`m4KB%'Qn&>?&"Jka&mi'qT"u"1"Lu?Xac;8
%(#a^H:J?)YblUX9erN%,MSNln+(7ljIIP/5n`@2s_h[N<FmC4&It,9u4Kq%mNGY-WDWAiVha?I^]Kb,^If6eRIcYh%GFLeDmCW&f
%p#4T_cO\m33lm?TQ:3^O8%NiHp@jU@s'5Tnd(Oc"p?6JK`u:T6et(gn*dleL48'>#G&48[f-#Y8P9&j%R8<)iG*_d-4m&mDq>0%Z
%Uc"'Ha6Ph?`4@ljgH0iQXn(>r5PKV0e=HS(GO_;c*o9f-3P!W\D0eiFG<or)#5@'>bb?bcO)hXLZZgflB#4'0,^9.Sc<c!DnFN>#
%@Qs-+aif4Mkl]b\#!;rjpANC8-M)]6ZH(\qIsUb\VnF$cr3pg@[.M6ef\%8BC%)#4GDCOc0/(*&e$]9-iqFilfj18ca"_6(%B96q
%rFP_LC1_=f+a@`ek**1SH`)X35J9':>;g>iOu9bcicu>En;kaH]DM2jQZN:iEVhq)(@Ze65(k:pP8AeX:V\C9FIft+Zh]XeTDa[3
%b<PDOjo'Ap_*=P\o#a`*q;Cncqs(u10@Z%E5F2P0(3iW&Vs*M+%#d&uHnPS5N?PJ[AFnWOZEuKD]GMqtA&tcrCCGKJ+[9)4&4,/W
%":dS_(c']Q7$4&9AF\Bd`f8T[nJX>mj2PliG`<ZGET8ooI)EMc:%aMfgfM)gnu^5ZHZ/'9LEGBf4*Ymg>Sl;XLTdU\jO\33e#dt@
%KW<7BZPWKd7h6^-qrQc"kiA@/HFWcU\*i1dpSU7*]um+/b!j6$o*="?Kh2O'1Kg2b)#W:B7Hk!uA]_OUR9]0$ST-1<p:LF872CAA
%h,`$B7G[Cmja?XZl+t4+-[!ZopnX@C_]MZ<q>'O@khtfkdt?8ES=K!f?Q)gkH>m+oiOBV_>N*)ofnpjkeQY-?(7,ej'IJl^qdoJN
%%c=pK"TGU1W(6f#Y4o*07K7`A(XprJ]%m0BI9cQ@0"d7'4hNr1YMSC*UL?ZNL@4l8H4o.nI8"aZ]q[gilYYHM4MmFhf"#itFVe]U
%&`BGX^h`ni78(NWqK>p#AOToXnM4/+AOTp+jQ.]m"?;;^0+,T.J6A#$'mWrEQPFdKOdB^7]PMA:p?2jjk8*U@'g]G/rN'NE2t+qb
%QD^oW_kZj;-*12T.rO7BS"pa83Ea>,b4V%$i\@P*dG`b[H\[s)k>0>Jhj+b#>DXhq%C>FKW`[i-B1,_(/rl"+38W:$g[55cATQS>
%"nK2X3Se5^ht"a+AT<$JMrU(npl2U>h8n0K$r4u@?3OY>!:.`4]Z+S.nG:!c",YX+STkJcYO5U:P;6Vo@ES_+<_W1I+UGOmW3_)>
%rrnZg<1^4>R4iMV\EJ+>iK<b?(J_0sTEk@]U_eq'@9:m8?cTR#>[VNI^"=fJmIc+8oS_l2lg5K%55F/mG6_at#c@p2(PeXO4TAbQ
%\/2L<"5V(Sfs],uD)GTS`pV#pI<jAnT!m<u/@t\3WU=u%jmUKDH2&SZ+-')k?;(:s^OLa?\,VLbG,4B`mG@j$fe<ACFr*2S^YGeP
%l/CgQiX`M/)Z:9:kZQ3*2>umHgjl;aL%[#W300a5YgaS-[s.?0VnL\0s*Ss][dC&I7TN:!Q.,1F3qpsm(=m9(P^ZiA7]ho(>IZ<a
%2C\UU>,b`0."7:eH8;m+pE^]`(/+V74bLd%gf`\Y4AEP\B2,jV,GM!!DWe"/G?6C+:PE\!onleRBWWD,4JukHn8I0M[=\;_/=pV\
%q3G39k?'"=<fjKgEY%.7XVKp++(f9lq7ZI[)&:8qMrRu,^/g?!$fj2uOD=mm<iq?s!VonaIcnAglUSur<K]S_067N%q/j?kG(%Tp
%pM[e$5MQ)2iQ9<1"Y$@qF)07umd0FZs/3UO*^+nSN_dCJc'D@$9HNNNSbmm)h8(1/&,u%pKB)n80@ef7MaC5Zca;dtk$Qu;IfKDG
%53a>:mg46,O"!s[ch4O@q;HG!g45qO:(EU6Yl39WXod4(p8>ST5E7"Ch(ebuMuM72Q@-)%lVTd)[J3Z`i8#+c8l*]6gs#V3]rcOc
%=0K>oe7Y27?noouYI`rH2A7U_a'F#`$u=g>k<*!0LK9Fo]+[afo"1Lo8]I+CPpGD/F(!+7#k[F#P>&'gFcU)6SjJ;TJcP!N4R-S=
%%,>O&ZY%iQVDE(5Q^+d;-$OYrK,3"]4b5&(;ld,`e;lZGrq=7GkoUF3T*q+Z0ErKX@=L;n4+?qAp9KsTm<sJ+n=PaCHFfY9Z)cOk
%h0R:-#&)"(]g'a-O7//(^ODJlkn+0RDVd*0lS,q_R/L_>Ap55,Fu<m`Nj>#+0Zph>Lp#+FD5$VAPt*qGe3c:jN83WdmL3.[j)G8B
%1\X'r3kF9(]CNT3`m\745(A&d.@.G-Gnj-7V=$i9l&eq_CfY\JTHZ9j\67l804:g4C:0Bco68IW]qTjc=h*F)AcD*^QQX3F9iMY4
%GO'_D7,Mie;jIls,pZ"TSuqnj4+OdFHY8sV+-F,r,k1ZgLVr/+m#.(J](J>Q^V=.u*k$Dgbkdk!C]8Fbn)aQJq`!u)p9*;HhL2Lg
%?M*W^:NZJO]mbBSG51Z]GH).[UV15AeDhe0\l\cU8,Id"\UK$NpY*7>K=s]!L#Wj&\l5dShKZu^*5QohhOVkZFVrEt:*88<ffT&n
%hCjeudi[fIX8g;Z4.(<@P(.M-?Mnbgnn(N7AU0NppZ1gA&F:GIg7+:!c0".(s6)K[B(,Nac%;d'lg^W*P-Qs-PXik;I>%"BZ>IHW
%$SlN]FS\P$U4Y3ZrgO'nbl1h=S>]qQ#]4E3#:(t.g%]J>h^tiVGj;g!p(sB-3T7Cu'm#peGFNZ3SBuE(/cQ`I?KaH5T$s4I<6@\m
%=u$^]Mm:UAb@nS\eJ*?]YQ"4R'nG+gHhO@aY7KMTGU..Rph5_o`ErL[fl4,iX>i4gqpW[7acG%Cr)V"MFd=\_Q>a0Y=*/0(pfK-*
%CAAWmjaS>cIKW6:@",TGqs))SHH894^P5tDOh9\]4?Ned_G8mCKAr"/e@L`2-b4JI\r]BaBQO/Jp@IY^3IJ:e#Nk\"3rd[F&rim2
%RT/ZgT!G],rTN,skH?Jf%t"ErCb+o&c+hE=dnVLT1tqpsc]QuZ;5VOSZV<RfZDm_#5CLNs;lf3T4_B0qlJ&?8]LA\:&,]P(Q1*"I
%H2'*RQ\5>4`A7#\E5*!;r`%s[s5stPp%A>:H*.+QeGtM5g5YKS=Q72(r9O2&rmf-LW`jhmgKB^a+(5PjrT"TP\bJCL@eHa%]k%u;
%\I*A[@[p*gY_mEQhRPa!1!\sZ<kTu'5/G5.lBI(]2Drn,;#;V19CrA%aK!1(s!P!,;7tDBU5<p"cTG?/2&<jc7J2aXWlD7,2m92!
%CT>Cl3do=J+Dad*G_.@`lh9\ZBBk]8(-KDdo.]hRg[n@o^"UrmX0!*d2bTg"M`S0"kn=FdnJ!HPjq,=&Ld&;Zpr'AT-P,`R(R90H
%LrQX_0<L&MFs.c875VFld9-*n<^^GuB)@I!XGFmFq_B[rYp():U*2TTo1T^TB>D%II/#Ui11>cM_of`h*taNtKZ#A')q"Cs2:AaK
%*^'b(j71($(@;E/D6N7dpW2&pjr'&'S\78dr_YT-nk]kSR4IBkjrt]1b#c0hpF[o&?(7"bK^]S(d-]Ca=D@o/>d`D!hcoi%RpB4l
%Hg?.L+ng8@>f1^!pD_rW/]qg6pNp,Qhcoa'f'V=Jh0FtHhQ;Knf+$WKiEJ6gl\9?6n3,_>T7&%*^)%/uYIAi$pYu!Z/4\[Ja$(%6
%)hMZTj7c0;J%8S6em7/(<8)V^h883J?p9TcOPO2AI.1ZgK5R-&\#i,D=WaeZL"J0BUXb<?Nu<9a`+(Z7%l*U`gNY=)7^'htiQGV8
%4;VUjmhb@GSj9j=9d$=8S_s1\=nOVO?FE"U[OB5.L=*F\N4-f9H!4X`n!?%C:V]LS1N7QCdT[^ugtIJF-;4`\j`'?8YC>1e5!Ct&
%k2>H2rt2][T.Y`\cTTd[LYBKa\URs>K(8<5Iub/S>r\1BJC)@2MlM[&0(ANN,'/[Ro'VP'EmJ1qI>$/5-Ilj4Xu;mm^3b46[t!o0
%i:uZbHZ,P<P/HTMppS!)[/]K_qkp"`F31n,cb/WLD@qct'`@6-1MY\Cl8O(_lAIDf[bmid1piS$\5uM&r:<p,k%WSZa!CRd-DUI6
%#eq.+<):>`/XnFumb-Bk0&t)Wrr?#0pHEZqmk=G]&,U)XR#0KhhKZP7&":31rV(6e?P0*J7qD=<&XkP)U>'nXp$9N%_k/$`;l9kB
%cklAU5LQZ\<VLG/Im1E746Z*q43%SQM^Z`f-b=Gu?=.UOmMtK$Ck"/MB>2,jo#9;=l,+m2*W:'JQUT`p%s3/jpgbmA:j@q'pYgnV
%P;c_)G0,Bl^)r,#7h:[X*ut4),$QBiF6h,!J+2L9HX(11/C?tug0`Mp5('\EL"u*jN/-'@4@1C;F(&V8?SbQfB-XbLA#u(HO-GK1
%(SS!I.a"'RU-(pMYPmXIMmC^JD*)A/luGsh%Bq]+A^*ZSkPdW^>a0q`km?FFlp%7MPXR[BmE\4HKE^u[<gtr_Ac$OGlu+!_AcK=%
%U+Dg3g[8--UKj$p6Yjq8=`[I.36n*g0$;$;ZfRe'2Wpese?lur+2;e=Xb?l:g0ig(Bf%uh0<m3*D#FuN`<u-W5/aXHnftCX4q]Z@
%O2Ah0<jmB+V5:6A<E9a=Nt+o<T/$(8rpqOk3QkgQmAJ-Q(i@<qU7GErh3E_4OZ<2Pk^KReDUIrU%GgV0FMI_F5HO\K&'(lc_.-\;
%ds#/h*.LsAF&oL:ie=hU7+USo0->Z4`S5PVrpcIbhL'fn<8Z99fsksA2**aNqVPETSUUU4g%k9X&'W>VrqYLXn([k$4(%"I=N1=?
%p'Z?J^\(t6?/,@hA'N;kGQ-q.R%;k%m([uIi<M#6)=1,,ES-74Dt&*-A_3ir[Dpq[>lEPrZenL6PY"M2Fe@j<Dq@aT?H)GQH6;t!
%F%X("GQdIo]o'8jqm>8@PDiRW:HRgeWt.F>q)r&7r9*0;(eYtLob\q>p!/VcGmAJ"3VWEA(M;89CRj-6]07!3DdVD]DD3CGqDRI8
%^9!sK]A6;8kO05S#Of<@;@)shWU'hUe'?/58q4Vi]R7iIo=sdOG^SJ@b`IQas5A]Yn+serPVN[?+#-/>'`;H3-K?2ieIQSBrjLEC
%>((>[am]oIPHm$qhoWrT1kYPi2dYJo*mJ'ZPj-l0rh[<DqTi5[3:J^"fD;IZB?TaeD>p!ZGs#<'X?CbjqN(CiT1sXl`rVR50@GMh
%HF[XfpM%AiGP(GghPE."jQno3-Gr.Hc3'!lJ$&`pHFEb>D[O6+G95(r-gT+WC=\<hq9Ark?U+JHY;5nPpA2Z;d`t@thtc%,GB"QL
%mUnS-nV)_RA8J94Zh9>G$2U2kfQG1&Fl_B<NTJ3g(qOCu3:bNF>DKIWSDKD2^)[%(r`Que0/VlWAP2:=oT)AO@JsIR,4ducHb.q0
%:TS%Qmq0em<%$j:""uk)(;kEtK?WZl_]V2<a$C^B5ar220H7t-iui4U`GaPS"aMtnL>_u6<.f.P&P1mTFcol`=Np@Q3UZ_`F#=!4
%i59H$!1S.AcBnT\2gUL$]Bb'L2n!^M-q<B.IAhgSZ?<J)f<t4ZqB9^`(bsN]6[_jNj2L34T%dp5SRU9[cBXreqmX?/bJj2b@Fs4b
%%i*N1SH5&Nm7-HGG^X25bSHT;_ti;g..$m-6[\blUI)m!.BsAg2!FE]ossA+`.nf6.43p\r/`r$nJ,?X!?P1Z^`2Q+RbF`B)\]#j
%4QaM#S^VH^JMme??t+oPkC+AVEIQ9mX:2!DD#7p,DG+4-cr*bYd1bf80nG>Wl_VN[;Hfu=*KR2`'X;)u=9kUjlWTD[D5g+=ajSb7
%dE=4-s0hX)(rikGeY,hF$-$tHjjEMMC52]_EEq*T?g<&kXg\db@TU<j?#a3'>j$Buf:@-Of>1/OosMAG>rdr2Qbb'W",>fSnYrA1
%+QIHV_/gnC`j`VJbGD\-C"Mm?Q"iO`@@N88hgJS>`j<4.rO_NW\s`'&G4m)Ro)AFWcF]_BhB)$r3RRE9hgG`2n%24e]A%;</i*(^
%V?OW<%qV\ICroTdeaCS+fUA@f[E!oej2b)#a#Oq_Sl#'g(s)R5SPQsA;Fc=u>Y;%+0g:Jg.(dI?I&S>9%rEB<K>#6sFa0h7.e4p(
%[n_t]@.U='*ejn_XuA4jXB'K9aumNCjt+eXWN/jb8Ec%WEj1NMm*+<3hLaKqe$j\C1s2=XFa_)J__eAh>Kr/h9F^/s;=1Bamudl4
%HW(/^ofml'f)%ln#sf#'gs(4$5$'gHQVu$NLU!=&cg-*5Yicgm=Y2lYLAEdm9WGftm1+mBm;Dc@ktPZdWs-1hHArX)d+DS.Xr6Qu
%LnXbdI]r,[cK51[A\ma2-mPoZda27CqFo/O%I/r&Ii)8NA@6CqU<JV^<VQ2dgHF<Wn>Mqo[%66gNY?7JcMpN-CCmsiq6/.oL%E(U
%OnFWONL2Sgi3[^9j*l"mS*]KF2G`eQq5YTOG.D%kZAJP9r0>9g<T!WJVWl_.>_`GHXaIsYY2XQ7X%@ch>3_gj_bofP>R6PL7(^iW
%l+u>scd,msh<@Go$G6G$K?MWM%CLDIY&#"<4Rf#r>1=eQChf<j\-pU.\g;SW*Z]A.1:]Y^;]K_WhX7ab][lF-osND<+]^>+nQlI#
%W=Hjk!GTDTm!"a/NB>bAY''.jFsq8!cK(G&9\u1b@etR#Nn:@]Q9X!NY-i6gbV9dmdnXeEfpb*P:2eH9c,Ts*,P1)uVWf,IIDKpe
%]c!<lkB:M6JfNCkVJPIF\(f-1Fac:cDL's/Q_o<tLn>.XJ$-acLA^sAEg&[AgO*bN-83;mF%pY#-i'i+ES_BfY18#-]hte^]@7S6
%ljQu$2qLF'iuPdlZK'oA%"Lrl&)$??_jJCU=:^-@M;bam6hRI;Qh>"]Q!Z/R1):+UXo3'I_o@+0YBHu,Og-:hc#p9c!,3)&/cJUQ
%Jl$JlaS%OJ3kWeolt(^\9^Mr%DHUITcA)<elE8T*=YAtqL-ECo?dA4Y3Qlh2CD4%Ao=t-hFuT<K9ijIWWumbp4@s^k#lp=ac2rnA
%:LoZsIb$?hlfPC"fBVFMCp._cIlDl=nR]+p5&6U9T#l""ITMh"2g\\3\D+r6[,&[hU?hE:2Bgh1RU2sfl>"8;eHoJ>9J[Tq0+qmF
%9:;WQ0D(qk@^DqTXmll\QaV;*eh?[gb>$<Z/K[G`U>*aGI?&KQDO?=GB"SZBgm>0#^?;qHp!qpkV/+Z3Xu3nF<SM>eGEA^Ydk</N
%<Z3XC<ioM']@LY#F'h-/oFA07Q0Hb;Da/0'Z1"T7OO`TQVV)uf?Y^WdDoO,u"@JT+/a:0KWNB0Lq>hrGFW>Ct`6!h$bL*@A@JZf\
%;<CSj18<ruRXD4$Ch^X2mpSC3fHfc^R"!+=S84:1C-6K^j8VPE$?;09PGWJ@J?lu#Y.]3L]Wq-^MoP+M*dN,N:1/90IX,sS7%bZO
%Fni.mUTY/&IlQ(FPAneHZZl?DkWDsd.H]!\jhKM24$,Dbrkn9_pI>I<H@P]nK4VgpcAg1=5O)To:JT78d_]DD5*fIH*s]REiUQgl
%^HVG_nD2bH'<.lG:-50-s4;a.C&@\kK=rL$E6"S`QPdFs3nuspAq0:5nG($gSK>NEhu/<+.f,HMN0e7Clghhmp>>"g!*K3WSA*5s
%9/%pUDdhh`\dHseefT_RY*#tH1:BZlIX@23m]GW6Z&P^7c7C0JZXqN<rAf^hKf_`@m&q-5]-O\(<A^eaW)Qq9%3$pWL+U..bJj4@
%BG`9#ULBu]:c'`Y3?"29NeYZOfSkR$%==UYQsUmDZ\tSeiBa5IWJ.1k'k+)s_c"=2d4gS.`hiSJi@mZs1`R8XiNSg/pZ:E3+s%M5
%n0K:@f8/'2,%B]/LmV<i@V\Bu`Y#KM2[G:@9/lrSjB(4Zf2lD"X.)"-nS_#?!+Eg`ke^=A_?N)9_GX;!KKj[s&c3HnS2nq<NT2n$
%</&]Xl2#C/eqL.7bUL&,DstB)PmF6LaY'H^DrO5r*H$"K2Lh[7f6,JOnM9F$MNp/NSJLM`eH$^90p=YJ&gk]#p/jLI!AWkD0p@u*
%&BCuG)2^UIrRQNP?sRB=ZQ"lCcSi5D3\+a7!lbV[N'L(mU6rCaDS38V*BK<Jg[5&#kKVXYn)$>P^7CUX66.W.bW]i)pDWDt"jllB
%q*Y;@f9]CKL^Odl\6InH"$2L?.!/e6]Ce?Hlorsr4^<)rYD[jQ%CNt=C+ld))D$<mDd3:mhoF0q!8m'I`K195)^j74EDBaJ"Ec*\
%*Pn2[JI].?:4fjbff!VOSY6PjS\+gmhl=C[K,q4E.pKKKnZn3Uf8TS*6?W0b\ki/:I)YcmqSh_tip%YtpfN2N9YJL-ZX%q6Qe,SG
%^>EnT@UA++bjFEG+u"YC*QlWKdOb%T1j%2,Bl\n^Kf\ZVIC7aa2&gA%ZsY`#guE,/ji/]Xm_:g6*"B/QKEQ<(*@_5aOk!VLQ_m%2
%!9<4ki&0ia`0$WMee)@i2bUitY4!^\'kfRsqTmD!=$tY7-C3-/9P-Fi9dYtU?mg2J1RZ%'Cbp<e>;Y[IU2q95)p^FN=.>LK<9mX<
%XfOY8AEkXamYu@Q3CnOqRQ]9n7+bK-T4;*anC?$#g=l5Q#OEh!^r3pTP>LFh.2oWf5)u:81FI258?a%J:9`]`h42E$:?ojKpdt&"
%`oX$9;`A3?`Lf.A%OaFG1`kZk(;G&-4:K,]5WILWZ1,+X=Ell^L$Jie48*G7ibn&onV4q1,$nX3YjinBI??=%Hou9ROLm(LaNI'9
%b+s)WW-g_ql/C_m6H0t0,]3]?hsF;;8L6sOR5g7uS+4HlIrD(FrNK!E?/^ei:qC$g,F!Z1Ln"J1aj#mY"fh!_,-"tP6IgKOebsoK
%lBg<"Ys@u(B2H9H;I[M2ZO*YP7k6<Nb<^9c(fX9A$EEi(O4XHtiB4W0>[=K)8<XZ"Vr5!Z(S=>s4nKX+"W_K-hj98ib9@T\joVR;
%'i_pOW9u8>e_QOAl7G-44eR,0MJm!OHp,42-D5[&pia1L<6l"QpEQPaj*SLFH;DB,4/@>>f^K*,qP>l,qki-2@@6Du2&WX6+W)Aq
%+q)4V;a:-tbRU*Emu)+G?2^&6)b%*nlABBBm_fk10*Epa!p#dn3/-[''`@"hE=j8,nI!fPJ%_1M?Oph97@r?%'AP;CHB<O/qA)bS
%mpSo,lu,i6`A;<eos;UT?3-%@"uPhXX6iLR?i+V()ma(h*VmPO`nC]G,H_o5CPL`8iO<FoXVlR`&;sXHr72:k28a@WnCpPh@a4CH
%1]6Yo_s[q#6>Gr.SA&\@?5\j?&8+FN>bS0/00Tl0-7fcf3IC240m>;C?e;(lGoHs[)K&EsW4=>,.(EP6Yg+_=OCWIQ&;hYIon[AI
%2\'h!G6Rlq?0(+D(Vtb6!+BMIjTUhM9hofFX^o$8X;X[;5e7u&a3WN1!D=*4D2+-`fH>[#'obS/V\6Y02Klj;2dn"kE`h/+%7(X>
%S_/-e2gT'9,/4?X)6_`tL/9]=dC9n1I#am70/Ju@2rY>2<3N?20\o7G`aRk$[\gV=-M=@tXpM)hcGZ#k\aci*nIcY!$t%ngLS^r5
%1jL^o@R0#gA666b^=E-_F-gA'i["h>-9D+RMm*&!_3MPs6S\K#bb!)646E&Q]_%^MEFmi4Kt!Xc3G0mIcId(-_LBVlWO=s84$>=E
%ZcchXeS$/l(G3Ls;?%C-4Ks5Te4Gt(A0E,DZ;e`X0e!3XH$gT'f"868-qo4U.p&2J19"g3X`ejNHt?>*8::R*P@g1^Vl7pq\h7]g
%D=s3"ShM;r7CY*XSI9iJfB*-TG4S2`r5lt@C<D`WSoOFo#MD]1fM^umhV"qeMs@d77<K3lf[?]b?=ChgAmAcah]C#:+Git1!p"%@
%_2XnYF\B77Yu@9X_L<IBQbn4A6Fa;LgkKBZA"LJq2o"eboX^CE=5_)l_2UfaF._%=V`"552[VK]Fmd]c2a/V!EL=S%S*XItc'lRJ
%!SfYPD$QtX,D%`3M0>9(NT75.5pai<_$2C>EIS;MkXHQ=g'/:X<mXt#>;O2S5K!RPoPTOF??VU#QX5ArA$YMBi(.NWl5DI$%!72G
%lDt#u$/X_TDff-,)I<<gY)OA>S5`NjQYIr?7O4gq3Y$MM>\j)G/u@&_)4M='$9!+$bKH!)V84]b)ZXa)B$9B)Lgt;PM%)hjX4E+E
%U;E"7A@mi@q/c4P'V/=SWHKtn6!9UIbBM>a>6I#?(a7FZ"$3l#;,ZV[idIN4c.,rIA%=?WZ+<J4Ej,r2fu^0qGib8"Y$>%alLF^i
%IO#)&AUqe?R+k036R(3baL0Umal*=gfn*JPl3tO$AM==/D8i+h)s:REdLOLI#CTADU;@a$#S:,</e1)8CZ*:;g+u\qAei'M;"sRi
%*/5m0=`m>'8IDX)=V@aXO-_kBRuaDs%/2U*Bjia2OiH\MJ]dY[GBR=\8T<h)!?IO#.0O:$H("=o)-"mgHu(Yfe`@;t!;j>8^Kb_d
%`NR`Xin)aTnSA+Bfs9or#O]kOde8Q*=#XO87/Rt?'q6Ror4:^^j4?\U`C=s5lFTWi'?a1m,e?Q9mCe$(Fhqf>[I/1#aW$5Io>UI_
%f%UeC8\#:3-eTWp,"N+J(0C@"?rHkYYSp';;q/Cm>[aG1p=.4_Xb<'$NVM[>j2OHGmIa%[(n-5RI0F3R0I#fL?+oNA0WJmo0KZ-g
%g%q[..0@86h@?FqOT9nB8Z,XbL^c[l0lNRFnCWa,5Z$2K]/b_2lmpE/bR&M*Eds.TR1lZ"cp[]B/Z-d_e7CKG8QQK]*=:$B]PZ]N
%H?0c$'tIq@///3eHtlG=IqNNsi3s=!YX-'S&;W61d9p#1J&V@fh#B<hqleFoQX]uq[,*:7[n>tgdX%t$hC>Y:ir0bNo[gqXYGuoG
%)(-M<l09f,V:9EAZ4[X9<e36JL0I<ZkF*^tZAVG]aHS@o9^g\u7Y-a>]rZN`;%4KfGEJXd`2RoQ(1%ifm*Ypa@RliUFek=H>cC(k
%-O*ITLX;[t![O-bF?TF(9K$2r8\E,UT[)'49Ttoi*'T3)s&&s#7!6YYc8^HiKi=9qj%K!4YZc(]F(U9.Cts1H8r3U`ecj\Tk[)MM
%mZ_s40++a,on#Ub7JPd>Y(t-Ibl#Ks?;Q#k'TuA4Q&&WHbbV5Sr!Wm64cXh_$7]ViOuUnA;)+e-0fBkm(kMfMqBcQd.tb8J5:Dmd
%jCc6ffic7#Eh2I#r76q*\Zc??!"kCWEa\]QA#ZNT#hQ$c&nh>PCqO(A;U*#RKtLE,%%g;i>Z"&C1I@WKj:Y<1M+Z!(aPX2'm'el0
%'H'@U_MB#$a;-!DJ.T&i'!9$"BVQ0WUJCY$OMD:)_sihA",LQ;VrM$*jd-@XN!W^dW5$r!J*p!$-98(l.;V"<'F%d5],Li_mAR1i
%PiM]1YVR1[1,Au-4Yf^4aSZk4h2(\u`M&8J'i%V.'Ve(.6.R[)Wi_'riBS)\W0O<i+e*Z"."Da\'c2!2e1&p,k=OjHO$8RSGTO/(
%GZHW\j8o?8>Bc/CEg#VV'QBd7SF;q'BPFK7_*0?L72^,=,*.=t%eYeb,+YABX_r/@+73%9.KDYC"0%6rottu(,H9eTaqQcl+Fm1A
%R9V.<Yqa?7Zu,`1$@^Ir=qT_FU0W[Sg?eIm%'GQfL'1R.UB^lC;ZFoZ+q[o^&8d`QqG*3"+l,MKD2r;B_=\UJdJBt%Euk=1.*^2&
%o3+h/onUTQNb2m"kFmIXqLXo9FqF=I*KurhNmNM6A#Rt($*_tRU`lr+bkV(XAFZ0EALLM\U#?DLo?!3YQ>['mk8\1OI[(<!k&_Y^
%2J.t/pG4`nB0C-e4/Wta4Lsd#i:F.ffGUOtFLVU.IX&lX)/IM#LR.WM1GHC6E'3sn3CN_[#WsL/S"eDLFmLN!J*pJ>0#Xe<?(Z]!
%m1L)n>.1)]>gFI&KWjtOI!mAgcTFM"VltE"Zt3C26J<AapXA_G:%s]f&!nEo%IKW/gi3GUT$G^mS3(ZIg^caLl0LjCpJo/(%K!ki
%r%lVgo+V?m5C5;^E9f0-_TddBppI(q2[.*W@ab7=SFTBJ3fdBf<(NJ4a\/>sd%Kk^,2kJql-#n^'c\28=XZ6,KB(lM>_7U;.,>RB
%pFZ(p`PJ=]":%^=iS\,H^^Cr'G[U]kM]3L>4:d20Mnnh,&K2]DL;S.\0o*Zi"_`,jO-'`u&M+qA/?L1BF'/8OmL2D!47>YI=!kdk
%GMD_&pa*D74SY%^,<na^4C*o$V[Yc$Y@:F,Htk=4aETpo'-9s4iGf]h$fQ)^E,NPQ%l1hKO\:;F*$^fK^f"Lci<"scUJ9Y@4_*R+
%.pNO.:I&QB"^ITG(jSug)L2K&S1,;#Bc-XK,/<Y2?S9#>+nDSYhuaUEWlf^'??VH<,Dtb[#EIU%00Slpe5MP9T/q7Lbm:mc70fhX
%SUs7ALn+i/MlSTp,SX)lh]r69i$pB5]o#X9`d=Q]*!E'PhIiGEGNWBI$lHo3Sc0P8]iUHZ1&*r=npS)V"#%cJPI*Hb#KXYaZ&ob?
%=g=)()d0G.'cU;\OVJg<Z&ob?=g=)()d0G.74b:G-1_P.b1;_kVMR5@8!pTBk%eZ2.$bJo1XX-=iqZkM__pG6ofFC,kStW5FmB-B
%ATil*];/#gU*H"0jlN=?;04(UYMG5fQ]onjjlA8C6Rm*If>G:l:),jENm+S/E_)-j]U\dt?=%rCMdOc+^A'hs3qMI@3dKifjd%5O
%n>5l:j1+nXO47(\1qaIF=2.SWP>`c'IeIQicp^*'0rs15AjtBY,Ip"cXYlkhc0/=eqAZLR?+D.\Y/lkYEoi0`\KY+XaH\8rXVlNo
%25=6*4t'uY3X]*?A_Lb.]$Wm2p1,F@2Iodc.03E=&hX6"?)2gE)`d?:'<,"i'Wot+ZKk*uW9VN/\&4Y2Bs`moNMpVBMR[D<OVAF;
%<Rr\t3Z(0r5GbNo*Jj89msoSe>V^RpQ7qbc9,<G(G6d)r6FA0JZIFr27FQQ('7,@9D--:$eG6%f7W%dol!-(8N7sYW]MDM>NZRJr
%pUl#61K(,<+ea5Ui%BP5lJtRib$`3[N7YgPm@V*gm"_l>%64M7'?aqlH[JI4(Kc(HQV4K??3dqOiPM21MYI'ZZ^f#n2TZ",lB,o3
%,XO:YC:RXV]:ngs)M@ed,YbXSg8Hp?qQ+*ro7O*Y'9X<'PG8M8g(g@,5s5?&VF0Sio9JSgDJX/WgbmA-q,tdB#7%ZuU?#r.gQGmI
%(2[*472^o[Q#3[^X"R[DDX<"F2QEfAe9R;,r*[%YWL*.pfQKn:(=c\c`MJ];/fH/^XpuG!F'3JiCO8XV=%k:0Rt$:giBC2aF'#@d
%#:md2%9d8L3A%q>=d.soVH/+-fX0$rD<uCr>!P#,(/e6a"]Kh#H+lsL(EnRWr=slp1<9^B_O2e05]/2G)Z&MpgG/buFM0HabOFV+
%Xu9SrpA.UaW-#c(HX!!8MF#>;TTsi,_/Sd#7X?I-,$CtlZr=-Ea[jrOm6]WUaUVj-Y`jd)NFn8cCJbZ_ZIrdlA,A57&7HB@46Imc
%<:kJ+?m,mT:u@CDU_BLbO+KECJuoLr=$dRfP32o<kho&X>au=WX.87?=>b$5PFGr\$JZei/oPeBp%Uml9Wr>aH+<4n]!]\>bO=?H
%_Cr+-0P<l!Rl9Z;pIrtk"h$!'79$#<[.^pr(YNheR;,B:D=mCiiPe3_7ll$p%MlDt)Q(Jt@cu1+kX"L5V6MW"e\DJ5,N/jYKBdI#
%;[Il/Y1BH;Y'R1J0@<'&$Y8'o75[&qV.<l@LT&]1\JhWZNquL0=XO:KNlFE>\Ou2&_U.F^>G33YV;_BuoY=pUh]f5d?aHIummj_n
%1JY'HfVFY>e4AX#4/(YVI^eF<I],PL@I01a)qAbl^-%A[=)/II:jFauef$_S)RM[ieCW0P0_G%[9*)_P*A/fBE6(Wp4S8<G?5>r3
%C3W?XT4%,.,C(.#egX0NFRMY:e16p#5`H"M'@@So,TIB$k-P<7Jm#W;:p+j>=$KO'-U808$WK9kfP^V!T42;Yb0;V#.6DH>hbmNN
%5%7E2kjD%Z.'/;XF\MY1NS;F[.flI1Z+2G_FUZ79]Du61Wr&F+pmp19<4_QA*ms1-V4eFU[Q[ja..mX-\4l^d9,ao.1%J!lf1q]=
%alc9p%t72Z?gGB0eG5;)H*HRQ%"3O*4g's&N'gSao``if.segIY]%-]bj]%S>h*\>_ORr]*%(>.72Ia-[+*XSaReE-6C1kllOt\S
%D-roU?_?WQ/1U(RqYF0`cjaiGRh(/M.7--j2G=W&-o92U"Q!kgH\.1pb25:gC=?;Vnd#.UXg,2iG.,E9f%AXo4'Q3-C[CE,)EV/5
%B5?jMNLd2VZRq0->s.a`6?*kiMI;(ifq;"Z\Dm5qo5O,!-f!aEo3^u3g6H8o].T@nB?VNR)*JM43^JjU;F%RIGABU3o07Q3Yl^k*
%SGr)Re&`CfjRY,r(E9`B?IY7GNn9sW$m0stGHo1QmX4Ztjer"Qn)&M@ElQr(go+Mj]&2P]/fYgSb]4J`Vi;n*3c-.hkk%dLGj\Z'
%dj+%jEmKNl47kAlqg'3Bntm_PHHiUA:7tIGSEdIj67XCi@R;RlZsl?P-F@5K.jhW467XCi@R;Rl[(VjR,\Qe5XQl+q$A/d3%(\6;
%Q(-j-e;)DXLh'"qScOb>(845?RWM2.+!oZ8m8+WF/#*KdLH:5jY@jU&4*W]UPpkA'/&N=ZO_$!KjUJLOL(N)#W]/oo&S'=3NZeh;
%-49!P;aZ+tI$TOMrf3YYaPHf\WF:OI[ADO':cAc^j3t/GF%ZRu)rp[nQMWtmok=Rg^2L7CXHME+Wq*dX=Kg^2O8&IG$'H71Xk<;l
%ML7V8V`=]F?]@WI4bjp/eW-9L#t<./Ys%aQd.5#cakCF1jH)`"3H2YCEK]iR%jH;YTSL4UT3cRN>P<+W$8&As112$5a<p)iZg-7V
%A%S@\5fs0T8b9cf96n1A0jYs>3#d")emU^X>QKgODbU,cf)\?mRPpN?PLK*8l.fM@>[R/b\jI&DP'56+fKiV1ceC3h(TUJ4C+4YD
%Z^<Qb8al#&hV(.9eQ+ISqdg#BY*sOaT:n-&.:T`rFmWSt#l9O]p9sc1N6UD3Nn9fpleG.cT=uT06"gB#c.FilptCBP]c\8"Un/l0
%<hE1)^8U$3d5)jJhMmdX%p.AhWo`=co`7=E12B:$.Yblj1GGpo9)bqtd3S*G><<8^;#63d5?_ph73MI!71a,I]G[B9[J<R(21gX3
%mS.Co57s)d<9WG\'1:7jLD:+^LXI56Ut[1e=0>Gl4WDkOVpiZMCRMPjmuU,,`J4)\-2EcXpi,(Z%c+_hVk8dpN$#a2[u^6/r_=6u
%QWRAXY*W/_>k'!>PIq8?BI=W'&6Nh2Euhs6O4i:j(?sKq!EDK62$/uBY4D/3X2+**GMfram;Z"<UF6mM!K:Vl;HU@^imp8V[+Ck-
%mAMmCpHbl#*9,VqYo<;$ko-4Oa5=(hFVJVAVJ\a+[IYst<AIj"l+Z;tol-A`3Ebs9IdG=$Oha):5u=?5Pe%eV;b=<WD:*dh+CiQ[
%&O+U$Cst6I[E6LoRU4P,VSji@`p[!R@qlDLW#5eK,hpV=W8Zg;qHImn!40f-I6MA^cG@hH,^dA(rH.Is^7&UOA+B,SAjsC&l1Tbs
%Z+#Khn'a&2]d2l9,JAM>/>YFOmGt@LD#NWob=Hg=US%X3PHiQV(n/AZoK&MT:&St,V*NebMG^BVEoZhK)f)Hk)kUtQpJZ:0Noo3N
%(OJ+BIQ!-=1+Cg4D*%D$4*;&bh_8`k;r*!8@tC@-Y"[PV#W.mdh8=W'%Sn#/^T?l3I;^3ZGW<%QU9:a<KbN2s[)W'qP="G[H8(NI
%$%>RNg=tac0K+tf4'm!^YB)@*?f-o6L390()4P4??(7JsW5Ta!qE(tX)j>/Q?Oj8PBSZ5.J?skRRd4+UL`>9m282!nXaIFoO6pXd
%j0>ai%:mUU2?1G`;Nh#mV/JQodhg\bW!gPfp<@e:Y4:]3PW&1J1"T]SrPB5cdiO9U*J4fba5Q)FL4/@j<;<Q)+MF]%`p%9,[#aYe
%ZY:g?Zkpu<+prn=H(-dj'_J<TIF%hdlgLg$T"gI,gAg*)c)lq)7f<8RMj*2):(NE3l6TcLcut-tVgnO3K.l*PDaj[!e^=9jJ%tp\
%^CU%a55a?6:LB`AJ$AP8o_lCoG5f-u]_CI&l->WnY7FBXJ))2jjKGc\NfFUMPP+XI_gO]?0D3kF]^r7Lp=nj_I-Zuqs7P:G;#_L)
%^TmbkrbM#l*P_4>Cj5(&l1KM?;u?16SZZ-:WI!6Y07-=%_u-ONa]1YeGI;\W`S+o&Eq4\ZVk$n0m;iM<Hb)CphDq:%8c";$U&Ju$
%UXJsGj<i;trn#5l^u770"_gVT=3oj/HI5^lS\rL_hq?P";9.+4<'7r%];3mm8G^o_*ItoX*UEM#NT#@7s1/"%Dttq^."W?Keq+#V
%(5]o/ecp^g)1H67e*nb]V,'F$[j7e$p^O&$$k07NdFoA>O6j::"gi57l/=<AG]Y0gCBBU4edIOBR7"do58N9Q?G+KpI7,=[IsaYr
%%?Dol9HMU5s4mAihIb1Fo!c19IWP5+dD<F*5PY#'+.rK&R(ojDIe;mpamkC8jnChYIo3\n=Cj\q['#`[+7s&,I\kGY59:lrjb]nK
%qJ#EfGXi7+AkC_R=HE9eMbj64CiB=q2a;0$h-TN_45?IalLa-Z#?RPYpuCS];`tuLR<f86SXc3uIB\3!QaPHCWuS(AB'0Ad4UmJP
%pp5SpG!=UTn:R9m-J.8BrlGXg^/NYYSWCP>4$C3[?S@HMNaH/b0!=UEY;#Es>LJ5IUQ:bOr5l/1`iG<`fC'6r0'gCPjEhdXpssY7
%F5:j6laqd6r-WJ]jm1Ob4pTL16CCP^9jMRt3`NRb;=^*;2/sb]P[3jq@d5S>DOF@h?[%tO0MP=m]$\m1RmX5@d'Ffrc_jS3S3Qr;
%@/iA27fLJ%>\::T=\\U)Z<*6<IjR5o`7tg#.<62iAcqlA2o%ma#<A7VX%h`QeOH`#qKa)t<u\j,kg`/[T8bbZKoR,nM!7=N8ET=o
%3/\2Rrf[ZbX*J$roC_6+Xlamdc`;?*8+V[9-S)*B802nO-:Z?md7UklWW=`[?!Z^F<o:\nY6af9X&iMRT*TRuaF$HsCNZ7Pg_uTp
%#O=P&^Clp:mPOrS4gHgO.)aO(N,83^%]hSc(,e7meRl!CHaVQ$B<t6=0tl7/M0B.Bm?!qZa]/m=##O^:bP&rMXKJ#YTqL%L2;)2N
%Z6-#@2`9962;,%P?;:.lR;=-odm/767g0bW0\`6?0U/SG1.Y"0s5iESV,oA3_6!89L9+F%[F4e`V2]JJ5%8]c+>[ph4$g+LOF<c&
%:Ee2\[S`'A&pIStp1gq;[FoQE"^,^9C:!BTAi$:;)%ninQr0Bt2nb]8@#8N#8_I=mo4jl#0[KdlD71<N;`dml':%/a2*<='d?N5P
%jRdr!<rAH)2fFaH/)J8ls'tjH)1,`JLm6lI)\#m'L?ho`[[pdXdr2QY.@6[VY+;apdS@ifKIl_kCsVCS%<h1)\hJTHalsmA&*.^i
%Cj5@;D1/H_kZ&-WB^b\jDnU9kW-NdlVppAHgIa[XFeJ>pc?cP+*1e/kgs<"E+^N:l@Kj9f6]hEc9+a&ah)gSZ>n[U'^sE&@nmPi8
%E<5^+FgRb[m+3l[K@X)l<57`hD>X*(?[i%4?e86UI:m7+kK\4Bpu?(>?@A-#Ub#L^0rYN#"+5N9["m?*Q]q-Paj^4OhW`ui)rCVg
%2+Hg"_7OpS0DF/9gM6`EI48gIG/e0MFmO).b4o+;Yrj0as6T72gS;GhjQGm,mDAJlSq#104lP)mc^10YY!,)I='B"tI]b60](bKg
%4cUW/)4QP@JJ5H01rtUZR4%JoQP.KjMQ8)eJq%#_@q3XBG4YCdO+"3DqTBt0G^",8o@;^N:ZkIDIiKKB-XXd5l0cC&%PBQY:(-JW
%ed5oV?%oQ.g0j&DS$UE#+IRWqmC$0\Uo!uaW!\]U>3N"O/gZ<ZDU[h1LNdCGf29D1pYX#(DqP]U+`EANhqVU[Xm=_%:[X+f?_=!e
%FhPA8]lNFbF^OI"@q>U:euL0S%GZ3;%q7eJ!AU6)7NV0?+I9fb84pr'6,0m7:]X$T?3eK&%h(Pb<'?Xh&K`<Ik';@5I,?%@2jdSj
%fNP&hl23p54,'*2-n+XjM/M)S0"^S/C_on.98Cg]]2NVDJ,X4=4o`jRgKt'OJ%R]BI*;f2dY;3<G4>[%:T_9]Q:b[/-h?esZte&Q
%)>V\F:sHGrXU/naC"Is#BEC,1>=@/MK'6D?1-hdiH/$I(_2*u>fl\Jl2b?'X;Ojdq#T$PJ@YN$-aS^K1oAY^#M+DoC(lqG=<Z)^4
%+3<n/BXY_Z9[FM!^E#e8UAt8HHdf.-E[6/0Gs1?_GK9o>=\S[,Qgi.0)]K`4CuZN`O?f7FE<9-Gp#?#)TD4+^Q\8mnolTrXS28\T
%;HHL>'T*18')o>%s*ND>s1Y$&[ZCH*+91dcK*qRdIJj++@H=lt8p^4X&t'e<rf]n6Dc?HH\:E(Yojc'm,[OIDpCkEI0t*L-(G=3i
%=PU\;='`><C7@g2<8CUTcbD-;$EGt8ZA'caXVCXT=7RbCdU,k9VW!WrKsSL<MonGcV0P?P+;,"E?_tdA0B0rAMfO:VBq=cLU4m`<
%Y^\)1qnlPE>9!kc+L/f:=Af)M=:%0g!?qtPW0jhr=;R12l'tpnT!KK`JMNaJ(]@]m(RI/Nfd:K%&]h*F*<(\6fhnda'6kib9Z-e;
%+='M(VJ@cJiGpkF.<q=Klj`ItFq$BU)A77[I4RmIqitjjNs]lbG".spIX$UaJte&*Tmrqe/r;``6Wega=oAN$A+cIiKDd/0K)]UH
%b[3UBdelfIIgmt@!rp//iEnnXs&MlLQW-[ti[XT0C5G0b,21i/``-(OmGbut9?g5tkbo6D\ccg#V*d6T>:NQ;5'@'#Y7j[$I&6U!
%asd)TB+.>Elpq*NT;D3ZO"efqlBsS4KdrTr?`?.IeF.kVTV<F<&N!31YSWJH\A"pj^OPis\lKTfe#B5&l$aOR0KQ4?_8sjQ>&H-q
%F9<OJ?^-hR\f_=.jC.!2^X\D$l(HWA*?Z]OZ!>]g7N(M!]N4o,PlP7bPr>\#@AP5"gb_i("l&J4a.>&%']3]BQ"V09TCp0,HG2;Z
%3KA<[qY05S$0rVt-pc<mfU7C,42KmDed&(*4:RRsF*!9'GS3MoJ83A*+-86;rBQjDX[cAI<fXQq;$RBjJIC`'\rk?9(A#6c+lqki
%l)?=I.t,g0*C$oXmn'pCIH;99.d#:9(Vu\,#hd>68F')7YE4mlQMLZfF3^oCVag/"bJ#Y`63!e,Z:\cP)BZ<EH7`#IF0?>E3As.;
%_7bPU?E354?s]5aoE,b!)RiIPr$Xu>P<nH_)0G'\P7;8@e&3F;Mp<RZVANgCkY*IkAJ+$qQC6FUDa]t:R,[AE"=%:=hS+ru2VE`P
%To4%N$Cs(F(nh3mluJiI)&=)D03e/3KMu'O^+9p;HSi!q+N=aE<QL!-e<sb+PC>[nJ;]E,^:]c#d4;RJrkR#pARM89o^$+had#Tb
%&7(fMag9IK!aBPn%k]i=-pjkPWCP8+,IJ?Po]lqL@m:LLoi(64"7D*sf;l!rD.u1eZk"A<b@8/IPZ(Abp%`W^W:XY\N_u14:6sqD
%KFl8IVR/eFe'kT^S:m'J5%NFNSHNl+d8-FL43nC:;ODnX`_*"5lqp:D`Uot5-1\.FS8^h#BiO&BgX(4,]3HDZbY'A.bPRG_3YU/[
%jCq-5%VAl+g%HhUX-B#B[%e>)Rnq7+T:2+Ho6H1;\;C%%D2hdgat0Et(*%=S61Q7ob.LG.&ptn=64iK^@*dJaG9Tk==^g.-\-$"l
%86d(W=7S_@iNU`W@><m`)P(R[&pMiNFg7)Cjm:71N@@VibLnKgJ>+hgLI,2<op*Ic3/b8M:.BSAnk<N4<?sgqB?!k_=D(Hq>M"3c
%%`(fYglY,ln<(n)(76]LaP*X"N70A'MTddlWdL#_R5L-,CN%+Ib9?F_BJt.\bMmD9]G\#f_.YJZ$S!u'bF>MFg<hfml$+mhaXP9M
%I(/`<H$]]AB?qs$Jk)S!T2A%DT4'V#=rhkhbqI(,@oF"ed4'3(N_eGe6>8X$jgijiN-Bl8+"pV=S`%toHkr,XENS?(?hIZ>`"I$k
%@GcLdYu06E_MhN`jGo5,9^G6t0kKXr).D5JBo3fJe??oOq,H+31^UY]%TgqI?F,2N`uG1_6)`W?L"TPNlFu3i+C#c,Vl8[bP%]\D
%LUJk]O;O";;p64sZjiLDTd'fZ,1uOZGAV?\"lEEg<mQ<VSdc8LLT-L4iu%5W"t;q$r_iQ/SM$V-qhqY]$JSN,=AF!W1D4D(=u%]a
%;:'p&f-MTu%SO/U:@'(DQuE"&/0VGH,Th'mPtn^i+Xf)jLhSXPGMg9P0WUp.!#6*f-'%3i`CCp]O#>sbjqb-Y8$"q;6(5%!cX.Gj
%G3YH7XI)rLV_5YsSsKD9SVTW$$2($eL%K`U]L#CA-BP&T4HT>@bg#IBgSbjPDh8U2[4T@E>L_au?iIfbl@8aP:1?B:A'[#l4OP?R
%$fb;%A[V7p:Jn8>Q&RE&1V[n9\<*3!n!s@L[?T;lMVqO7>k#[o,)<YTnX^4Qou-+5&C/VRErL<'nrN^[_Qf4_NtifE23@T6+YcJC
%B;/%iA.`Er1dbl(`W,,\0*Em0c<Sn4A]FYkOF52;R`TZkU5Xh==K<]m5P[h7ehJ7u7cPumL^E<tU?dIG=VAH]M6,0H\L*V]irAbo
%2>AgaI*%.8'$3OPZ@oQ/a_B'I;cs+\q<*r'q+';NjP,;e6MbV#%9B(R,)m1UE$B9WM`\9X=\/:nmCDTD[;=@7b?gVKVaVE/A)u,3
%)&&NRAPsSEr3>P*+*l`r$5+nO\]Qd"'4h"I]%r_WP@u%2W/tDf1;627s3HNLdk!E9@\`shl8maM]^;+7.@'c9KZ>?&jV'`O7j1-/
%X=JnRAZ<Y3Qpg[#LQ#q]U+f+&[Rm$eHa<Bq$al@u4,o5ts&LCK,N?s<\!^l;Pk5F&_PG;=+'W?*W[L(unWe!;^FP2:(4l4ENb4*n
%n?o!<5t.ZMUrm</EOemjA^r?.86'(!,LCZn=1*+_]h!%iUP7iV47>a)Z_cp7:0:U#9*8VQFSLpsH$,58N;QmtBj><n*rY-a\`Ret
%rc4cI[=?sgBAB=-J5=p2,IT3_c1],haPr9(J*a?*GL4n?=!/[$Mt;),/4i09>.?&c1;7GmHdUu"@>PP%G`Ijg(HS\IV=i"EM'<`X
%ddI@p7dO>^g&0XpS&>c6HT/gOP%aD\kh@_l#pK^Q?+.o[OX/*e3EjQb"Y=)YTGr8qc=pD-K.E:)EhX7^PdirbWBIk7c;(9Y1qUMO
%]\D.%RVa+n5oj.BRfi.>JU^^l*WR<'0fdq5dm[S"?>^c(+4M'pHX"P8X]B:Qs55lVJC#,.,7K(,e8657]"bXfDd36(Wm,CfO.'kO
%:Aa79e2lo0]oi'H52>T`O'8qK4B1CEpY7e5$-\1YipkF4nPS[JoC/^/D?%^qo!LD.qXV/cQlfKh`+mIQKNb^/['nlYDUd8348[j&
%U`kb&W@anQF*:bblaA](gU,DrKi9D34Tc]dHi*+jqm>"XmXB`N$`C5ZD7)!UL2(4$BmA-EmN!?*]</d>5H%G+UNY;hZditY?FC?Q
%0A;C@ZD&F(4eY#'C@/F?O_g%mn2NNje9%V=g6g_]3niJ>h^joFqto.HK<p&Te)&eB3q78dj)T;<@/jmE89qb\OZ,7B/FH8U]?U!B
%^"UPJX7NE<7'!#!>2B#-6iK+Gpl)Whqs2K:<nPm4g>Zt5kT<1TS!YkhBkMptfm2%-3:7cPa;#IW?G;XD[kl:BhjT>Djedkjal"uf
%L>"rbJG/$-]mJOK<]9L_7U/\F)[GcMac6i;V^Gobc,6(T,:Orkm%Cn/l6nJNmDB(UBagGI\&?nJHu80DBYU4Rrk#nkg?dL7j,;f]
%>2@)K(-Aof,mn!j!h&p5OlFcFJUrqOV4ci"a%c'/g-Y,7<p):oA[Td7U:WOuM;Mt`3cDBPc+WdNT2T+qL/*,o^"98)&b!ACdmJ:C
%3:,,J<a%HHAuO,,RsDm`Bc=Q+.ZmLg;tEeF4.Vn!h@kc[]BRoT-F2KB*tU:QTC5"$Z#.lYLF(moT=EVGn\G6so#'2(G+1Jiibtse
%!NrM^[g,"JZTI0*\K'[sc[OaHiE>57A5lfno[DX,Iids#O)Y)q%Z(i>^1\8%q8:C0=2Z$&\1jnWJ*qLRW5/U2UYB*:4t=!NA2*31
%'h%5enXmLXhh=HfeXqp%3,%tn.Q<dCDX4736*e;F',&&r68t;cIQ>&cZL[RMXUM\Qh<o*$Med9BGjfVE[q>C(hAHFp<adATS&=*4
%p0YaVM!?55U0I(!C\d]i4O':k)_^9%%JJE-/Gb4H+hp(Q)kYRhM-H(`r\Y)>gYY(#W@&ILcg+1Kp919r9?l_QdeqdS]aRLd6Rr+5
%r+c3*O<ik%E3("^Eq6\hB>0>X?/jL1*]>1Q5X#,.h"_a_lG#h*s%V\<E:`g2ID&RGs#*"6YgZqY5K.TnfJ3FA@BnSDC@D+ZBW4fo
%c68k0;nFdErOomq4>[##,taXA.bQh_9N/Omdf0"X/Sd[bQWi"Ed/X+@03Zh9f(73pYb(4t/1(<GqRbNHj`A!9T*B4=hEUG2\#'b^
%no)Pqru8PJg,pR>UsMk`\C;g8c?/dkVRinlb]1*r[_%=.0#J`*OQNOHLl6aA_),,R)!Gj/%sJNo\rHE$F0!jT<bNjB^Zj/F_$TD0
%[em>EemOEb>,&+2bJ#Pe>)2LI]rHLgn)3LKI=%SBN*Y*(pRZP7Mak3anaV(>@&gl<rQTM`Fc$I)9b3:GNMq^S*,JjiTcL]]:E6^)
%4`7VbS&_(pZHJ.E@^<-(KelHj.L5pB[Kdb`7-0t3j,qYpP]4^L<f?4mN(thR<6?\VQ!'uSSZJs#f'[ua=\:2FjIrj^'^8OJif>Hc
%\oEO!hoW"hG<.<>!PQf+V\!rhfHA%]RC#M]F_4!CEabg3U!-FE2tr=N)kDWLk'h#RmC+qX>IutV2-Amq3#fnnXkEYq2U:J-ftJ_`
%YBHDkSO7eT6`$,_?Tlj9:?k%S)McEKrAuRXqZl:8J/YW[n,:i&*^rGChUM28$8p]*SpUQ;fbmMrVja4)&B9(*h=nR?ShnpRkC`c'
%!_Y[h-9QeQohMt]^qp#tiOL>JB<tBQf)E!8+?n0/gY>$f&9>t8>:OHf59oN41gp4L1_1MZQ_/&I'4%@*KkusBP8$;iCg=V.@^8Kp
%/XVa'lam[0=;RrV0"a#e-X5G2B/01hp<ddLi&!/4[eQrlM;@1aW@IaOiac*:CsH/C_>[m?&gUVmn#UZ#lT=8eVES^o#M].35;1_F
%IM,q%G-A]NHE_`[3W=3<2XkaULN,7FNc_k]mRHrTOhZ14bKe^`)u5EErm>n//b\4GQ)<lZJ"29k*kmuN7h-,62a96R#RWX:HeoK5
%NDc#fqXJ35KZgp>GFib=NGp>=Hb+I!O`+Ji:6htMG32O@XuAGEF8(gbc]5dMg,t_niKbdXC@@s]EDfJ&6Hs(S[XHGgF?/\0XRDcO
%<sOkf/tf17IE-^#(S)o85Sos7UNWPrYKpq)[_cY%>hm?h\\s"Cejlo*H%C.mk=GaffB[d=<@Q]"i6N$XHZ[`NW1la/8b<ETdbQBd
%:Rsdu'sE;)1j)@5*pV1-S?RA.Xhjcr]YrcEmd9CK-j(G)@HhDGQbCrcViEp$S:F3)>tU)]^FP%NI``>aN*SX2XT*8`AbPJol@2&B
%I;_&'>2@bTP&cec.uX`p#*RSYdc-M((-2KrD/*W?@jI&Z)nG<GL>0&!#Jrl/TclS;``1F;na[CC7@2O]dqDS=Uon7]"cRRIIE'W!
%gg2'mYC718hQ[=.%Zf5!_[(Zt_F=6Y_cUIppBl+5e:+"3)qHLa=',-L*;TN<[F%1pXgl2IdEhd8/M3U\p/W=\Gc0)hk%b@oo9nkb
%eXCh(dB2u(RpE3.-H;F(>L#o_bB_RsQI@o`Cjqd,bc.!nc-nQ0X6:%<ngddf/B2V&e(3@Ld4]7Gk;63Ya*F6-\p$KGr?Z&t)HVj=
%QYO(OQg3SdjRo%PRFS"@nN"3*W_RecqkX[!XhDdS<KN/8FaVV;C3d!ciS8^6bK\pJ01h=?e$r>u"0etA<$*V/o-%,r68)"O2BM[]
%/%o!*FJ!U)?d^oS-0n#bcA?CCRXML<Edr"WICm,+gR?suI4meM^1ctPSBm`ZmoXtWfFh]7*oII<GI/&1>g.M.^XFfQOhMX['q>L*
%gDoe7ZNk9Vn5H[^Dh^4^GF(_uG<k?ZO."F<Pl)d[J[pH9q7UpF+8W8JAX*pXEmHAuI&tZ5(tMrpFri!PWO;]^/jjBaPPZ%#8o)\H
%L#sJZWn)Fo-<8Dl+\sQ5+HHT;f:;0K0mgC,s4Q]aCSZ2aV0m`EaLf.=/iCal&_oJ4F'QVdE2(Wbn0S$2s'jA*?[q<!*,gSSr;4Vb
%q00*<a:gUo`2eCFn*V`sD^`q/Q?F1d\l0tJ?g@,fLGVd\T$,RE`P0Pt_pOs2+F^^OV_>D1TD@a+F)Atn^+:@g0L@_d3ML?HoPM'_
%E6pZ7Z%H4p[*0!Dk6]Q3]F/rY9<jCG!joh%DNN-E*VWMbKs#K4.e:@=4WL`#/sQOi,#1`:>,G?U>o"`?]_2dT`)q7pBp<6bqkR7.
%AVotHq,kK='n=t;nj_]*>YOE;8M>d<+puHR9%$=a>)<V6@<em$KKEcoGu:36'#d(?4MNtc8s($WAdlN!WQJi6Y=AcZ1-$*`13DB_
%,.d$?f#n1V\;k3]Z)oSS/3g+5-L0FFHp_s$P!>pFh-n7-;HY;u414Y4.oK*1?nj^G,0m5i6+SZb=)H(nj7T@XWL''<<OH-B[ck3Q
%KRBhXY-Q2$W5\\kCb&6oDnEZ!]UiA?`rFb_*_pTdQ(G"&b+!c"eQ4],+B-nloMs1NZ-cfs8tNgE;eY4Xl]$2?D!Q&RgHN.23MM98
%]fjuMe8qH[Q\P;,g:ls_G@/3,J*Ase?hA_E89o<@c'OJik;=PcXu_F2(i3a&mCf&`Zoo9OF2enH%O!lSKI8$2YI)m;[p-US6@M'@
%j]>sqENXVmI(Y2lF+<ZB%7Kk^Dq1<bXJZk'3M!4Ui03;#lg=E9mb2!Rh'pPm(Yk%XJs-eKB;7E2m;4/Hnrh-p?QJi&dG`niMiCkX
%X#BVY'na6<895@TclfG_K]-'PKdRDq9%@0m-.V$R1ZK4@R+ch;)0)mUG4`Z9&XG*2Hhg_Zpg'-L,(#dZ")giiZ1CJ2'Ar!Q\>8X>
%f17DN.q5]]qjHS4N50<IP4cNB#^mAOP*s22E_1US^P*:ZlPps'f(Y4UhH\IB2SZ_"6a1ltA[Sm=afMkN0"(`4l7B?SS#u@IrYl6`
%VK0T)r+pgYKeC8"KrfA1ou1*g%.6m"o+atOccj^^1J=e&i:PGbom2&S3%R4b?EJ^)pe]5l?$mFU4_YCK+&">+^)UBSpKlD9h3G'*
%XIm1O4Lt7^.(#VZr:6amr-5mQAGGE+_4Q5V=g*m8T<6_cD@b7_,L6Un>Ak;>(B5rcO+sXWa5,A=K)W:1`BW6T\Z]3XqIA_HrF`o1
%SUT@?)J:n>N<\P8ql`4Sl&XT.q4D`cfB8ddTD/,Qe&pQpKRYVo`c")D:ZA#4r6Hhl=rks3,6R0-rfgddYt9G)5/9D?dP+I82l?#i
%5K;&bi6B`ESQC^J](69$ccrg-hql=:H)bJbnRgdBrg48pl][`;pF#t9%f`&dqu6*J#l\McItF)SgM:*oB3\0(\QQ7C2L%!`q=VRr
%p6.YlSm-Q2%6V0cHT]hT$]i<Wo\GA#WOG)&LRu^aO%I4_aOdu1>Eb[l2fCo"RXK1W^+n1UT8L5C*>kCeXDc;8H1b(\hYK@&I=Ep,
%r;#OF_6*-8CS/)Fm+[AXTB'7*@f#Ndm_eRB:Zult%rX;5nD.^1_QfY-&Qnl%<gU$H2um3EY;-Z]'DsjBp%F;^"Q*qVN<^f87>n5=
%bP[iM_N'IbqXsD(YJ.YaLo8]D5J<J2Zgh^RHLC3ojr'.8[XNZET7+6@?uC5h_q<H&0D>;8cK*!9a$2esV^iH]G.S$+6dHJ]C^fe1
%SD)fV3du,Lao%m@0@o%,Zl_E"*1qSg+<LQ1[-krs(7r1ElIPM%T7>_RH2aO%rpZlP&si6_:JNM!H+Z)bhV(4m&\%Z!@=ss),<,@2
%o?$Xba]C]Mm_7<nf5C>hG^!U\0CR.-5$OO]bO-?G^%aRs8c/<nI!R!Lr]E9W0n5\(S*iE,W9K<[>''-"iMN(/Y0W$rSa[@!A`36&
%)LGnBCAGBR4[)"V2kNj%m_nn\RG2LUI\JPN]/fCMbtc$$q=*IbVB,W!M>>Koi2E$A&)LULXUf51qbaQCY%T$9mS(=nkkPg&3fl79
%FR8<YIIu'FTCoJ20ZM$PGF+bodl[+8ru-8?ZL>+amE.h0r:/b0QH)c7+S,AJI:2j9A:<smm&Tt73PJN9Ecd1o+"S>#K%lLBe,%.\
%cKG&fh"#oBm)?Y-IJicRFT'M^Dt!!*?flge)f$+^ot+Gq#PDnWl#g8O\lN)G*o3isj*.qLL@7@1gH1&Fl;"F(li-EI<=_mtZhiap
%qR?=7olY(LrP@u\X$;",I'N\7rI_6Kj#o,'T:R$lXj;A9>cl<]GAl$(/H's$Il;E<V*;Y=0N`fZEBI6.BF_/q?Tf;LXY1.<q>0Eb
%WHN]8rhZd4b<ES>^H_]P;#dbLB<M5Jot`P@q=<L8X+,KPq,77lf%d7.]mm@nhtV/0X1l.7E1t"Zh`Rq-$tmoO]9==df(Tt":[:6s
%=+8_]m`9#Cp%db?^u3'$bCSX:_;Ts-m18Xi`b-?(!u$GWhZpHRc$KOb]\K>l#0`.Mk6(_6m?)sHPC$X@*o:ek+*cT>piBhTqp"]I
%PA`,H_#2g[cG7;`B8ZkM)_^m"S'L?5JTjWQh[Y%XW1u"ESUl@Bjne8Xg+EiJH#I"![,4^c]7U>q#7d't4GGl-rQYl_/9c"A%dQX>
%K;7hAQ,/;gqeT*-O+,FaX78KjgH6Igs8Cg:i8Za\4q5fOHG2B6CcQht\?N:1?uYARCH_Ida+K5bO+X4:#JZ"GJ\gJHZTHgn>2C:t
%+^b/?@0ZJ_b\Re2%Sprt)H_BoH0b0pRB9]Rhk"`Cb3lt<EQckhmG81W<e&tPpu7rqCM$W&^@b/o:#(%T^1(un\T@Q(ek0HCl)cU_
%h_3f#:(D`e[JBC4p8snSLW?k6Nh/.`lM$;\cnIi)+'pN-N?@'W1*g0`pP/%^eG.Dh=2PQ(VR+P/Tr6YK[te;(GVD1cll(q?4q8Q\
%)#Dh:q)PhPUMYd8XF=Lp3nR]p*Nj<;p$h@>NRu(-iSB,pm0;tf:G.LM_iNPN,;dX6;u?R5nB2>(Hc'cWmlVHdo_Rh+E&2:qiN8FA
%4M3VbdMP0>(gX[8I(1qOH_PZW_eoAOCZG-%fD!#7SpmrJDpL'hDqn[qo'k&oQ1i;8m;L&"05kd_O5m]n(Zne;+721>"E&J]iIgtt
%@l&KLZ,'1q4S[lr7cp;tq_7T(GiZs#^#e4804116,9+r>(.L@6R2n;VIPEO&Hb-UKH?WtKC"+^c4</eAmBA>Ao]PT"kYbo'A+[\1
%R?c1gqt1c#m>#U7bimB52e,4]5KCe__k.1Sm+9p_@um5GSZuhm<bq'pn:#HFj*p=KfNP3KASe:Cp%-h`rp&\:dF#)"j3mD"No,1A
%YVn]B4kgs+F_A-=^@Lh^GJ#qT3&LWpV/M;7%D6[;bajmH_<F&Pao&2$pF#Z!hjHQRd_<&tIQ2T8j4>T"BDoH2]<f,XZSF8>pNC1Y
%@d)eGKU\L!R[AEoF(O?"B6/R^4_a'mhnQ8*SChPgfq(1[qNNkWVa%q4f\s55j72gDL2";F5I/^^^Ms3RU\Wp*ZUX-R?K^alF*7NN
%`1&]$GQ#OS\N=m1m+^@8aWks&e%=f#mLhOK]0DXrX^r_%;ti*@DK$tMA=?<"k=80tg&%o)Q#,iq1>*]X/;E:W(2+O.?B*eV&!f_p
%`I'Ig.GjGR.FuG]^=[e@oNi%+CemXui:a[.\3JT-04qqHPTRm`:ZY&]fu]ioK=BCpm.-aRHM"h<1#Llf,rbd-I1<Y,Wuh^R?4X+g
%Ai,I\HSdO]+5D(XqYA2%!W?Hneraiu]QL.`eZD1p^,'qC_MT9d:M49obe(KFULnp`.l0EYN&`sX2Z:^Cnbnl(14=B"^4!?#C=bKk
%*W%X?*-Ph!Zuof!isBV5Vr(g.E:4mk*OjGP+*32V\85J(Y5%n?SfRSB1Xk'-H?enDDngPp,7H1gQ9hrc/;<?IpBT[Mh"L^9]lf6.
%^;#/1Eif60p#P1tJNC'>7o(Ks[^H\ngM\1XdP1E5^$+h?dkadlgmakJI<b5Jm+6r<)_96Qh`GRb/,-B46$*(rb`DJrV=!sOqb@*%
%o`!1]:Z!6f4Sh&/i8N>.k^us]mI^^bmr,maE:DY]LNf?(kWXAJ]CtpVWu#:;%p)!/":71QBHIXIR[BJqH1^T+pZnTnK8$-lbpR^I
%+*A*_iUPaCVfs4Y3Hb5ho#OZ+n]("B_,UBff:=A@r7mm4g\A99[Bd3G3VDEUF*mcWrLG%ZiUua/oS\@'48j$ml/;2"GC?!9R;';P
%;_q?miSi#OdF%QRc*aJ<B5`2XhO&GDY7>3;0/a`T?WX\6Ae2Vj>b8Phr3/=CmDh]ZhL2A!c*bT85<cWko&K5]]t<%XafF"<]-hBP
%7u'n+PG8Y[RL0#]l29`q%.j,Wd/(q`5K?:+ca*%Lk1T*!GN[Y7mCA"uG/lXJo69'*GW7oF3r3@ch<4I!q&eR0p\F$XI.dDGCN04I
%o%WQ8caVf@*kiIor-\;!_5D5??]_]7Lj?Fi(.N]Gj2-FKM.C`:bI=Ch(:N+Mrpb#.eDJ#gfUe[[q=\)u^AK^6YPr:lD/I%VZ?)XF
%XdHq+YBKAaR9aXAHua.Fp0/j[57\ak=o::hF*gJr2[>]3++6.U>!;_*oXb$EoD#_CZ9Ri)0oQOg0X!FUmHC%%]1^hH8*YkVoA8AQ
%oOdjJ]B@@]>JooqTAG"&[esu^o\aS7i61n"s7Xk=[nDo0Mf6(b2V6fFXhPs*2uWQkjL\42O'fZf^:h#IhL'YmhS7ipq""CGnD'(i
%dHP4:_lQOKD8'6MjG*q?\sj5n51jLTIsb?<+1_,SCZjgUa78W-grJ*On('[Or@IoFHF(<\Bl\RZdAOHt-MKalcAaH((7U(hT3nP!
%DkAu&XZcS;qI%#9AS.n>l-#F$K83h"?Q6m>bh%3F-J,uGHbI)]FoQ=!IFCnPphd;8C%GQ`NP/P5]R)TH3^4hDlM?;'naE6!rqQB7
%T%Nl<mIS_Oo@EinQfb'`moPsM*\T*(O6;j9YMFQ3[']OUj8ID0GAQZk\pnkpSq^BT4qsX@pKu-'2sd*;*uhE8ZgPj$qp2#hrB)m<
%V$EWi>Fh1/D`6.PTBhu).j'd1G;^PD/LAsFf&H8ilIO8>IXPG6hRg81FEdKXG%[`-D<ijMpY)h.9n%!K]ioqoqSOqfci7,H1;<YG
%?u,bX:)ND8m(As]E]]%@%[rscF0C#Tj0<:b%XcoW\GQ(#o'Yp)q;hA.m?)@7Dsk(/ZF>9AHa&"?23.C&5>s*0gM7>g+388<n6fsU
%p%uT)Gl9W3o@&2=BR[,.2[?p:eS'(I2nm#pY)^&jLSI5+iVu%lQ0:E#m4;mhl*1S[hCL$qhjj7(l0n)(S`ps^[XU?4T"`K`A'nlq
%G.FU/#R4/VgsOHY)1254+jP9&6r61Y\[Q^Qh5'\QmW=mF4CZV,d-e@3ZJ*/8\ed1dgh@jlS5:&Jc^nr:pf/Yg_;OgQBbmj<]q0,f
%pX`g$Y$,=][gW(^rdKQb^2O>%]kT=(U,-knBr@Ur\1Fau'32g&s,G$&4`"uoRo@g`Z<_NiI=&`@[,6qmMmggpc!GI)s1Su38)%[#
%1>?[F??U@m%l%*W,b7K93/!NU5gqqIkr7:("Q^Ff:MOS[C.RI0[:F%Wd"O>fKOe^!IOa?D_3u4C/aW!FRHbjdMktn^5>,YOe;(*s
%@3gVEQ+hWI=OJo%<TJVjC1n]<a4-srnFpD,,"Yk76,bS>1#dKq:#hiRZ.F^%Hhgb5oB)Ia]+@dJ)fE)3-Y]K=k\tZJPEX=mp1H%1
%32>;'$hi9b\Im8]g#5QBV=_Y(5+[/r372IJs)[03i^B"+]f'?9?6;,B0M]S<SK)gf]@Z>^Bl:;=%jra2r&oOYml*9AeSI`'^3bJD
%<r)j:lH)V?V,>1-7u?-B0s:9$F]W\\n#E.^PPjBM>9n"\]j:EP?ZfE/8pFCg>(aKMguOa_-HiFpm1rM[I(P5aQC?XlDW-?#e&dHG
%<'GWZgtV&"\s8VDP9&g16co1*s/EqOG!<N"Ar_'Hl[5Va.Q08Qf9igJXJJr3i2rmN<gd`6hO3)NYg+BM\,_/N:p(s@n-#$Xp"4#(
%8GANB_b<.pG#A/(+9,i17*RPgS+'aWA59)f5lDh1re*"^.WMV',q!T>2<reg5``"Ks5SSKocp:Gi0Mk#>TNrh+q=K*+hU990jbS<
%k_>sPk[US2W8E/eL!lo25u9."6Ru.Mg=_2e=GmKk6.;b=-UV^G#i`Npp_;uX)k#irfKeIg;kkcJRK>'U6<W!GaD<K:dLBbC>+F'A
%Ti$RJT,[*06AumMh)Z5XOcnjBXOiD%M[??gF:'O/TV;)CTc_]EkM6k9oFP%V-3r7GNtN^C<R#jKA,2jn\;8>oU6IOl,bZ[q&p#oo
%cn?[=&1(FS:tibm6'u=F6&Q>.W[or>W<BO*9-sg.'G?)+TGbf'j],#hJY_^s@+nga&!Jl^C8I5h6#MP\d$_6JZOXc#@GBM[TN@d_
%8WU\Cg1WpLS^p15P/#$3:.nU9?D>pjd'&G'H.)BtVDZUI6QnW3LaZ8t\q@8@ndNH-(dbb9.jH@p"qo0j+:fYRTNfr3hL"NEKSG]1
%A+nL&M$WWj&?Q'r%lFoS1R[3Q"R6/9FQt[*Q082P]`QlIW&VSh#DdOk'SOn!qVsdQ"]mUf=]&5)X=RBtf1utEUG12qB07[(M7SOY
%G9^3n(W!95:eOO0P*$kOJi"kg+K:T$0\VS4g5J>BRN,#f`74j_SJM%aoO!2ag,WN!U9orQ'6[pKe!sCQ\L&0@"Ri'.j:^Y8c\8g[
%7:ifM$>8S8#T^C7:_QZqK<V]o_:EnR?pSjV2'n>66`L90W4#&=6i.mM?oWfBer_e9RX/I4Jf4DU$!M4Yo.`MGr3<#>((H,=@`s:b
%<,n3PLIa+nDX'9"C'Z_GmMj$"*3;"p"#nb](J48^JU)A%<$i7eottD<mr/suAalY%Kg(/9IY;G&7PM)Ka^DtHNE;lU%Ae:V_La^M
%'%d;HW(>/YnRq!.`6W/$F0Ke?I3JZ!-_u;UM?a+s;"k&Gdg27#VqGf*;!KR,[7ZknAdbgY:*aWf%s0[G:bouP(po[9VUIrrd8j[8
%fEA)9qiaa6;gF]VcnYVhafQO01)3$?e^"u1PQ9i>\Q:aeJ-?Y.9H,:;Nh6u2:cTfh9+VRX&^1r9V<H'2=D%?&_,9sr5b@5T9lU7E
%Yq_m@]Hkr.n"7GHWhj5S\fl614A&^XP?Jl0:4R'%/!.\"%;PjDj)Yps@"q#rLJAc8X\j25,6cLq"a3qAV:4(:7q_q1B8gPT>u$Yc
%dtiMW\oeZa#_S:J#3?h!Jf,5<r0W4)EKGiPOHGZk3Y2%HEePIJB]:@od7k->!URJFG?!S3/cZ;*BNG?N&fW_W?gJK#(GM1NWFrYL
%GZ"k^jFq>[U,ZUEM)U!B=%X)p,V^HpWs;Yf!6`O2$*<04!1"ecE(a\7!\'[JR5I$B:r$E.f>J#ecG>t;$%PucU];!:<4+oCYg*qL
%iWL`YEb"/6_PD?"R.c(a)Os/G+#&8WY7ZMXD?Q0%+Xn%_:14jUPX+c6]Vtmd+N?cm=3/!qW"KE(bZJo%kWXpZ$o,r8/;f?B>PP32
%H]6P]+eN^?e$(fi+`RS;6#E%)!:8,?a"Gd3@T-WqSI\,3&2f/70H`CInT0ldXA]Gl]TLu+d+Kn9$h4phqaQI5\Y)o$r*2[*9sb&L
%/APMVp!=L_?>$tZj3M^+PjWC'kj4"n'TF==#0_Y=V/m>>8PAUZaZV98LhR"(7TUI+?%DR)SKLgn.ddd<.@F(RdkiQOL'2*d?s)Q5
%^-P/@[=0A7M<WjX,Ykh[.P;8n6Z$A@p0m(ZdO.Wd\H#VE5:%/3A&_?dT+]#4=&CBJ#bWHBJSiG]jq=VGLdn,64t2(M_!mJt$P=(6
%L!5p@oZ3[4gf,uFab<P_qq\J-fbHiPAB?h#hGpCK.26M%o6"2lTbs[>7B3@)9%jcs+BJ3WU!sU1PHbs&Pse4BOJn8q,DlhHZWrZp
%b+`t_4&hWt<FJjO#Ms"_6WlsTrV#86*G%W)-R>+QUAmta:T^fBn%RKD8bS;dl)l;^9#q4\ari7@nc\6.'G9>f+:8uT)ZuJP79J8H
%'GY8RE5iTDWJS3VeoX?B=AoL1Yq^6,.naTC1e7\2aHuGRZ=Fs7ji[):kYd<3gk1;/OuF`3-Qi^,Z7<=L)Ba'6JDLV^ca+WhHD5f:
%?d/a@@Nu;g<QUBkf%;b@Md1.@4ald9_:]5"OuSbK\^\fS.g)n'Uh17n7Hsn'On",b/CBd7(lqT=2DYne<-op-!n3IVaRgs!Bd[`E
%WC#8u"ra70$(nF$\<T@bNkkLAMPsrm&3>R[0;kWI.$QNE7P&;jp*#pHq':'$Ru&1pG;m>oVd+gd*enLMC7G\=-pRt>1_AmB*Ycc:
%Y&b*XjoLb*,eTPt=CbS^OY9)@49B8^-<#U<8DRb.!h@P/=,;i(":GO=fFeh9cA^g!"pU:Q2inSYA:h<bL8$02@P>Wql]I8HAjhs.
%?7\])d$`m"bJe?*Xj+/>Uo,q=&lRhdYq43d(U])JpCeX<@It*_)^al;9iteJ5lGOub>eo=82Rb=h[I(K6`oh&V+o4MIoTIW=_cB9
%2`6f7!@+t5YS`a1=-^]L\@Zf7mi\:EDR:5akf9\7n<edeY:-4-Jm`C3M4uIU1-B5Qb*Rd";Cb>Be]]=IC3%r\86830[a66arnIUl
%\bKu0^a5XBc+QGiJbVOHJg2#G)=E(6f(R07$OJG;.,`83!_ug!d16A&!dZKbQua2c5pQsWnkPAH)'6)8=4)NmqZ)U8B6KRdklas4
%?ZWAr&;"RL$WCN!e59D?"t+C[L59:NB?3>,ib7$RQFXL1JeKHm)er4>Q@KMQI,&u`46oO$Of[c,<4NcC8A2VA:0^dF\:dS4JTQ3Y
%Yo-M,0Ts#\2[MtE2p[NC;S!jN/BjL<OXqPa/rM5n!=T[67FJ3k:2mB")[[`/=1X*m&dfeQFMeCV,"_C7:e/"t;N_E-'=&i?K=NdU
%Z@MdHb9=]TY[Xs:5-gJ'S&*Oo>T74t'9G-%##us,RLtEcasr?3!8l@q4k3TEZ3*[B,m1P'H4]><,IjCp-tJTn1?J_(\TAg6FS_2*
%#+_o#W$'C)*gFk:CFn+iZP%"\$fa68:2Ocp8`>Q4o]68@oQWrs6FRq9g*Chc=`UqpQ5_,%7<4*%\dWrjTulKj\SY2&3_EL0]lULS
%bda,R('b7;Vqk[hUB;CH9H+R4D,?+@8M$%$Aq"(eU!8Za93f-=/_upX)MQ<t93<o42PC6m"(O@I;jAsm/dpJkGQQtp'W7@Le^YAi
%oj.D_gNUR%]r7uiJSb#$Bs,p!*upku;:S'H<g;idH^^ONoHia^d;X94+8S.mQ#08Yo9$se;C$8A^-/XkVCq2`,+%l$YJ:$?0""p,
%8'UJLV-9TABVh8u]I+N?qS+@ak1)),n]ThVbj)4>lp3#KT5c'%J%=-u**U&7WC0;<p!4q4IC#+t[!K05aG#0BkdekY^&I3Zn"]WL
%F7ef&k>'BBHi&.I-%0d\<aO-/\lVT_87WTDT[AW3!pMM$93d\'7tPT(1*oQC*g/24]m)6_I$%#4]!D\o@G-cfhD>kF$t.dn2GK<1
%VbMaHW828#+L'kW"eS*6'X=KH.uhkC",^TA.0E#TOl3*5'qLV-.*;RZRrbB(`kcd%fp:\ZB->:26pV3TWF9bdp.D$RJeoQGj08UB
%&>2FDi'W$:j=I+V!)j^+!7m_]M+N`GWMmDVQmt?H`oj/_G\D\N?3H:s;^>%'NKQV"P#Q\s$:`c\-R7.o";k:4L00m1-%ec7Mh;\S
%fDq:aLmOJRAu9t(YrqajI*fp\0c1VWm-5^O99T*^`[20Db`:Rh8E=FN.%o.<-50KHCBlDCh)iKX!SjM`>r$l3F&dpUbo.dLKDqU2
%=p'=49eR[A!gQ/OYeSZF?:3%3:McH-fQ%lME]Q[p0YK_-n=EWU)^k%W,]+'=&@'H41dTm?j8s[dKl%H'd=D0B('q#\qD`1M`;@r@
%=M@;"$f3QDI1(e7O:g(5WZm/:Q@ODd?="f>o>YM^3=//!E9<@H.>,PFbpE_)5D!!GP[oE\B+Z$J>q4R?^dl9#kq+iBdH8WFdR5+7
%`_te.)")tI3DKo4$o$jj]^u8il"#*m"Rappm=W8%6T^;E@!4`M30$]dGU?I94X4qgn#B5H,up#5='TO4F@=hH*(Y1h2EmWnm=<AD
%BD_gfEJ0.&O;?ng9qbQaTKc*.+)\qp\:Ya)(&n1ZN.j=&)/DMC2dn?6r[-t8%[f7a0_kW:/-[-MKZW0Lla%Huh[LD3^:t8\!<q>9
%fq<teYT%t>",6n4mm\kk*)ZLR*2a@"Pc-_!?.jQ9L,-^Q6II;^-<aV"@:''4"]W?LVt`XkaLM!t7jek69./\jUO85Q^tQ:g"j1@&
%8#VUKXe=/,Hkcdr.u_SInjuYE"Ha-Xg9@iK#/Ns5i<)TE[YF=Q"L4#GUuMU7<^:)*G*ubMW.nT"86aJd<osu^o]AtlmK>=>-nYN1
%NHdt#nAq!$0]h<p.LSED_f,X.,7ql&@))qFK6drR*\7nf[tMI.7,3ET:jb4*6Ks_e1M[Ph^seXn#Ve`4[%T<fB%d;UHHh3Wm3I&%
%!NH239:ot]6NGLgWq;o+(_l(VfL;]O#(s3[(7lm/rQF3f;mQ?Y!oQG'GOG$C0Ama9]VQUF!9#^Xr/>o<!EF)4E-V$FZoC_F\u,8a
%bkQF-Lb<s;?mq'P,uK?IP1maC5et</s.n%/W54hMZ#`D99"n%Qnu`r^*?:11?9tZSmOrO-\gaE[LBJRAkUL,s`KLVCf3uh<Ge@&'
%rT3MkNGgU4]bEu6J?\j,O,U/*iL*;c>fNg)8E+qA#T'^fa`^fRM;)^VmZcOm-h,VW]h!sil?dDKM!;qq^cnsJ(g-dI2J\+U?^Ee"
%f/I(J6`W.S&G5W)=N&SO%@@8^^+PnJDm.;3k`b>;MJ0W4-F4imhLJm^19SqWO9Y"(/-D3GlSB"HqYG$g4@/&.>b`!$ZLZZN%XKDZ
%CBOk"Clt76*m=st#4N]:=DO)6"PeY)]n^#+:)a=g?PFZK,h@^/O.QjA=!VPE$0f=GL6A1>,b8OY[#V@!`'H*B3m0j1@)aX+[f@Ts
%&!(sD8Fd.?I46<8.2?SCcB:FEpsn+bSk[$.g;E*C^&EiCi!k3U"UuW=]9L[0B^2%0L&N0"dUiWpojdQsS6Fn"kB,o622,<n3g!UI
%f)c/;5?>JeZq_Hsc\shB,*O`>JS:5mEY9k\/&bh=n483cX<9eFUPB\Ji?I`$W+0Ig@_\9Xk0<uH54&oQ%gbY[nGBm%3rr@Qe2+VR
%6=g2Mnk11@G3g-h0PC_#PBbuG0K`lTE(,s8>nHl`=R2e8+tXC&@V?+`._InOj]GF"<pC6E\G:3$7mQPYaOD7P/C^MOIR=?HH:/#-
%i!p)=+G9dB7RS3($MoeTlmmhh`C7[?OOB7Hl&!:h$ngOI9@>8^,qb\tZB0&C+.X;&.88^ZD?=^=(4O@n#&n@rF#I:/1S6el8WeWd
%N.Hf(d"MbgHD4Z^CkUuNZ"F9""!:7Yka>m)\P)Wf962<=JBrq&>(Q@nPpP?b/.<t`MB0kcC#'tkY6K)QiSbYuKLFUQ_q4Om[SR^8
%!U8N"Pce`s$QK8'J,nu'^ZK;G/V,L@*(]Den0#./W"D,2E_[_J93>4c--FFhKT\.$$NG'n^;?N"KX5V&2rQ@<_9KIt3k,cO5mK@-
%0_kVo4GLVc$(%=qDT6>9_$r@5,OboM#2e<ogRs0<nJb<pNAqD/\-^KtpG_%l(Dp5V`,nbr1m`:n0ir<')<3*F%')b^7Y\5P@UrQ$
%L.Vs,;AMG=_Ai31@L\,=?9"1R&!Q(@>ZCeX!%_O&KXOm2"iP!`_O.RGE8[Ti"Zb3n!um`1?oU01_A#)Vi55ju)dneZ:VeJ_4/dME
%!T?SF!$b+oGU6!nX[)=<eU\VAX&0/R&0*Mo;#&!iF:,c1%D$V"G%.XplSpMK@J#limm>5EO\NLQ*#s>Ne099u`*c**cgiUn,k*?X
%XO3g\1=isCguTCs4tsdEdTX/"RlDVqLIF@f3[`(DZUgN:c,25o=<6B9#R1_C"E-/XS<%-7j4aahJV?Nsqp[HTRleG3hXH(VkZ)W]
%&e82&bm>O3*c.%)&^YaW:qFhhk=C+X.D07^SK#Ve^ip478\?=f_3G;#-':DaTV)?6&KPSB.F8*Ta9Nl!*#1bPMf]LQ+5;mnf8j;F
%'GUX&#qN]KP>V[li*P+5Me*dcE)nA)He$&"(kILn%*Z76]3/?u.YbhkXojUB%Gf2M+quZ2gaQO'S5OJ2nNYG<;`.B=4i!^-6n;aC
%7`&&=^b[OSk:?l%^h_='%Ne;AL$+gW'e"8uFK?54nd;V*KP>:Kp)1JklRGS\[UWiQ'oFt]SL.N,&N%@O?&jQq=435YB0N'l'N^o&
%^B!F9'itaURW#):+^4EP_VQ$;K>46VH_7'9Zg4Y`9.r1+jo_)-mY[!&6t?QZWberW@u=%0ECg]K:9[h=G7(U,%5$qlO#SQhcJk7-
%O;nEOC#Bg\Wtr`I)3+lWWX9NFg#X5(4N&0%^MrcZWG)S4WC"i:%nStMit^8q]Fa[nT#p5a+G_!r]>?F1SgJ#/Y++QV*^!bl9ujLu
%V2BMcV;!BfM#9Ne/HMJl51',ALUBFcbFl]s3'K/E\'L5.."US2kl)m_@<ZkQC)-`D=?q`s;&*u'i-kpW#+cM"4^=ZLn]+:#if5R/
%&S2gSj]<9J6k/Bk1gu\4=0c0ec<&,Wi>n/f=(T4eiGNE%j&NC4"UR]r32>JR:_FQF8%02!#dFsEiq_js`-*'og%Sf?0]74MA>'f5
%;Mi7H9]a!@pne+'V=J@P?o'q^B`[@&/`Lq]EN8Zh3%i)@N)[[b8TCp;\6&h,lJ\#0:![R&Y$=r1i`XMSn/!;U7)66PbZr)pM&6L@
%&.R*$\M$7ak[f1VIp`K^cLPAo]iuLBSu`huW_i1V;hubt.]4?6DT"s5&Q:]\nYA,I>hTNbntZi&AHNSr_H:3-+si!B["4FVcHX0L
%L^>E7FIknc'//#M<V+,K>p9O^(=(&WV,PhS6HK'a/$'C?Z7rj)#G4']a("f7Jk^3fJI`[/LF+@E&X7g1&f11!jtart4?`bV<6=1Q
%d6uqa1JpZ&(nL%/SDf)nXHR#>C#e/gluElB9_;VgkuP>L:DJG/%f/P%gi9(Hk!9e'^;b41XQRNK!#GrL[*u&L-D?Pg1cP0a,Vmj$
%ZVZ49\crT\8kF#4<FP-0j$$+L\d'$tTZ)mn%T?W6PmR-=biSJDY3'c$nSYi*#qli&AH31+n,dZb\.D`6j1,^Ri\on&'#bDrCR)#[
%iX/1q'Ur>u2DZcj,a(P=#;)a),aS%T7$.e-EMPARj=FJCmm&KVCuupDELN8<$\9mmIST%%Cf_[5-j/HY/.YK!/on/70e7q#GXg/5
%KKs!/7(`$BE[WL\,LQmZU3`&^\^,jJ'LFYN.<-<;plIgd%JEBO6!NP$WuJ"6'in@ks3*EinO]59$Ge%&RIeKtXXJI/WIC(J\'S*#
%\T+=p/G+N%%B*\3'h.AoW\kG78SYSZX2-fgFXnY<O/U!&"sX3Z*]sc`_+9-3Rf^DmK-NZeJ>Ij!_4df!+@&n>e@:U]L:(Y>+!F&a
%1-5UX".KMO)5K'i1o/0VF]S5Vp4,BJEI\tg&IXl/*e`0l=<o@=B_FJ[HVf<@YZ1_amc$tfdtijmXTZ[DPU^>Vlb-p=0_]=$-Y_Dc
%K7u<9l?gK@'j+Hn/]%5q(4*g9@Ynf_5j<T6!m_9u@Hg3&1s1c6O>3kcUpe'IW0JC^n4r(kpWa#3U)>P\$\>kkB9qJ'g1>n)-j4Ss
%-fVrcoS.H\n_We5Kj.Qns-V>M(XHL/U,4K?MnC;<'@GWk@'Gct#&Fk9UO?T%a<e[6.?#uI-E\PdW1'NfP%l&K$4#om5l>94;*[BS
%Ui7npAd"D=%(q^U8=HZdYpHYk'p#O7*.<JW6bt-U5q4[)SI1o3oS0jrJmb?!*M<s*bhiOc<p:=56jth=jp-sC.#\Fbb>+j8e.alo
%$$',g!eOqsKb10j:Rh`e@?<0N0g6Q^aap-u&5(Q<KHZaS%;`=X56N23#Z8VF;[BL9YluJC^mZn"<%bqt^rgcYdWD>H(Un<.?(I?9
%'G[#jq_JX*QH0Z:`5.Ot6cUM;/Fj[i:$@7\2q*0h@bfX'*X!@Y`EH<.6kmK-dtS_t#K#H2;%O4o.U[!apC-8R^#BG[V9!\Vc"")!
%V^Rq1)->21n/=Ll"!D"c)i_dC+="I0M(k(PMt)S<G)<CgdbKp\:1j^i#`B75O;O3cBimWNckAhD(li'a-X]:1e`0rZE'c6(JUjF?
%J?uQ9<WVM$E!gQ5`>a8#0#2kR.l\/:BR[bi]q@]gY<kmI^'@8/%ZKOZ(_+MX'r)TROXl2U.`pj\J/S%!;@@FI,oW6hA\J4m)M/_5
%=qQ*AU,B[c,PJ@o%LiXH3;-?1%Pb!5,(3b`0l[3sbdgo2(,YTmBQ/QTC,E\u-TCRY`\_ik`M"'caQ@k<[RZd??j*Gg+=srfh?p1$
%`hQKn$uCe[Gn;Ku)eGeScS+-P@cT?T:^c4><i_`YR/O?BWUJrZKeZruGa?biLY&JVGl^)AOVR@4.o&kQ=]s$-i-h8hcXS;C#,@:L
%cES?m0Hu`oUsDc#B0e0o4Y)Robh3rtW\c7>,o_L^M1Am0_D.<E5*_oZQi'j7pWJXn12[Ut.g9e5b03<JCfjq=XDPlmb&fGTh^(N3
%j%bMJ"L4+8=scW\K+Ao"=kA;pAQ0a]%ldsg&LBFM<lT=&V^L+>3Q*ZF$6)?18e(5R[_,YO!9'/P64u6#lOr&4%L_Eg^:7;PE?+CD
%X5(Jtf:$p6WuB6YcGO5h<laM,;VMB-hUCkqj#@[GCdh)q@$]2EU`rY9.bL1f$6DfZN2c&q_'dp-OBd+6)'p+6R^)'Sa@Jjo-]uZO
%C:;2l1HkI3!mJ=nEa#;p6Ct6:<5Ns_)$N!,_86LlZ.;84XPflc;L>XgEG0a6$9Uh`(M[F5%[@FC@#I007u@f`%<4b?a,n^,hbB9-
%YL8"i-7Cu!Q=Rl;.c*7!00,0"KaPgRIQL<C#VU3;%=88tP"#kX-[UHTfslchP0O)E47#EifoAq"(PcfrC_P&h<j_J)V8<u1:aBNs
%>s"S.NK_R031-h5SmA=7M?D$XJB:@Q3-n_$VBk)@a2WmJK9X_E!=S6O%XXBa7L0hV<G&9l%uHT@mPRs'%Sqt'^bGnX3UoIh`Xu'J
%*X96PdJS-Ph8*6d#XRUC&XFT<9N$fn#B_d??p3[als[>iWeOb[iQI6;M>DgRZ`TJ`B\3ZiO7mZjQKTgm6N3G3fc*eNVG'U_N%YF)
%h8TIOGap(I^q4Wm2@1Dq4pe/?REfZl:.%:S0b"5g*^84!:qT&)m$Up[C=.@1+:qMU^h>lD#;2A#QFN2fBK$i#aY-YFbZpGs/CW]"
%+*_1kB@.s=W-RRiUR2Of\C+Xe8QG$?c&ZIoea4D$_3(C^=aiD>GllS&"sX#r-*[R:Rc&)o`C8o%MH.d)'rnmeAJosh#^Cf14'*Ts
%^qq`aP>[Ik<5+DmKdJod#hD9k*GEY<?3,b)ecRGh=&ipJ^ZpA>l*)p:.>F-a8/3S\1Ae'c>$5O8K,bt1gpO;B3L5Vt5cgm>N(@P(
%>/l!62hP[Y`,AWKX[aio\%!.191gT9rK:h$SKO).:1/b[Z&mgi+t5um!tn@#Z@u1SU$b6siEhGK:hVrG/&*I9=p)_LrXsSk/Vbkn
%$<6+0(TLM`o?!&ATpS8,$3joH*DVu*Konc/%oQWm3G^%DWeHQu6#J8387lAUnOcN^jENg[Bu(`]osJ>(V4(V/gHm-V8IR9Ck,:MB
%f:@MOQ^W*>m0eW\]GGlnp[SY?Pl1*L.;]+IV,WfkGXhK<<gX``HP>g.[^fN$_1O$]hMF/(W#M8"b4UV;K2_$7.W/F?kml"rVYE3l
%dsL"Cmc*4YbTf6HigMNZ.6Ju20cB=4kH%^/_K6i[I6mQFk"aV!U5:O5';)29p<hNCS:l]6B+lA)"!>W/JH[eaH?dV,(tJ]^`[tR:
%WBZ<1X9@S/L9l-$94[8K,`S):$Q'9#Lq7&$XDEd\/Y9)$AX=-6Fn?;O::0An>Yq'#=08*[a[%,'F2r/RMIr$*p`.MuJ6fY[V?t80
%*`rqf$8=FTVol&^M)3@9LF[F=TP/j#9!YT$AJL,f<*AUlK_=?$";eBqHRr7IBAjFUA+/t2FS>"1;@%Se#n%mf+ie%RXoh2*!@'P`
%-X0+g\./RHrY??pXnh&]+U[^\acNYXMae:fU2]</Gb5T<+qEri*r/LLBc*O!_lM"7V",[Td<`e;mK)*0!`=uH4VY</1"RQ]0S.KT
%+;"%L)0lDKI$,Wh0Aq7"k:5^XabBr2@_ff3MqNJGKOkG='Sq1]35eT+)[nXnQ.E&GhItg^a,,&O=-4S7bX!,Nq$`Z6HutXhWuod<
%#:P4`!0)t<WD>ngZE8iK@qUuHSI&g6%3\>P8G,AV_V30DM9%`2B39a/UlGUdUq.)\Q=*^T*$Pbff;ZR7$l6BjSPBEVjJZ5^b@?YS
%jr)eYn_g1p$k)=ORs8_s?6_/D`UiJ-1n):ai&SJ8Hjjj7,pgVD71'7X%]M`A=!F@Y+N68dD)2;l$k4!;U:D/(R[PhO8/rM/GrT?U
%i%KJBS8geroerI%`BG;>Bg?D`cA+</:^dF>#^,?nKjQ=td)G?k*pLfL.sp-kY+b'J/D=MT[JJN#gf]bCP"8,5lO8(rbc%:ml7e/e
%(2+AK^G(Q^26Y]mP28]OEfm2&#&\+rf>Y;9C\C:WcEY.:rugPIoa%ih5%+Z3X.b7Z?K#!C(5,-/l_m=L>uA8^nEAs!Hi[&)7st*i
%Br`@dO^88%QVDMA8;b'oGZ"+C]&9?!A<^Ue]?>fG1]ij"RP?cB-t_T1&OuVBIduTrLeo&c<.[uQpl$TLZt*Fe*)Opf3Ybd%jHU;6
%DnuMF:4e9C_iDa,?8\Mm[S5?cP.c]l:lbJjpo6SU#opn1TnJ1LhgUY_88bRreB$;8)1j2l"\:]`%if1sMM7)C,G@SZ6;V<HR6RGX
%3Plo6_/"laWu='s^k`PoB7W<5!p"LnH^.$$DVVB_P2L`/UCF\0StNsR99Pg\o-PGo4MQ+b$Q3cDN`46VjE"u(.Bf,P[*rM^L+&aL
%LkgN@`=GcG'1:2S@aE.LdN_mU(S"maN;#sgU5+p'=Y)Kt4X-A=oTsXcou,mhUn9_ZoTUmrnN/ce5B@/rIco,F#0n7K)$n?L-S/`m
%ZU?[liih$<d;q'\=s:Cfi--)7*(_slZ-5#+6OD/e@<kf01C5YR$)BXWgJ#-#UmEf\:I(;ae#)\]4J0Ym401H*R2&O<dPcII>/aR<
%!#6d5e3.K('Dl3["1p1*1n$=u=f=BO_[Z/)+m'uii*[R.(r"NOo+QPFL4P1EB#l0O+>(hs(pOk\VaeK/#=;++i$&**:C(e?T'Cab
%3"Z(/6%JrfM+S`rK;<I[/Wp0-_E$JL!um(;0m1o>LhAucA>aU+LH9[mK?\"aXQR5!P!dpt)C2u5CHTUH_2_egfK?eC!CE04Cc`;:
%k+MLD&,n364q&;hPF74C!Nn,XcTsLdh$A[%k2YAT%\+)NTAmbD^!0BNKl8I%=Q%7pa+eA91!KUD_M9pZ;'Z@L'Vn?UQsbK4E=I@*
%[&KQ<65Gk&IQVS>*'rf*B,GL=l\V:iQ9%G#!rFR\bengEq0j)M,g4rDj.6P;I`s(XK#/puCXsBaJqufSOB_M3B!c<lmM_`(a3#!W
%,m\Z8#Q&Ka3=-l76\nsk=eV$l6jAPaT/cPhUV!O\1pLFmQiLqU0Q.>0>_kd_iJcdUF[1Qc4;>$?"T1HHdY9bQ:'M.r3Nt/M`do"T
%'Nq+a/>457OSs.WDj_i#,VcKtJd("rghS]:1Dt6V=Q:+T)NYj^^9,7%!]`mr[f^%?0K;hmA-*@En*n/WaLIc$1ShbIYQ2in7bDI;
%#XSjK6Ucm$TK`1>JGk:$66dATJ16YLI8o4&9V,9&Q^$I`!B)sV2]tC4?FW=4dqnJGYb\=Tj:Wcs)9FLbFR.:BiC01`k/(rkiaRPX
%L-Wtfjl,/VUU]Y%b[;ct3tB9I[!^.;CNQkVA2,qp@mtBN.L/M[N$2Zg&-Q_2j.<N'8j&_+0;g]Z6aZ+WdQ+_/@I^B/472"laMY30
%i5[^(\`X[s2+U:VT*)%'!D0F;,"^@<fJ)aHR,O/pS<Ln,j[l5+PBSI4.I.YK,mX53EM3gm/]G[3@_[Ln+iB,tO:siD3+8Ke/m&.'
%Ne&f5qNC54aE$S!/L'+9JH\<kE&cSZaf-uGZXWu@6ElRF=mZ!g`$f`6GEpO598@Phb-Rg&XuqJ3&/u<OA7D%is66`SEQ5_AqB#ZU
%'9*MCo[Wd4LRVt*4LKWa+9-9nbmtieec#8ulYD"7o@*OXs)<AqE+lYo%S6*TCOu+t?TjM/2p_]llb9qQi7HNaLK=<<K*8r?7Yn8F
%l%B2S^/dcHpXKY6,4bT!iQu=hh%9)ACPOaEIek41H>O+R^?qsG')_T0,(86J:B^UlRNc_&7ooig]%S?VgK.b#7'E^Iio>JKA&QN4
%[7:#(YMKQ[[5CJN\?G<;WT(MC,BflTreRO[?\?9_mAE;ar!$>8r;*cA$2F0N8T:\Y\g7(1osIA#aaNhR^ose9d^OXI8mEjteLGS9
%p!YDtIXTHRSbCMadHS'H93h(:oh5;C-5n4h4T0@qr,<l4'-6_q1\leFBUVNl40<;XLRVtH&9@[5S+tqh)CORNT?bPC>[QgX$2;n1
%H,;Mf4AuK_FjG`9lY<'T8%r>);aE2''8ZknRZ1"7T3=j'mFmFHKXY`tV@\TfYFO%m2c*<MEg2WUQU0_JrL_4HGtAHI?_bo#-W\G+
%_!'@i4+5-!cTEs\U4aLr?Q%.-J0Gdepn:joG&`*9j:KH.I2)c!*.WmT:F+RT!FFsj_nW)LQ^sWIY'+i/_<)++:k8D/+RdQ4:T$De
%Hq(g?hJDf:=m`4Lj;hcN?G^u9IdECA^='$M).$;u_cN<!cOGB7dd*5QD;SRU?!V.YETp?#`TOH!eTFr8q<t>Yj`ou<5Yu<EU'/;4
%B-j^6B6C=6aD9'q?>4;&lc[d/-p%/-<=9.t/U/@/d3t:#R?_/;$c40M+[f56-QCQh^kn1M%[a;[Eto/p*`-f7N1u8kM?n%K&^%81
%\A]"SbH)3YNYlXAD^Q@;&A/*PIGRB$9Eu@dNgKA`*HUpJJ8D;PLG[C>AT._'a'.1:AV&3&R&ejtJGR("dGa"6[4]XD_s]\_LIHHf
%c-"^2U9,IEi+u@)mVPR._JkMbM"SV_b\O;D*:"'N*+IP.aIlQKpRu!@J`WX[]$Ic':N.:?&=6..=Lm!&TpR>c.Fe.>.Bg&,$Fq2h
%hdSa8E:W+%em#C.qX1]`aCr%@;$Z#VIi%UAc<sK,r#qKSED464X!L.L#\HK-kKYtD<OMKRVN=t2&BV(RT3U^i0[2@4'Q9/"'t]k8
%X<cu/'[YPVa(H/tZC`?3D0i]u-9?6/*N%nFLb(G^-`IR^?$S`QE&MOt;0(O#IZ%S5Meb4B&%>UarJM'(L^]+R<<!jmV_<+FA4424
%E(iI(\@?Jd$7"lOX2gam_as6]&RQ:)aXMJS_+_W!jCm[/,1f#K6uP"FSk'H?UB>hKdS54`^qW\'KfZ2VAbCYfIZk4crIO33PC/$J
%8?4!SAfk2n&FIGn4+\52[1!1QKlAd"8B+CO"gS@c9:ZX`9Z=lp8<aCF:)N&h&6p;T,O@<El%%Hg!.(&rgBtm=\H5O4;`-sOV?2t:
%.n0Ul00^NQ8Kkg0)\\EU:V\gR&0*<!C#!`qa9+'b2TN^*jV>!NGDYEkms;c#7%qs[:DV=uJHKMp[#2sqOs,UO7+Y+]/Q[5Y)0e=?
%98V?obDgHKUY*hq41';ir$!M%?OV"Ub8]E-3GW>rYn>Mf9*_FMUGutT\jRb9&hK,q-f5P=hn;/VjsTYO,*/3BU<)Mu2L*)J'V-9s
%KhGZX3\HrZ(!P04mR7DK5G>CP>#<>^a$S1D?jC+qG^W'GG(R[59:`u1MDENu9Ze*E344a,g!l9^aVbp6NUs(RP]<R%<$CFPFEkHP
%Ke8HV:aJfTDug,@Isg/UQkRa(<<W[X\];q#7L,<=V4@_r"2l'K"Fg1EWo^%k$O&Yq$H[UVHjp/qN_?82,AiK6[-C<k"C^f$1tQ1h
%iI\J[5Wo7B!u8[7qI08+-RR.!A:/Q7mZ%l9LHk=56p%-q:RaA0p+rAc/ain8_W$#Z(iLY#4>t$O8.C<K*;]lEHIC4Q_2PL[/7`<_
%O,Q>sLa?\M!DL$]i@6'G6pICI?'`+enWTBdiLIt5VMaBER2AXA'ljAUSCF'%q;iKcY=$@nf%=h?CmN"O`Ao>All:SZAER2h)Gj0U
%\rcB]jc[^lDUQ7f:]N<8k5DO`C\K\i3oFXZ@L,^EcREo3)BBi[9W\DQ6ltc0Z)@CA?Zn3IH9<:)?5VH;Z<3md"B^9oG'^t;&PLnp
%0o/0m`,ZVC'kJh,$4+4/Gc9`pdJSj@Bg'jZ"dVr7qs"4RF?@1o@V+XD]_Gf\SS+b.K[i'j^Y\5aFlX09B7pqeruI:ZP#tu6l9)It
%\DK;13[rlkBQc9pDY]QVc`d&S]?SV9D9l;Zkh=5&Xu"ds:!Zn3Q+.%(eTFn:Y<,*sN>_^KgS$:rXEWp/eeOHDAaEraP)1(e"-?8@
%$6aB804%CFVT-sSX,0XYW\!H2QiNR#)m1EFM?E4h$jRFV+>G?.Ua)Y6i1bqpkn(T&)o=7i\K+G>88Dat\$/YP^KkCD,mc!+QhS:M
%lOQ(W?pP_$lE#9n`Ug0]5RYD/dU.PA);s,(4P:DC9>dN:(EmoT`kX-X^[NGi:6[g"Kd58(CdZ9aj4Ln"E/C/7\tTrcLVf7B+`tBK
%(1K[pi#KE9=q)qP._M[<LT^]N)JP]"C_uS[J@%WDkm[ZUE"?Lkad%7W+_@q;r81'1UL8b[W1k\ZI0FjK+rqB'8oolM$2=O@BKCR"
%^jS>H`kCl_]8UPD0ulOE@7o%nZM_uXJ%X]5FGRj2"<7M!QLG;+a+Y'Lo(&5H/1)5oEA3d@H]FS-cfg=dWs0ZJi"TZ,E[;>\Hb@`R
%9,^bG`11o4%%Nn3)\^U7\Z12bJM]%oaP=]OqN(e\M2:#e3V;"X$_J<>6uT%5J?k\k%Su;YO!3e:Zk[g"iaa7+^=+_C]NK2]$X@Hk
%YYPI?5XS2W-Gaai6IbO1dhT#d8>/YuS`BlrqD<>6m"ck=l^RCu+LO\1EB6si,U+1q(QeV1't=tK4V5hIIp>6;a$*pN#U-E>Toi0(
%G8?m@S#TF6[-rT-(Y?2B]te!Q=DqR5_(kSFpkrJ#V_JHa^J!Ms%53^[kWjMe4SDuak?OMEPn@.90T7Ch(g#jj]s[oc>fF&j>Wp%M
%Ps"GjdBKEfGoC4,O\g,W1@.,=@YS/DM;9&Z5'#U^W6fLlAhI^m;GY2/Lf9cKW5S$Ac7\VgSoceD;+![>/=Q/*oAEON9I/HS=%Ndd
%("u@&rBdcp`O74/[;aW)$P1&b/`:-l?S!Y12mtukBB&obeo-rmhICe1]sNV2Bi1toqEl5VJF">h3*o.MP!oMi]ddO2#l.Ma?>Q$L
%'=26,/L_lq@!*jp_CmBKa&r>2ZOc%B^hYKJZ-s?EOI\,2op\>3Q`cM#/YF;oJU,I!)9GMSG'eoPR?!nOgD!?b/6*K3(t153@B$2(
%#r>d2%#aV*h$CG,YE>kN#2F'cCF*GR9bnd`_b6&"'Z"EFM_8Lu3Fim,)"^50>,205Yo4:'BPC.8m:+Pr2O^UW+spl/H3'Cs![htQ
%RfkRb7#uZ;%[9)75g^q(o+J08Qt:e`,HcKKM1cGlM1kD@W?N9V/-ce(M/%rR(.#09"8MA)IE(FWek-gL,0:r/%jZP>Z\Thc>f#G#
%cMh&MM!IlN<5P*g:P]COU_"!F-s?d5;HbJFVZWEsi&e-X6U,$I!`#]>Bi,bF0'nFS/db-b_snD+)/<[iaB*.JBL,C$c]/l*J'KR(
%IHgo@873>*C>j5"*#l,Tj3$:.l=ac-M!'B!DW\Rpk;jD]Ip.grgjiS-K,`2giZ7knC^cE82U17Q)c81>pD_L3ma]%990Z[QG-O>]
%W>@eSLjm`;?OBOm>b?a(&fn,A_W:lmYEU^7g,`j#%Va=,Hprj0$Rg,Z^rU)5!*#n`apah_6e+ts30TCJ?6\gFirnAOf&1c56r(]l
%.X+lfN,nR5(3Jpg<U"U/,fBo;QRZYE:NbV4Et(U^#*!aSmVsHkSU:3OJuATH?MLR7e)Y!*,)[<aQ:&g!hH6'm&>^fNM2N&PUT=C=
%+po-BT#*iP;^]jTM&np^j=8D4jDos1n"7N$+k&r<N,'\,2?dCmWR2#71IXu/jCoj,'\X;gbo*gn;9&r?Ph\QsiQ`1PXt'GN's\X-
%+GiIB`/[C$#DrL=_<StrKd4`.nIfAq:A98C8(Uu]8V_D%(c]Q$Ib,>O@(aXD6^N$ON;0Xp\_q4CYRYVkYt:Q$9ZR)/W%KQJA<D]+
%ZI'A=*,6J/*2/sa!t(#i]Z$[t&2.l3+r#EROU7i3Ki.n8bkR-RkmKI6,$6*h,/;,Qr6,0eS4\q.4[Y;PIua:C'q6B^SBsB](F$/*
%5!GbQBs((QQnp?ELKIFr22RWp&\?#*c391*S4/N\Hq$%kDu^=pU5ona-=&A6:R;q4*Hm-PV4\(i'5>gtHcecL7dL^"#&:^k4gl``
%?Y2%1>sIgF!fMk9jS)&kB>B,i-=(4!)L3Fiq$Uc;rj3U&2kX2nE$KZL>!7LI@EuRnc/SU>;(Xi=&`$=ir@+(pG'Vf$)"'c)pu+^7
%M[oS]E;JPI2#NsmH_&-r&T/Y6)U=E5+sBA42'Jl+<;4!S+-sus;1NA1R&$Ge%$*al:g]BUkr[:BJ`(Z/laR7Qc9:q]5uQSHs+a-N
%b]2;/cXK_*<%9"ZW-J[)-5=A`"RHi101466i>NYh.m3.pBOuk"X:^,HN2"TdB$>]+P$aoU]OmJ!@OP8k48ig]9*MS9R9^E#CY3J.
%YAB_LG;hikpI&0s@j6!%Z*^9^:mVS7!Ic^LIdW;)Ata.@$bos-7(s:bmAB,>IN:/_-kflU")9`)0ToXhW&1I=D-6LB#VR4-%*+C$
%,afe_j/&M=[t#/5i+n'T(q-(VIRT0_@LV"^OF<Sd.hAQGPi8<3VjCg;f6t0m]**^mFqO7ii:Jf$G(#4BI][erPqF2J(3(%c:hMR<
%/YjD]i>"k=3k2sADd\k%%L\S[mZ9.h#D0mn,NPq6CH!X$hul99XZ6E:-.Hc8L:C\@6lW($Lb-S.cNMBn84@P.m+9==_m0k<GC__?
%T5i/agCm4'Ke;N'p+1P==i`rt3dZ6Kg?f9eRZJR>GS.D$`<PidX=Ql?GsPmOZ>^*1!l/l87lkQN]W=UCdr$9J5nQTmhFAh7lO8.L
%nYVe<11*D+NgMo#bMU-;&u)(4?S*P$+ha3!;%lnCctL8GTM3#LE;<U8#D&')3WB5RJgKEpTbT*OioE3A#Sgi*47_W$r^'mT/TfEp
%2>B0i''WVBbo3CPLL_5WA82p\ed#LD^@Wn`6\nB64c2MYa;\P8FG\s#7nURqSDT-^.S/.LU)u*FR'T3kM%a8ln]780@pKPF.KkQg
%SkZk""EL,RAQBnL:WK,1MNO)S+o;XsMhD0P=ouqM*iiP5S.2&\QXX@]N4'&&;>QYcJo.GWf3gHWq#Me]60!P&2""9f?Qp)fen;P.
%'V.4g$I!>'F/A)6]#%rj`_!0q\/%LtO_;T'9<@;=AF'Z>egVpY83TYbpCI`,CPLiaaVp?$'?r;tnruqS*j\MFLKl08\H"kuQ_C*O
%'/NjDodHtu"K)Ai#jTGlpf,)rc8R1<3Fr5^FQ=T16d<11WOpX&rO(,],J.O/;fIDPFn&?tm0#?D0c2o]proM5V9-Op8X,`WDe/8:
%_?7PI6g_;/=#P@"F0I)efLTTg4Qj51I;7mEadL'kP7qf1AMG!$Ub"8a5fBs5bq!`nc+%gK)\Pq*$(=<Nc"DV!QD!0#LSmA:/ECaB
%&p^AT:acUp;\:4n*a%LVLq`GY5(O+HSHuV7-EobQ\ISDYA<or.5_MElaF:)#@'?^]n(lb5aei#!-X;3HM\h+jYuD##":\5\`o<qi
%@MD=bHRgIpiN*t<+m0Ik6Gc'4TE`n\n8'^"`('tV92[&YL9l#2=Kg`C!E??h4fFp[M,7k_Es$SsKYVS*2[g6onUNpF`=On-RoNuf
%+q!=3"kNe<G\_#.I271gdEu!M9-9_?[N,tCYMh=BS"rH$PO`P]T_[SNe83V7ILQpc=LaGKjT=KcH=KsR."`Kg%/%HP"3\UZa@*b;
%:rjRuTd"P97/ue2/6,85W:R5RTcjQ?`*mW\Eu$D]Ig;(%3c6-3+8Q8M#$d\!'+#D#'+Xd)l/hnBFT)VU:uQ99ESQ>$lJeO>'T?j!
%/`kr4BOO]g.01D\N`j;-+9PR#,^W(a7Q6m!Lp9bcD9R-VP87/1cIkT2W0&;7.@*l=Ll=ebI&W8#:=tpnbG2-u'$46PJ`@)[(6>C@
%?JdRMMqi844pm"./^SS.NF9lDE(+Id,7Jt@fMBl:.(JCeM@540jc2`8;-'u"Uk$l(LA*FJ/T<*?2E-8iA=9rj^l-]a:i#=f,#BE)
%?5^TpT]^$L@R6j"/:]8[oF8;LGt:n;X<`HH;;=NhEWS2;/1![rKg6\^S%ucZQZBpO`nPSBO;O30,ES`6j+88e@qgB_p;kiI6r>r,
%TFd]Q<R;`R=3a*d$uZIh!`Bq_G*Be-&b4A+8hP;S,?b#oPl-HH<K4J%\;daq,%]8)Od@[S@NjqY@4:ik7XduU8Q_^NO()?kU]Zl+
%'-2Gc+L.ljAPQhLE1l3B:[$(kjQ"j.Xu-\48aF<6Og%e?6bk(JDZp6F;Tuo?Y7.h&q2q,H,!k?"fST97*=uJ&QmGVhaB1mH#8<X#
%'Co_,j^)c@^RC0_eYE!c2o;bV?8r!k+2Q?ai4:>Vf@NL_q)\N*E-t9u5K86a0rYql_SJf[2aZ3`OlsU3V3/5a1HRiK3f"!e>-fd>
%8ts$6T5kR.9t]a6fgGIdaQPs,LM'(e.7G";(%iY>h)]j8AH@CPN2""@gB0k1bc)l)ct*iFN@@M'WX0hs$Rb$e2<9Y==9MnB/p>98
%h"n,GY9`2C\;g"D@<ZDX-MYR3f>fSZ^-7SW;EDh08-ZhU/r/XN\XCVrIbuJim[8Keb(^ToQ,$[l6$A6R.V-t,.NVE)PN%JJafO,K
%'Y1+^CFp\YmKW,p%$FISLED2-oI/?R1[0W(>R"4],smb;X^mJB`;?g8JCEs2_r-&sa9`DV#\*s%>XoYC$/'ndMt4J'/%neO!g(Z[
%J8$8UAVc.jTtDr@#QSFPO7XFS*R^V%0$R@K/3i'q=G'I3M='0Y>:`FQoaRQ>ho<%-.X`7,D.:348s+=Qk;rma&V<;:Pkh4S^W0Ou
%8;]9F(H[gXHc)f1Udi_(Et!-2+%%oAOS*tDU'O_IW$j>Ba:P`p,'4fgA6,qW-Uf.Cs(;ljquiaqB6/W`[0ml<,dF9fa2.9PKZ8m;
%MAXrd(^Fgb,402?2p$rCM*B7GZYQk:78Q,>Z;ltadpSuV<bo-s#e!q[H)8l%H_;qT"P'^bj&7SDaODZ,3g'G%^Lo\%((l6;9URiH
%BiGaI`do2!Y4XdVk6@qm=n71E&eUj2(U/+oj-L<$j?UluO]a+#C!Zct?r=?47@ae_`BK()8-d+)Z5bG@8A[A"&C9EpjKD]#-NOYr
%$d+eum#/pm*?lTc!iAdkOV(`pFQIie<E/bg"AZiB.+,\"51qL+EnYRN5t5EW2Xi=lDQL)-0cb=$`oPIj"i)?I5r]<=nS&=]eN08@
%7>V$)CUs:Uf`5_H&duXR&B>;XOKgm#kpQ:'L0,:WTc-s:emnIi5-cQ$5]LfWrgk;5e-Onf4<k1+EJ3S<:DD$1YfU9TT=IA.s*oB6
%f!@qk?"`"%d!s+U!O@5*SU$m2jH:E.OI"_.eLb&=e]!,.FCe;t%Q=@#j&p/iaK3TEVtrTW%CAM88FA,ThM<uSZcBIcT5cMd&Go^7
%pXY]A3Hr>m-ViY%4k_\A64qL_Ut8qq\o)-U1A#</%K*VhZ;7gM()uk:TY2OC^/3]*]4A5Vd,F6`E8\T5o(eLfpG'tKH6O1$fJm(?
%Mh'?feEehZeU?Qq.Sl\p*CW#3iH8p<U(]rFGPAoEm]euKit@Urg+>.eea%RZp!%N-DLqhkINl:KV]p6$V1=^6q/r^g,87.)N(SBa
%:hrd&)jadQVh.RAk:#CG=FN:a'K<a:EXT'*?%V9W+`$IU(oF8k/M7$1$eT!gcbD1#X1`bBoqcW.L]LW&s-n^1#nCDC@H[oWDCL+K
%%WV&>mVW+Xgbc1L3:2Dthk9CDB>]X&lc)g-+3,YOD9Ck\HXUl+/Um6UhCA.$!U&I"^G?,0s0qI)qSXh\q<83L:B10SVO`V>VbI#\
%rSiZ4Im)]rPCL:FVbR15[mBA[`q*CLhK+.FcIpBqU[3+_A^TJ[7X<H7#JdjlMT+D'W&b8SE^9JFC&pAa%'N,0@8;\Jj+>IdU!=hC
%-IK6.W^X=LN<%]%E16$[82t8pc-[_N#G['Tl#^O;GJX(dB-)3(:dIE]H^O#GqEbOo,\hJA&(D=!*uPdMbA3f/'g:DKJI8eQOucW7
%`jCAr(pLpVoN>OuOY1I7A4tDPlpd4mW/YI92o+]kD<`l-SALV<n>0EqCGHg43:BVg1L#.V\>=W!_).*+1F?TpinR2fS.TITaY[38
%bNBKqS_OoTZQ$XKXgL5.gIU@9hca4eJehJgqLKL@9>MV08ug7Q>&fjs#,K<*JTB%n=9=&1'Ou$C"UFa9m'%$8C=R7HA*'VCNAuV,
%S&;kJcJ?s%I9?o>TcJCD]$UH25iYEY/h+'`E%]2?L4_lB3I@!ZPK_X$a^[^AhL]o[iOi>g+^G2nARV*n0TOZ?NbF(T8M,LA+nq,&
%aMe3)TX=Tf@5Ui.%;c@75>>OGr<3pm;trnK-!H!%WGM,&1L9H%M.^.9eB0a.9Aq9jRcpbViXo=.)r9kMGp8'#qR"=@6-/.4Z&h6Y
%6WD,4PN\ufqs+KceA,K(abstM.#tUHI[sDi<_T<YL4)HYh=HF`6\EI:JBBRlZW<D5+c]ei1+pa&pn5'TEt$Ig(83E)mr?onp:@5f
%G-n4g<`97pF_Z!iTh!\#_S$Z"8m)bPa-cUfeM+A>+PQe.n<W;WLOJqGaLf1VTJ's"(cb2`&N*DoBHCn?0-3g31XCL<WfH0GcjHV[
%A56*$25Crb+\H3/6<%+cKPOZ<nN]6,*t]*'d.*bd.e+%V2cr#^(LE"lTjt*aUbq:.-cu$Ur2ddm'ReQnXD&\9R'`<fdo<k.#XIk8
%?D6Q'3f\M%!6$%D4(_1>QKA9A0A!Ot,"8G0]AbZ4BTI3)cj7VO%/JH#J^&@VLO,kS%1/tuh5e_<H=S#!du-HkU*_2qNSV^tb@,0@
%U5ajX7[$ta7'D6eU:2K5Guqf1TMR6EJNp@7cua!8k\XE$Ga2Q:YQ<]%BaVnZa"W]J-Jth4<-X//ls2<`GM+Vj4nW;2C"LH_rj[b4
%%D5i]U_TWIj@8pq>qZ#Ll<EM"#L]H2YpMYg>n,E14J04@Ip,hAE`p3fB!c/cS!YtqO!\0ee`%?,md)jQ2T52TKh<4ZT;cWFLcgLo
%73Mn,)0"i+JXEb0/MrmgC0WCleR>.1[@sV%UR6o*HK'R\r,<..NL058j9BgI#%lDECN0>VVf?OIf$JbR4^Q0#gDn7K*%b.+U#D\l
%9C^Gp2k,#F/%=/q"Phk-`K<i.=c@"Q8=$AoQ\iY"EcbVsFl5#2.PeX05BH%V\J4e7qj?YAh3S]Gl.Um#'\2UpY2pQWA4<_QV1[kN
%U0>5Yg@F+Ph(o<cYAY\V2d&B/0NH11FU*r.Q-tsJjGU6d*)C,U]DE<NQ"$PnRDWH,6F$nCdN/koLD:-'qU`R\al)_a*0N>&RMQLa
%/+8pqeb6j]k:386_XXWq@O2gMJ[jOdquq\TRd\)'k!`3>R0*%rnFp3@NA$jH0S:V1;EkXN8KPSd31jM63&L@@.ANs+EeZF\Q[M=,
%d3\*2AGF$'Hf/Q%G%rSYZDh!FnS,K7`U?Qd*;?e]`sFu#U*5<NGj=DSjm_"<ATnULW;)?;ZKAZD1igo*2[%0TKi'7E=g@'B/Xo7i
%W')k)L2>H#AP^3laFlmY&aS-,3t(WUP^E\%/l1VA/,+22"#l4>_4@QPDWJl`E,k<#=!UUEQN>[9q=MP;0"Qe*-dlo[L=,=8KMUHP
%2ZZ:,XXGJWRSUn/.l>/O9<KAWf?F5Z$CR0q!)TqI=;;LXS10]2f]],I\pDjI%,<X7%AAp>9Dh,.0_L]<YZ5I&c3f@G)2^;".>A'n
%'"3:UkC*lCH=l?f$7#9do<8P&kQETN'Ear+O)@=)EK0DQk48;eXX(#nF9.8sJ#8&<c*HX\>1B5h4/4l:_\_Mle093sF]BZ(*D=Y%
%214R0"O)^gQ8_0rks*M:fN!?<S6uC=5`M#Td,MPTrPbP*Hg]"dL3^_,nBEStJk`a#Rl<[Z75%J\S#o#G+M0`u]qcQ]`Kcu6fipmL
%g.e6!HYRT3B+^'6otX=6@V3*m.":/6g<k\#i/Jo:pK"eGht95YAh/4A#TbQNHZNMb(T0=pZY]@A/p?N'QG,e0UXr()VPW'Pmeld$
%dT"Y4BTTM>5U=O/2?%:9Sp+A0*-9S3>-2eVX8q]LS66pbi,@Y!+u=qG-u(f9*E%Z.>0i"50V?7[:Ob=PKV<p4[r^Xg'h_'II3>gD
%cJ>^FHG[337VH<oYB0RdbbC<HC^\I1Ndt?'2tW;M7N$uuEZR_8_oX?i;OinUbG(LK04D#^)S]M@ml1seVTC15-ec#!aW,EcR,.a^
%_ur:]E4qfL?UY&UK1AkGf"uS4==c#eTpc!hRZ3/u>sb.X_5ofkG3@J8#8))J)oo!=WG4K/H`c]&F(JHrFlB8Va``L(VX(]@:<?_F
%X*)?a]:/btW47[3:*ZQiXHY^.'XkD&7+*`b+U>ht:W^U)FrF+.TZ\kApTGZG64Tf@WTSF?_4[+JZFrSJ\c=!nj"(767!33XEOHEV
%:&ac"L\XnhCHn9#/K_<Tqt.s@nc&BI;BtJ>Y%M0J$T+L1ZgtmEGJ_S0&`U_Q<L@>B]K:&X]J;O0ppL;kE5s)HFi<m;?KYCGg6(>'
%=u;7Q]'MfDiS@5o-M^=UW%4sQb*Vm^5"C!!a`JN.KK$m_e*kc(7ddl;bTPf%b^JqbPtJa'_:nTuWuM@sHM=#WV3eSn-#7WDT4P.r
%gD"*6LkG]smIS#Wq8N\oW.q+mI+oEJT.sR"4>f!oX>'N,)$(bK!/-"VQe-s\5LMs88&JI#q;I1<p1V%/q$?gg&Hmh3&p_9gdqnm'
%DT;$`lk=qfC9(^qIE6OL7M5RH4D"(W6]=c'\k&[l^_`hC@+ktIA0*O7iO_0"Be<ZpcDRs`@_FBa\nHGPZkASj63Ca^&RFj:;'d;3
%aOE'Vdk@kC?K@#=[5+e7%^<X:Y?S0VUCn]MnpAi_20-'NEUL%lTjGGiJ_Rk]&jYkrAR0W2,nn0:TUZ@Vn6_<$VE;Z1OV#__@ock^
%ju".7*QsZjltS7t)WbKePtf1+X`<W7I\LPF5et%jBnRofjM:J/##;m`=IHQbiCC>'-R\$'%"E6TrKMKaVj&UBRn4p_Ru0l-^UVL%
%9%!?j:?rDkPA=cb.me[q?30i,\o;[$l7ep!=R_0o8J_Ckd+G)h'/*;20r4;pOZKn@?mrkmGn:_gK,rNLh5!J8#S['+W*i]A;Xm]U
%6%fQ_&ffAiLVc>'E8X<M14rCb'9rF.>;PZuCoJS@5OXW\+$NRkn-*^^\@0a[.3j's.@9s2VZi<<VbG=,rSfW1k.:?:-c^0!mdsa+
%pW4(:l1uc&d>'LUT05Pk$nU&=l)_u-G28@[)Aq9ee.n?bp:U#/m=DmKM_A0.[+2XkC!nN3/:fYs4(gKSA;"H`Sb:k[rDV>Q5\Ee1
%Jm3nAdm'NS[!87oObPn=bRoBY1;6_7JX`QAH&T#<!L]>pqW\+icEq7]*V\L@4rcN$28&SF-aQ!D=+@cVn1Q$@J_aBK;%pVdc/ajk
%`]1$(OV;CoeVpF/&g@oL"Nf/T:o8uRpl4`IX]A(&#`=G@7CV89KB@9THcg<eX#_,SXObcN]j/7Qb:[uq>GS5`[&VN_#6ZWmFV=T>
%##*pmGRuGA"X>M@%\O$6PlN`24U<^_,\kIoop`j*?C/E+(q<55STJt?@^t=!=EjCtk2pR27b/=dnO/Y9&Ap:ILmEbdS3RV4Ot),4
%e79&MP$f/.o&tYFi5dPNW`4;MI_2<\>HlEM\ec.S:+<XnI//MCRqlGIe@ko\^-b03gB_b"6^.;4CnPidHE:p`@d@WskM):f9_bn^
%2sa1)V.\miY7^9(PuJ2Ej8q&D#V332<842V'B);4dl$&4hm#$MeOLSM^^Y61+RA]CU]'it4KM>n+[o9l@,#CKl-%LuJ'EZDApK38
%iQ10ka%@pA4"EP0B!kT#_O'q4U0MHia0H>>(\uJjrlN7X9G)_W8;GWa82\WHI@90LU&lbWU7H@!Db?%fo1I;2niL;co"3(ebd^uC
%:D_2l]OD43hCZ5eh()=d>,?cQ'<!(K^dAqj^'=)**-W%]h6AXL'bJ7K=6OS'd:8mVjd*onjI*^"5qT2nK9rk(+]+M5+-pMJM3?<+
%jOpF/\.)(96'T/!+gI$+>2?HmL\d9Cd!XX`R70\QHe#me'es![Fpb?r+JnBk78KBdqKd4WEpcI&AV(L+c!+0O0=L7iS7NA7gKq4W
%NnJ40WH?bddXuh93a@@>k`oGC(%J0+X%>J'LI-f/F+t<4eK>@aPuj94W$t<oTfZ*[,`hYA[]D8?i%7JK,Sb3D^JZS\-3CC)=Q,cA
%c$LDke3/c$p4Gns2k_UV72h;Ek@,9$P(lbaJsg6gZPp$TGY$=UH;/Ue<\/l6kt?MPY<!()%JeVj[L+egj-B*B_koJSm/]hD"6mkr
%:q"uocA(K"$L,uGN:<VQHOoh5$B*E__s57o>1L*bk1KC8eh4?Qoq-3hR0KDMMURDS"*M:KZaa<U"kalSiAWCF)@.F\k$RU)QPgJV
%5@['b,'L@KEB3L[i9ED&qDN?6jn1IBQq/k6&QZmuB_^$54FAjF@QLagkWrlWdQHkVDX,$=['OKo4?8'(k_tW.J4'$$8#nAXRum;9
%O%>]kPi$*$2aC[7/<*&l@LK>%KpntmNZ5i1(q/"BPSm(ML%f\;W,h(VgJk,gl.+$QL3GWlL?4Y8"@1sXL9aOD7Wkg-oZJd`i"7Yt
%dUFG"n)`8'N4#uBL9R&S:YLrk#sG#_k1kJ6I&h?q>>:2CV.f/D4fpM);:HCT0UZ&J/YC@Y;M\bVUcO&HdrDq2.t/MXE!F&/+LkGY
%F\a1:.PBE[(-b9]W\9*F<N!c9i.&_$-4&9BdO?dbT%Ke2B.NcC:FZL.YH`<DF+bD5GUrO^,jH";\?Yq!O-83',Aa]^BQ5k%[n?b]
%c'Q:4SBn6j7c<$40F>qhXDlUUqL(tb/r0?qMnZh*Qunm*%)!U:Yd$c(GrCoBg<,\jn.*^*L+$*D-dJ+9l^mOc#UPBH9hMsmk(dCm
%mZ7`]Zjs(I/u'N]eoOsPMYFcj`pLq+a>PEYUBjHBi"@6eZL^R.&YW(5m[H2TZ702N]UI-g-'Vp=emL&eK;OX;VNXS)_Q_Ri4,(K5
%[6rc(^9#Gj0=$GSW_mn%!C^F;PWb=GXjC/%fll+LIEB1.(47e!4&DKJa_6EQdB^*rZ@bZ(HTN_`Ob-sV&R&U1XKfV_*`3c7FI:tj
%.<V@o!`C8'7/QO0&Z)4=eS(+c@T_\NXiKm:`c$-2QCJr`4RneT=j?_qQ,9ss/WLU`DEpM]`u$TRGT"HO_I=2PH!b6'ch)P[$0)n3
%,u:r.a9KID5c'`F@WI/)MJ+Go:LHnn7,bFWa)*C)8W9,*CoS8i$92VLUsh'/6=X:a,ERWi<hq:NXZjpM7$J0al"K]#9ujg*DsVRp
%UrQ"`@<5j%Mq_:,)S;?BiV[FriS7/Mch+GU9hJi44O%Mf+og$[*u.b6h(u>JHJri&<,jnXBer/D_XbD(\7P?OQFte]Lomu5'+IYa
%0u>S2-T$c\c*\uk=(jZ$4e"*H[P4Sl=sTs[7)D%6n#GrS>C1^!W6/;aiG0_(Ff:QC*p"L[qNZK1;;C6:h>I9#dP=OX"kqe???OC3
%-&FE/Mp*Y"]9\Q)_"t@gUP1uNJ:fhJHO3q508i1l)05/9_2o2[Arq*dU(E.9/B>VkmjY_A#p2YWE]a#m2+%Vl_ilL@7Cth!Oi>rN
%&PY-Q\s9!4Y?R^Rq77<@'lS@,Mc)Y%]9W9M+d<h_;HE]b/,fmlLK]o_)'M)Ui`9;k;f31uAXqs1eD:;CB3aU2<qp6I[8>X17;)\(
%>D3:.r7#d?35h+V0+(ab3?A;_4q]q0X7,o,!L+t0c2$cJ&L4#&6NrR!HRe=i1mh\a9lG#rUY1-]cf>sFQ)GDUSD,PN:hE)\e?sL+
%!hffqNsl+=rGKg.M4G*P`G%5HqQAG_F4*umNR[!U<;F9&6qA5\``4(r<o9-0oU$a>h(#0s1:N;Xf'UNK`9U12UE(:LbCOXOG%7L6
%hJk+*TPbXJClKWoLZTIc2R#s/EctqklkUUZEGr7Oc'$[Ub)Zu"[-hc$KDBfD"f-?@]D34ha'>3c(5k\C>$#<0#"^lmim<j*8rhM0
%OqUHMCZc!;<g:;Lm/RbFg<1ujAXi.UE:_;H)q/pV19[.rlpq95B_fsAfP%[^&ehcSOH6bV/L.8RV@er]P+?6dRsU3!K%0cB;Qr]Z
%rp(]Vj-6I1[^b[.'_eFQMQsoYX&\&<TK5gu1;C+?lD'uj+6r8,c57g]0)N4#0#94P_LoCEhRP"7@k4K'GL!k,1s8`0BJ9Yk\<P7Y
%=JQQA<KflrWqV*g3!(mkrq``<+K9j]ANYoD.YII.8P0RdC,B?J7<kA/'=pZd_F_@op]=`?]%?'q:1S=ckXU"o&qq6k@p"C97tB%X
%cDL7GiJQqpnr\V_6knWq[N%$CJiY83<KF`-h!-2_^'8]cdb5C;`)<mKb"gk/=:pEj^JEY;CT;%.Y-65ERsL$3F7f!nWHm@"QRtD=
%Wk2"S-S5>HSG&?>[rBbuH"2M@aKQB[:U[(lf3uT0g.\m`^9ncL"EHJLDmkj]\PhR,T\"&p/".(g_nLGQ3mI?moY'_7$FCj<VD/nA
%fnA+gq!L.c0/t)AGRE.J&C8`_[dB92fJ94WDHu!P;\kN!D4T%iV+eOIZ1V*gM6q2hcA/Mn+HD<ZnmZ+$A`KpM$%%_7/$ei!=/tH)
%USps=YM/cjhC,SPs0b9EMc?E]pGa%$:XP9YNBZ-HHD1CBjQHX/.3!H%$`=%+f<3BCCP&XZg]!;#Ydl%P!3\-;ELPHR2d"_%1WnU:
%?;%Ai2)]U5.Q/,7cG+V.%%l38H;Z+!"aE?i(&MbR<a`iM:U$5A#Vs^D((W%MOK8`j7C$\]>[0RS[2Pke<kPB31epJaa:dT^\p_OB
%K2*V.?`p1ng]ZJqe[]E5?90[ME>j_]9D0g2pr3RRf*7<N30r'RO<H#)6pnp7K#^]08B?\9ho9Et:?>s^dM>se)-*EfMsp$ba7&G<
%^j,Bi]>fF;NtL42ECofMWj+h?'nH"F7E$6Un_V=UY.\p+Y_m'3BWQS<@im<9qHP6"8WLL](B@NY`Y*!G`&pq,1fI8p3^QjR4%X$n
%OebGef+Ubm4qHcE]+>$u&;j'PP8=IPLb+&f2)ajIKO)-V%s9FOTe:lL&aYZ3PI6s86"H-O6-.Vu0-(rUJ7TB&Z&"jk#';L!916Ic
%HcL6ao(<e#(F@p7E,TeImD%[K)F](;R6Cc,b"f'29Wlm_;d_%CQA1b(ohVE-);<KO>r:JjcDt^TEK<'hNojs0,<j1d5+&P:>n@D"
%GP5?d@/Q;/-"\5RK=p8MXE/(W#RlC-D8r)6Z7X@hV3=F"GY(`qQZiEBr"N3)-FZZ,"4;)SD3L*(PR6U9\8,1*!L9>dX*rXFnU7BA
%h('ZU7.=X\?Kcht(<DSEVZMH.XYE3f>U5ct;<:Ob&*lt13CQA-O]1DPTMlR4%\9</]Jd#!$O'2\S!lXHOL@8qL`6SZY&o-nZ:,o<
%6b(>*+WN(O-R+cB8Z:7@7:p[Rfepd1k3@4n6PgEB2F-,QCp@ek`/=+-EAe?rhYFmm2TqDR!$o1X8lo0CpUjM+QDaSpW_.QJiaFj"
%Btu8E/$?*E2Hu*><7PQM9,C.T9cA5H]9hsReBXVsbB>Njik3bcOMrA:Mkdk?j&-JLqf[+r92t6QD,*WOd/r?E=*<G#oC-AGXG@!8
%6=\$NOhgXVGLf:o@EY1JA=qAD/(mg/US;3@;k:<lg*C3eI#mF_h-CoBE^mRF`#h_-o.CF!O2]e/%<d?NoTZ>`?Bpb2/pYSc;]$*4
%",Xrb-rIGP>N=Y/Dl+54DUHll'oWtbHmDk/#[#%G6!iR5P]O%0TPq2;g6E'+=iAo#6EWL+hq0[OF<b'sVue?D93atJ%$?&VOE?@*
%F=Rjf[W#]+(nO^Y!F[NdKA%&1r2?Pc`q`MMqe3-,21X,V2KDZJ+OB9r[;dCZURsW%KqXW]S4gU>TO3]?llP#mVWN0eSp:%')%Eh@
%S:uH!YAZ$rOZ3N4OTb[ZV+m/jGc`H:A55UC<#`>*<N6nK)fKF^X&oeC!4"`T95?;CRBo>JV3-g%V_k$b?mJ"rfS&LA6j0j%"U3:s
%aZ,/`KE9+ql#,1F`TUeb/IkO#]$)M-KPVqNVK8bqOI&pME]#erEk?l,N-4L!l#RUc5rub*Joa=)WpD*[fMp+KlB414Gkp.=.]!27
%pMK4H<G@8-Ur,[^!=6o%&UrSJ5`bN$0:<&X+^XReG@RS,#]V#%>t#%^PgFP>0d<?4,HW5FNNCB<+=Fq$I\8=i,AK?__AN@=Eg<Tu
%=cud=eg0RS.)k"[V+$j;LCpSZH[II;$Q?RTpSialdrc#4l0]EH5nXuk\4(bZ772bd6`WIj@\*""R--A*\tXuM9%-`Ha@'9g9KO#M
%4Vm$,+hR[$@&=(j]c?Q"Yg'Y$Z/'W;8!bVPh\!84#/%*"4k#ZBZ@eYKQURQli?b4?L)--]F8!8I!Z7kR1+n#U\;8#HVHH9@'0iS"
%SB,8H]A#'EKQ+(^WuC>ed>Rg[d2^W\4f!5AV8M2/*ZLboRdX!#SqmWdce[8#oLQ:o,g((;Z.GC)3<M).gmpnBXYPm4@W;u71ju<?
%.qVqW#)-HRk!#!:]HWKH\`T#Ph^CHe!DMX<!bM_k(;5?2Xjsp%kkB2;$R8W[]AEo9NP^;!cR:e(=m^3UC'P/tg";P/J0C1pVN%Bl
%e+2MGX?Enu:rAS*,SPG)YD]8Q5./R*Hju?%V63[d[k,'Yg=8l_JYMs71gfp&e-^B/R]l;=B>i>`16e<2pTAKoS4`H[gm1=m[@2?B
%_l"A8(E!)FQH37s#I1#FbbE_BmLQT8R!2i<GWmnD06@3[[[iZX-/+rQM,D-q:5o$".o>n7q->@2bV(QNbFHlb&1\/oof!qS.Y/Y#
%o5c#R:C0>'*-*XPe$iOA`K,K;kiQ;]OeH0aHP4H"&/U".TpKG_U!YOq:^mfS81n0[lL*)Qdhg@Z!(#aJ;a_oe?Kg50/V5s+h+acR
%fm^*,bs>qq>01Nem>6'f]-84Je.;+;AV=UB.tD1&gGKTnpG_6]ghLQoc)Un?W(LH-AQ2TOn_'6=d0JYj##r+Jm>G1PZV_9f[@E3[
%TT01``Z\f2#R[r'(!$o=40EX<Km6EkMlb0HJ5n#C5W"Xt5EbltkIGq?2uFsFp.eoIUE_u8fbqLe>(.-fFl4!9@Y3]jEu@7`L8s'.
%;j9V'O&jF[T3'N'(=OXNi2e&/;O-G9bYX?ZC+RF_mo9BJ\rjgio;5sIMH!fI>td<?&dtWC+LR`X9`[)VlI[Ji'pMg^!unpUigFn8
%F!02B6Cg<G'd+tKMQG7ogP$CrEMM0??YZTFOA(HRaHdX#Y05)nM2""EHP?ujlN5,.gE;sUDR:;U5t8q'+3klbmrC2$,FYNdm7'?P
%X7N3]IgKYfiVa&]8dc+@@V;GVEIg1Xfl0G@1@2n-F8?Y(4%Moop(r:*7g)jOO*Y@%kOFV#5AF%KAV;t-jX@aZX*9ut3)M+K*Or/:
%Hi@^+4EK//o%!,q?)/aWQ6kO$9d_YdL7!7uhH+$5Q=shM%*1p.kPuZ%jbr<']&2WU94,g,!qVfABqd3ieZo0QoYcV^+IA2P=ref$
%2WAj<%8mP0fGR!+F'nujiKiR:kM1H!1MBEnQH1ZAB3NS(lOc?\UK<MI67@tPd@)D#k'MuF#=cdMC2QO`'Qg$tg3OM?KBkK5Iu_Xf
%!171!\TRQN2GkFO<'9/S"fT8UZpJr8Jht1UjHE)4p<8Y%#:C6N9\YQ'Y<nc%C[q)FaKk=f/0g[:bbtrklF(shJr8\eIt@al\cQin
%W%_1$q_cBLL+?_]+ug"Zc3tmKPca7<q)m0f:6$%i>G`",iOgn^\s.<3G*a6\+^:s2>Lt_qNLi:?V:P/2=gbhY91>cbfOl!!k4KU\
%P+aOH2WPK>>,C+N:oikX8sFBCeMVnLheU:cS($b!.D+c23+h)fEVlmC6r&?6n9C!nO/t([O/D5g(PJ09db)2`@7>lO"g/)@]A!6f
%E//@&kcuIu9KhgTXk=.<1se+T/65aT^2OCd=U8:]g6;O';BZ_H.H].(:3m@n<#BfYm9h!-LOWqNcKK`CJe1)uEOEGgnN.oK?T`SD
%]@lkZ-Im=T!=7q6^B2j?fA?U(oBS%12>d'U^l%^CYB^d]qi1&1r.-MQj7f>+V!cU]lmK]Cp>2Ct^\l.Pr:1qYr\lKZp>XDJnNUgb
%`IE.&=4b,Mcfl7t`Rc3ge'Ip'Vjd-?mMO1knm@hc0YEJj$orM=\E%A"=O8.m!N2e3b7LmK3+8.M`YBs9qheR1`4b^)TcXD>Uj7-9
%KDHInL:Io7:!38Y4rEntmAB3".f.>2i/8#)U-SrGhe69@i]-.W#-DfrZ"24LQ*gO"[H*\fR9a()!6@pB.e2V9Mr=%\@,WAA[F;]h
%OaunC&nb8t98,^Vdu8:/kpIn0a[?2$1rs58EOQ:UErrTV#<>06<YWQfKN.:thNjFD2(i,8TU(iR>V+YB\leG,o*&\^6mf#Z1OeTX
%"6cn-'tc6YY<s[5759.>/!.id/e]MtopM?(gRaleCtWp<Qt2$q-ci2bNgL<uE,)%F/oK%a8W<7eV[(->LCYsKeL-VXVe>s"h:,S<
%26o3lQaiSObq+Polk1EbAcs'UcR%t^&H3ql3Rf=<+Wp%tB$Htrk$mkmc[P\p1SoOq8,;b\kN/Ne;JA\Pa6hk@+K+KkDA>Zb(<_Fp
%<nUa[lejf'?Q'`4r&LdZ;DdW$HLT+=iuWU)(qaja]]VZW_^BrVFn+LQH2RH(+2nN\]WZUI9C&LXC(uJSJ"n2G<1V#$%InYdh?*"B
%=frO&c)^sSYr9*L,,&"i^?#8gJb715$Z]J(fLpMWm\e?_kp$BW;IOi#fA)!W21sbh\QO%p1umOi]H]&<Gj)-d=;=j>>I7>uT+.F,
%$mK&#*e=qgPcDJ.#sn^J&#I!.8H%[-T,muPh2E>=@$=K=/6HMN0Yu1iKCNVW^\OgjGe%@WCa<U09'8)D;ARuabTaR5WGAlR)D%Hg
%`+<L!0IEd?@(h'ta=&iOi3nb?nEDanUK*Rec:)u7>YI)Gi@*.f3QUpQ0qC,2(@UoM`sVHlmFJDA,5ClKn)[;6V-p>N<,d$2Z8u8[
%Q)Q6)RM*PUjqVA:aH,o=@,8&5Xs9@'!U!SDDU@#LC>JD\f@oaN7uc4eSXp9Wp:LO\.Nbn1ai?=ldf8!\+f2jQZ'X"/ZJ#UsY+`i+
%?kPYJ<.4a(?aLKIW']1raN8(7]2"WF/u<q4@bScN'hT$lYiE-"S"27FI.VN/KjdGEDd(=]9^Ze0B+qS$_=?L?[I;>Y1^Cl!ht[&I
%N_/#"\jj3o3`\$..6D<h[I'n6"%VR]G;0YjN2;[4P%?C^5m3<)F`cFR/auXd^iAs.<6jasa%@;g0-t"K26l*6OWqOk3;iYYNmCA'
%<???s[u,NsbP=d-A@h:N'H"55QT2L[JdbUG>9*q52;7>VdHUt7!5u?:1\7k7rje?];lRmBXeZ/?fqI))pod"Hbl<3=aof$:[eaR%
%MR;$CM[W(BZ.*g)e0_529I72`3jKMH=)#MZRYdtmPAKV,^YYGAD_CSXdVLX27u-L:qg4)2Y1e[5Q4W<"MOJ#39V+_LGf1E=LfZO]
%_,A_tPOn3tIoHGI"oHCqCeo`%nn)0f]T>rK&?&R.ci^u^:ghY^E+s*f>MYDK%U.QZY,E"9ShPK2dsJbYAS8%Dh%nP(eEFWuAYZrM
%8+it#eQH-O-c?]TWb\U4D#)TP?9/0uM=[m^m$O4G:]TAD^#+5>ZINT)Qo?V0a5b>b5'_gbMa)WK\bK)n=kA,n3-4b*N:c.Ks6cZE
%kN<<I"#d0W.]^%Q%s'6CdQEs;8,cMEF3XehU<;=c7W@'(-kq.XaX57HbucEh:&X3\L7V5a%u(cYH&`T"<(^&oC1btt'XZ\*`6ECf
%R)36*apTW?pb(hDa\;$P0=SMqQHKWESC]8lI/qW93Q;LXWd*SIchZeZT3$@G*(Q\74M[OO>K_T;V!'9KKo=(ir5D?],iQ2(=A]jU
%8/8@^17BXS#;qtgOD#Jd+Nq/'//(i,e$.B("H<2(LXQQ44?.\CGge^#aV</88dQo0:$N`+<AcA-!od>L'`'3W\DeDpBP?@EO-0p>
%_7<&,=>_-*Mm:=h$:4c/;Q*SuB@pc^m^WG)VaET?kgMaU4fU'EoYr7sY,N'0'd,5rkfp.>DrKBu&No/h>t8Rc=.p4/$^1,0peSik
%;FGWb!6HOA[\>?+=`R6J-L:6sQ=VqnX'LqN.QiQ_RM"9]0Gn9[fYi>O[7T?#ip8u8&0+D[iD_?@_CNPMN:f&.,T2?MalC@8%tE/m
%rF;DP(mC\?"&,MB0]`jN92T@dki)KR%X?>#:W<7_M)+>p(?+OiErmdI6C>]\RM-EqWCCh9eu!-`PpRJ3E\EI]fNFK+5]aH(Kt&]5
%/NPTfa^+K'GN@ao21%+G3:AJ7b^pqUU40k8LpNkH>*%DP_^_f&:aV_'].>i&8qG3ApK3C.ahqF#1c9fZj^fuT?(AJdYHK<]WnNl9
%\(71%>&:5)gjm`aA!V1#R^!cFW8eSrlS%'[DDZULAQooP%OY=Inaf>C0JttHTZWMEc8gYY;-CetQGFraFT1oOebb>o:L8:OI%Ie=
%Gf3Ms+4#2so$]Cd[K*L$4E1Z?ja5E"<1*0=Q_>22V_5nP:8%+p_+=/1$d&aN\CF;]/+I:!i#0L8G"i;ASg/3g$Ji-3jdcL;CQBHt
%5QV@:"SgRKV(iXi-tC2`R>KKef#:i:AA'BIOn_!0,o5S]F%>h2g6(>B6Xc`Up.&`3-0qUcnM(=BMHUKK1cZ=?;d>bL/R+D*o'WtO
%Df"n\116,Y.k7Qj?.\ZsLc8"I%aIdgr0O],-2CMtGKG6X@@c`-"bbF(K8<tuKKc6o\9W[^U[_K6`!Jl<81bTMi#!gKs4/]K0QHl+
%P81q;lAeI)kn9mq+Z=3DFkbEJ?=P?H]eIWo.oVtNW)-MQff5T72brW='p+l3*0Hui^`Dfqb;GlKU5(Ogj*#1Fbj^EKKls=^h,]ju
%)K?1RC?g4`iM7m2kU8T-;>Wa`kipLh#l[`iO@!B:55dk7pb+i]=@?a+osB5EpYUGuh2=MtqH#oYg#%8Qh66hN2rFW$B4$)arGTIL
%iLaT-J7HHEG]`%sqY""jr%GgE$SV0=,j793hZ(rPN,,W;rPr:FqOME9qt2oJn,N15Dnc1t:Hs6^s8B!*rq9^Y1(<ejNZVPM(>rPL
%s3KSnVl#5NrmtM*qqll"oaeh9UauK=qd7'_h=WWis8KKG?2!mYJ+_Q'IJr"%q7Eh[q8:hAT0`<(?hNtk^]4#BrQEgmb2^58iTjR[
%M*JcNLc;ck>IXO.YJ:,!GMiDhG@/,]p-"I"O8B5%m29r2TF7P8n:G_Q6l3t7(%B.gaCYuEXjN/c7`o476C&&\KV!?,)4W-J8V!>=
%I!uG7h%*aXa42Ic[aG.j)3H8.\2`fdS/dls)Gu)%H13a=)hsT3@Qh3iQ*CgX/kcnkDMP%:*W[t$PB(!H[aY>6m$R9QW1$!p&^-eN
%=_Ncq[[arN8NZB#758Paq'O+`-3K0"j+tVZO+<Rabg(i<s+io6fh,KKanefWo/eW'.e5"2k`Pq7/5<JUp5CN;AcEIno%%cpr;UfI
%5?M4bf`UqI,d',5%L@3T!)k8:fl82_,3iscL='Xs)DROh1EZP]l"WoLX\L&b#7k*3KM?SY=D:Ueb$IVB@]Cg`/2*Q3f;=CXKYBd.
%k]CAG`tJHFP#ZXG\W!`+5&ZWElP/HWY1p7,,I1eOgtjSRJTlnf(!Sk2[R)=g(i:RiQMY]MfLf(EigN;-]=@)Vf$.ao\l'>[)k+r*
%<Fd:X472q=V<W@q.H1*r,8JZn##:,,gT88J7R)Nchj2k+Wuag9V_aps4_U*8aTkMNgdBq-`"FH&,so0W7W]=LOEO>GIbsY.Dk7%%
%La]@E9J"pA'./[pV?mLPJCc;\;3[BD*RN88b(jo:nOPdZ)?rr?4Wog;/GGe`k=H?CTq8E$`Yk(!_-"hE87BC.gu^b3e[]CN93bZo
%4>P'U+755P<Jc0:!8b*lc)sqgkkQ^(mZC8l4ss2Z#MOPT@ZIN,<Is!F1>gtWML?N'BITQIV8V.NG32CXUmO>'cQNrPR2qs_`\U?*
%Pheq2FGmXN<!UsJbN=eD\]7:gK.D'%`+`6CKhM@8@OY.%Q00_LJDi?F8al-52_$LL7V0Vt2lA9uI3_r/1UgoX1rEd'W<`s1\Q3(*
%c.L;T3?0T.he;D1U-t74cRHkXnahoD`AN%M,eAA3jW:_U_[')Nc^H$.cWoMoP4^+ZGTA;FJ4>RfY,/f)3AYmp)PV'2G_i@JA:h8;
%mFQigVZHZCDPo'ZeTWjsm1n)kH#)FC_+FCm7\V9^_RNPACT,nY!12$bm2X`$j5,u5PAGoA"%MFd?9!U3Y^gc@q'TLp's^!a_Q0!Y
%[5c(OS251ijF%fI#RhQN>9[,^^:d=6G9];,\#j2&ZmiZ9eAf-.00"mTA-nR7\DX10p*S1Saj.=&p9b*[33KUmVnmQka1kmPrkad6
%#bG`==<K_;D.c\_ZmgrMg&+\)gdMd7U#K%1WY7+]0Tm?tp<h&JYDN!qMZoHtAI&8hd=)!D`3VNH!P8:=8Od_Tn+7JK=dpm9UV:g)
%fb>&qg>N$>V%O)oV(F``S,%2Ne,`JP3r6rb6LLO%USfXlmm=4N3Z/Yh8h.&S;i;tkOg.+1i.bH_8#8n]a2LT,7J^mRQDE.JZUJe8
%YH_jL2%#6OZ+L[jG4Q4NKmd1VF`+/#.`hW8<a8Vm?9)h4)lmNcO]kcW69BI73s[V)a+;-rn`*W#&b;hg9'BHJe$0)A8kKTHY+]g!
%(DZGLmT(bLj-Fl4=f_@SArAZbUR^[d(1MI2Y%$L^!VG[hQ'NTamW*U@UH>MfX83VF?mr3FS6(Ub,TZ3>a*e.rII'i"80SS4b0Ng#
%A/u_\pm5Q,T4&?b%3&<3;m]ZJYd.V;;>T]UEOi6Jk9ZEnc#Vtq=C5^/[JLpU22lS.LmRFacpXHB4<Cen7./'bYttKA65eL!:J@`k
%;,t\90njs6ALtLjl,aS4Li8&/A6V*M%O!"5[?-A"B+Fu&F.u?ss3@+/--p7@;NLYmEJeOsbupbR.LS:BZ@%*?fZR<)5n;P4>h(f\
%D!m^0RCkl.lD]HJ`-M3Ybd`T^q9pp+)/QfQ$g,!dU`c30fX11BVoirrGRZAr[[-"f>T0`7kf@ja"1!=6)u@.]1<j$sG7=!n0M%;.
%?,VSR>XkrnPZ@%OB[XtW;p"I4#[?Z2!Jo)hB!=O*Q6!BA&s#n.n&F`-.2Y:224.MlCUo/>1BN,(icuS+j]N`>d$M=*Q40N>nDLP-
%HG79`_QsW28X4B75')M641=01c#ohZSVj"0lWljZ@fjc&!]tem."USfp*@E#:[Aqlman)u^e>A;OKWb-XWl(s%KMjg)eV(BEHeV`
%T\35%j<%!;AOQ<=(;Z&tbB"V&\PX1lV@fR9Q+=Kl;bA5CL6J^qBKBaRkRSK27$n%'[W2BD<fb[!P*J[6-^82qm8IYV#ON.E]TK*X
%=H#[8>''*L/g1,kk+#1eDm:;3o,gr10Ia-6hmCO_J:?0kHGbGF[V"SE^6NZL?Y?>.*TNiE5#dS^mULTKEcVo[\^Io"9VT=]'@;l3
%d&CpB*+MgnM7-)D_k+-T1?0doD>VE.e5</oV:U@P?9^^Q55qr6.pq\q.Ba<V4sCnbl-=^1oP*'@k$6Y25&Dl+S2h["P@+>t*hRe]
%4f)f:]",j(2p`W#h%Wd%q35.B<"X"c+Y/F"8_/hXM"&nB&/,aK\&:N43]sp;HG"njiB!G.6QAQ7SA>U-q?cBpk>k8E^S^3m%(sn&
%naqhQY'!6[JKjPQ^4F54cJ'99%Nmm<l*e9b2Tt%aT!+\AdT5s)M/&6r'eU\i$`qTjRG?LuPIEHgPqMqVA+l5+N@uTMKe:Xms&>WR
%F42SLUOqfPqe!M0P*$Pl`;YR1pu7'-q93XA-RBWroI5fHb%4m:)DR(9],qVI#rQ0EdW5an^]FP2"28"fM(VI.9&E%(F88S$V)nB$
%Xu8#I%e[:5MEm-`D)8)R6l._dI67_7S(j?$%WQ]1fC3,t3W.7Wh%L:pb*Ul&4A@W1VChsXiOW1ZV*+Uu%sjC3X<jiqZB6q2BdW.s
%jt;0c?cDMX4%/$,nP(Z(gk7&iKY:0%#?c1C>.D>La(lJa7Q0C^K]:I=<XP@VEN3n%;fY!NR2#XoSgLR\HXLE65lni1Y=R54Ko&Kc
%#0@9L5ja3nUO5.:@5:)#E?\(/R;#jS?V+U_)fu7W5bmI4OT@pV*>[oO\=f[QU,e+8;+EE%Zj]R':f5+m1tK2<RN/e5pR@":NM!(!
%(sCHD24!_[nhG[MR2d)2BbO[;qRKAQ5i3dDjjK%@K*;F*G]W3PJetD;^,iJZN&$4-7-=,>X+"d/"#",Oiq&<?7c]_!o[AjTGq@Hp
%>,ct6=EN`3lf#cRAou7I3NH4_5d4(B>M9/i=PgtsK+'9d%[F>RC3gI!rUr$G3o>gpN;'&3V5TP>Ke8='<+L2oHS:["\2F5am'7HW
%=kiI9UA,*2:anId03[0o5t14Q^Zn]6Q7ZKCc^,-XCJ`C4g6l$tY2Zn&j`6_5c8&<0(P#faKFYqVSfhPhrK8-%<=)/kT8'Op%:CRm
%=411)o+`Ma%j+)Bq/eIPeYqNqb,VDE_*"@f$pYI-LJa%NOgZLMXJ?ho@\t'Q%k=kXXGYOcdc91IplTZa!*fR^J$COB`;>]%BU9LQ
%#^SUIgFddrK*./OV&kHkYtiM:G_lG>Q?&hKL<>EI`jFt>KH2TY?9h6FDDK;n]L!D;AV_.RGX"$WjI&OGW'ImE3\]6nAS%f%X3i&f
%+"%:63/SS]U$5*M<hC\U662XG?'e^u[iPjU;"q$B)=`-8O=V[W-02e:f,)/Ta6u&DZG/rLrG]2Cl?p<Y#q:eCX(R94k[a?H0N__(
%>7:ssI\.[ddH`BmOgJ*+LZ?Ji6l@B*bZ^a2J>n=*"!@PCN8<4eZ!p<\5;dkgEckHOc[&6jq"p?_Yfm`YELl+TOg^rb?N\s2ftjn/
%oc*YF\7q9HFur0eeYj6g,0QR_rE9]r*Hc-pUHg:Hfn_XjdZnXoV#=Yr$"C/@>&Ja;]0TZ'$NA+=8L+>'#`dO$<u7<gDq=qJ'*C.E
%hIeff!c]"NK6m2ean1LZ(c6kY2&tkZkh3:@)LJoGNhCC0dVE9IB0]JnpSSgI]?5`)Z-:1LjVd,i5!)K]amW6So6/&BX].i56J8,W
%<ZE<S7='eoOOd"#5**uP2N5"pFpq"M&h8)c:n;p3)(O]OMuauZmQMC'g%--B;MF`XS]_C*bHD$mQHU&6Q+>dj3^k_frS?8rriG)6
%/u)\7]#U[0V8b-Y1Z&<!"q=>oZEiVT3(;D&:hJ:IkA`Peg*1;$eX7@"lZ)e+n)6B/fKOb!5!N'_3oBH;CEKg-Bu<'#jB.Jqn8klR
%LdI]:Q6k&aEE51b8YE5Ld<q^G:oqX^,hM,Q!B!6U(_g.mLb85_DUcN<[hhp-U8\PMX<1X:;DFsSrkb(pSS_W;kA%chhu#(L4;dH,
%K]]\'Wi%<EhTSoNN^#AT]GJ>6ERh5+[)X,oS""PEUq`]LW\b,Uh_aeM-5]4rl9*(S*P;V\e.L$$6!u[Z_I,2HTd6I7Oq.GQI2MgK
%<&dF<..)M#JZaTXD=JtF/CcaL&qH`RC$CjO^Dqf5fkR4=(^`9c,UV>aVrQ9=Mgu#C%V(+jdO/GkZt&i,JEn1(Q&U43;B[>E*JiiF
%[?jJF4-g,>6e5s.eNR4i/()\D?KKa]jC#P3i*B4JDUGj6[S;nP'HA0.O6eQ$9,]0cT#M&?*2."<QFd0>-r(P6!<JH!BX'qdC`Nj`
%7g?Da2^Yi=QXsBWr/tna#0OA(kFkU9,t-Q1N'])0Ro6"&0A/u)P?AkXe^@<h8K>@Fg>GC^D:^B29S]_7MtTGV6'b`fP2Q"+]T[$!
%/fDc7,p/A/P\DL%L3ZfjW\GUt?<jaMGL8.*&b"eGP4ibGd[VP^O&&#/#-9mFO\.usrC0hf6mZA$jaC[=ho!i1(TU)Z$@)5"DB8)d
%\nB3P.\,Qpes5\G^HNr+_QMnj\36(o*9Yqc%2DPPRMilOhd(sT(5`P)I:N^E:D>tkR:\C]Ju'CZ$\01&$CFQ4%K"'Um:7u(*qWW8
%8(C!o4mt[T_F-X?IVd3)Nua%2Uass-D-[T[l&>4Md@kK.:r-j-DO5X\rR8)S]ajRgmPioaqYtR4b-Zp3$W@&F+R[F%ZaqLF3'rk4
%,m,;t,-hSQ6#h"]Ma0I,JthqGKL44l<-HVJ"nVdn+l.?-k@q?#'G97Up'.GL8NCQK[[_)j`g#JX9P!:9)bI$b2g6WB!OosYY\_W^
%ZF(b,kShYgBZ,&N52A@dZ<L$S;oV'`3lUF'Me=/#a*mQ>RrO%eq5H,GcQju%-2A9`iJnOcr*!0q$L'efQ+IA9.%c^0?b?4p?tRq3
%Ts-jb5;$Ltd3#@W99i:3Yb\_e(GjDYHjHu'+%0h7]jg#Y'a6R<UR-%tT&M8WPG_H/jOI*cYnoqf:Z/>kBhMt]T@8k-1Io)LA9p/D
%_Yd5S-A!E/B_IUn%_`8,TJjhkBS"]c7cl;[e=dkk?]$kFS@t[=:\M?.@p;EkQISgO#hTZi$LA$7:Gk#m`i?hi'YgZ-_B*@hV<OIn
%D.tb#7.(Yac(.SnMXRIqM-ED6a?4)$6jS*e=^J?pa!oe1>QfrH%4^1#%FF>1fK2,(hOUl`:7ud<)6D1uKui2Q&5S?r<sH[:Er"B3
%b4<dgq3XZOcId)o/T@^FF7UA&JSlsi!^X)%&acXgVF>nm@\],;!)o\VOKJ#Sk"bHb.2;(o;nLZ9gJ>dP%"SGkWfb2bUi":eamhXL
%'mHTaeNe9CNn&8@9=0$/7?Q,Q[d-*SM*8nIea1Yj@uVu$75g2U517!RpCi_FV\Th`EsTDdlY-&kfB=rbF2fDNCVlZk8PFmm21Id)
%dZ?p-9C#&KOY#bt'G%G,/*t]%=c:d82fP%RRE\X1d"_+J38Dt)-ghSm$SriLl)nn^.<*@+m5H20gDV[qc(2T)@:b$5-&Qp=6W8FT
%SuXCH7CREJbF/$apCk7$mN*gl/mb+`Od4n[LTi&#A.k<nq!cfk0dJgW3B,!i0-roUZ\*Qmq(uXZNq4,^$lJDsceXd]:B2/QTe%=u
%%\$q\BSplD1M>%I-ra)bCsX)krCFP@c'$ejUH[rk`aV(c>At)t9DNB_nq4BM+e>5#>^C/]$>6pJNac4:3h^d,diOX"G-dFMAM2Q^
%65Ij'Hs+/.,:d2i/gWtkCq$5u28Odc0sZ6",I?4$M&F@Og#bcp'NTpGe7L,\JZ2t),P6=He"<D%]aLs8`!U1k7h0@$&W`IUfT>J7
%o:K'Pp['IO'mhrKna3ri@hp_77R5/9!4pArp=^I"EQIMn)cUEh$G3[HI&q)[G2RD-qV%r%b"EqM2F?$;n#Gn4gT"jA3ZCEs906KU
%>Xu&KM08Gbji#FtFW"jk=gdaZlLBO&b1NQ5p'f'k`S.m[6EHOr0@p0*;X[O-:"+57/9ttm3!N)4+ZX[U&lrMM+m`F0qZt^S0%i57
%$)ENTkQ(IYU`,<j3kn>uJ@G09`K^u97BQO]'9#4YoTI'um0%Bnp<FiqbL+ojJ2X]FVl#Fhc=Hi<C-=$EP,p160:<q><)YCb9Tc'N
%Gl=eFr.CGd4\/t/!;jCJ"VajGid&>>ji5n9Xj@`u-G:dr9!&q1oftNl,]053!ef!mh%qMA"EKU]_ln`S#%STk?ZVs;s.]mJG'tmd
%#PVXXkW<.*1mMbLR%Z2KIr)$h_cm3BHpnj,'!4Z6:5(UU=-=Rp=OB*\XDQ"2fLQ6'V9M*#6Z,"T>=p,=RR\.=D\Ui6q@D\PHIMu`
%^fSi/bWStL6^]*.U6C\?D\Ne:BITM,0,#fj_lAZ[O3@u)6V%t0`li&.P3"(tArVLEaD5*c1huTakmO=4NXHA;E=?@uJoYDh<]fAX
%bE4iM[Xrp4,+3cG9\KFU72Uc)Wb*h+s$"U8!*lPF6CPssap:[JN)/]-QDk+=/["*%#E+,]JC51ln#GunK]lpc(#_&DD%lkkE[YR5
%BT7f3Oc"Eo?:rMmWm50P[j+R;(u!5Z1<MmE'8sOTd-F#=&YV*j?OYYPi@b5>)M=uH(68TIJUepH2NaJ3d?\aBUK@bsO")oMQ6L4A
%O5?"=2QofoPs+]+9ZSt(IM8S+7"!O<('CBUa9J<07#-;s`(m--FuH\9:leMM.(?EIbUOe2h-j_pAccLG*EXQ)C0S?h>cYSb*ai0:
%,('\U!k^Vp+'b-IOJP-*>udRUY9d`ISo*5ta-hIU]F]$^<a\T_7p7/CKsTlF?=u8+O(7%ul9Ngu;cTfglV^9U3qAnMl1gp5hFqO_
%[1\<R:66A.?=fO(8Qak:NOa^'o2KtETP2\u*[L'p39@"%g\/T;M(#'7ML>e6Y:d:M"(eJn2aTpo<"]4@2$L%_TboZX%a+$RdiOW*
%8'/E&brN'i>j2Zf/aBs+$2@mK&Q#f\.Wc5/.uF%K4f+23d!t42+%"mDO>#E03sNlunG9\U%o/Nu:6R"1i?BAWVR<pk5]baO3BL\e
%Ts['d!$>?Qq,1c#h\&d#>`W_;R4d^sBVrngfb&:)4mpJF+sc,ol<Grq(N:W?Fks&00@g>^+F*Qi"n[XQ$$'h/*KWYg<)nKbJW'8^
%o.F\M/#?0`U@$;e<J2;"pR&E]-1e5?_?q$+E-#L5ZlP-*MA,eAYRFJqh.6Ff+]4YTW>;m>dHTO_hP>m,!H#J24s'g/-h=e!B-Ffa
%kbVJHbAu9&k.;<L"%p>/S2$Z[bn38h@h@@1DcTBk'WEkI,6S9=eL4EB.O*LI-f@YOq?oK"D4)Plk^Hq-To><=c1Pr0c19VG7#;<)
%GYJ>f#0V[SUpcQQ@G[0oGg*flhX7"FY:J&_d^<M"X7W73XLkpnojL1P-erC...L)rb1>la>:Xt"!Wt36OFF)2\D2^rS1dfR3YcO5
%LQ%(7#9FB)2]mVIWljRcp,O6"s7jc%rKHauin*2s''.Z^.H3"A-V;Z^&#T^>WeV66CoU:'.fK(=:6pFO*_mN$Gs#M#TK[M@4p6c9
%\MJD=@^UY`Y?_,-(P3J$0@I1nq^?QLCPZe"@\^MaTjE0N41*ELWh"FiS(>)XD\Cff'*g4-!d3@:M\L+hT:rVC$/hAo\086^Tq1HO
%%?%4j=eTM9o5=a%Oo/e3[fPJJhj8nHi'f[B,d(kmfWf+,5Zm0b"lp53?@h$#QNOF;\KptdecUc7ds5aIj]Dd'gs0ng/u=*UG2ULr
%7ZjgH='Q*9Y:+Bu0/^:e8RqDB'^[h8Q[-S`*atZ&7g0HGhRG+)<kJ^S]3AV<<!S8K%[3cf'jji04[mEeVo`oq0b/I\m^Q[Bp'tNs
%C,No`b8r?jFO,CN"*lf8jD*)pi]tcOZ*bUap8qos_5cbG[2JOn^PUK#LFkOg)YeYcNHi\T+<]Q6CC>L@'WUqj,LGZWh:D0T`dtqX
%R'*j9e;RgOrE:VU`lr6F8bEE\#Zgl>Erc#CeKC<KCS*Hpm'88i=d+e2PeQPjUpFM;b47[)$3O-50c`o0#jMh$G\#aYO1t>$@&i$"
%I=c)Iff7/ojF-GLoaF.@lX'58^\\m%"6B#RB.li)p@s;NJG1hfj]:M)F!Iak%DWC35ffVj(mWNq^P+!fM]jY7$)Nr?CL$W0[9A2l
%i9b+FXK1_Aro(oi?gg3j5M'k#"&BRn%?B#s`8UJfd0AUiP>lB]j+4Lq^H>*D"p<,6'Wt,[-`UE7j,$B0cZko4eK^ZaG[j::Uj>77
%BRJBS@$Md3A)5/`)[lCk:=`dDW0Lk<5".-F:d.<(CIXqnRq#_e5s**sq<@`9f&`)PoKAR+>t=qBQfVR:T<?IX5@(ks3MI<h)O>+3
%SA\0KNRt.oF"WI?I:3/oPb])a>h:aTeF1;ah55C6e/_Mf,QYU<l:g,JVSQ<A_@6"Ia>@c8rbo46lW!,KLKhc&g$6f2][\TC$-+\5
%f2^pZY-`;OQOKS>C?_u?r!Wbu9jp]76@J1Bd$i=\PA+7SnI*ki.u6V[/Ra]q"8%`N7;7+pJ)g;-/57^!k9riGkmliq;]Z[R5tS<C
%.dX9g^5oV!L5/962?e%(br%@foY<IWG^IdiSmilRWUq!aO#K+jZC%]0,o1MjEV*^A[J_[OrID'9RL/ig,HjYGiuC_N$\44@;8AXA
%r?)KA-jhP1&a:*bP53OlW15\7@g!j7R':W&dAN#)(Cpc8j0=NRpSF(G'"`D7jFFf>G^B"K#8;dgnJ(M[LQfXu5%C%kr6m$NWuk+P
%?i=rLpqtRXlbe&Go4I=G,&Y4fT+_Wp:eG0(27q4eS94mMLbSU):RbIrR&bh)P0cXkGpHCV3q)aEpgo7U?qR9r7V&)UWKBq@GV(\$
%If01#s#J?7Mop*P]h#OYB01o5$-PTPF33#l)D677l*4bDKs"_J/#UYU[^3fKnC:QoN*ahXISB]l0W>gf`Tac_V0V92HdlYc(?j2d
%]E(9AZ_+Gg\VBT!k`WQ]cNC<d4"FVXbke`9SQEr*-Hp_:/7M(C64L"15%3M.2+ogBlo`j"b[X\odT1X6U^fh<B*WHm`Tr=Gh?7!+
%+RX\CU!\M_E-ZiLKD`qMRc5'dGE*EUa&ofsYJSg^XHq&sl!>6=TAf77M^6Kk0kg@ZT`LtV455oC!O]=AeH&obUd[Q/'bhTl8[Km6
%A#*;@=Dkr.a0;T2_GAh;6E#U!m'PP&K6HW;7erFCeEIZ!mkcI3QZ-TXDmKE]c;`8SZK&P$SsZZda]9[D\*BSuWHe-"gkg0WQ/;6u
%ZJnU2W^X*;KN32N(.DtN)jV94%pP=GlT@J'IN#Doo97s]OJQ/.Dsj[YZ$kDKgR8=terSlL$o+C.N#o*QB3f>G*j59)L1jqdN-k<U
%Gf>"DXT%cI'rshe;R5hJ-`C02iG"0Mf"fa6XWI!hAK-\TMRncXH&BJh,G(iS5A"#Fc9D#2SDl]C3#:io['?4l1jp>Gq#l\Y-TjsJ
%lNpA9b-@b6UmGR>StMK]P<VVts3Xp0#Jq1IXeXd1;u@-Y?iTHXJ45lLC[4Y^3e^UqZO:dt[4h]D!BM)MRg4m^!6<Ecpi01Rp4sX=
%+_\#!nj1CpbP0)m47[,M-E<ek:c%8-2DgSa/qq>+*4cJ[5NFl@dT)Q++G[5ChC/<S;u.;U)?u(10D60r<f4D/*dl*hn+jng+7W9d
%.++"RPK;W'%k06Aa+O5[^O5eP02EG;Lep8P>5dQ>KDV7dIJMi]p:6sqH6:@X+$><3.;7&m9!(O-?dR7tiDJiacV%s_;hRrda@-K"
%DaDa$!n!jQF4:goQIX0Z!j8"YC'#T`?+N-$kSV84!Z,h?Fr,%5<'S]U>e>XID7E/$KINANN8nCf4DHYP-e7Vce3Op"Oq33@;@_sp
%8"tjL$Tn"o]#aVl255<r`,F-1J)2a%.")p&'jo36M@($<c*Uq>QVh'2N:BE46pG/KH1@5NpZp`9rO:\^qM/F,qb+,MO8V4?+U0aB
%)alU9'u0\cp6p4#H_q?$pNnNAMnpctZ(o(si]$[YQ@c*H^[Eb'bW"T'nX`D2ADO5'YjT/Da^a1u$p7H0msB[os7#ur5Q(K3^\lXN
%Ie0n<V8JnrfDj08If8*kIeu#:cPnhBrNC_Fr@b?=r:`Fkb>Wo_A+(A*+9,G,5PB<9ro)DZhnB&fI%,WL-f+EY5:c\s?b=A<9r=gI
%YC2>pl*K7ss+HfB5NPP\:OU.O'Ai66o-le!pHtO).I'LFr8Y[>(apIG+8X10%M2KJ5!20W?_24mW%.8p0qtk"i^(F;*Zl]uQR<b"
%+0[Ud:(-gbVo?EC(B;-//`*sErr'5!,FoS\apdXK5Fp_U?OF,"3X<dsUe+kfLEs<mdfV(e5BfGV%M]d#X?0@jpkrgMW,'T[6]qud
%.n(0H(50sV0UekR2ed4h!=U@p<O08j5Ec76,Yj\rBVO/&q4"eM']"(@hN5J5Q_t&&]DDb^8"dt1Surn4KBH.I9_@h3QKpR;-*0FN
%%h?,/P64@eI2GfMKss.Y^^o..I"Srg'H_EU\Z)UB]:sl/1f/lu!l3gYlFBUbG6R3#=;QNh[![aq8F2:>V%j8o!7WpbL;K>n]6*F+
%19t+F[;=N0/)*4.=eK!N#=ik4_b#=>p/RA!-/0;+\:LPc"mA(>loAuHlkXR-73OO#V%[r-(GE:5nV@Z)J4f=ccA->M&Y,"iZt;uS
%G/pP*2fS$LZ4h>`aRH'gT_/L0Qp$j+'V13HQ3(BjS\f?7!b/U(;.NDj:mGh;E-H5_&O#pI&#O1<pbk>]#L9s*?N$-#gnk]Og&]^f
%0uYsE/)_RfI[tB/2D+Q`4<C`ChDBi.ah9,qg-KN+b-Xu1pWYttfd-Y)a)$O`:A$7<a9A*Lm#>[C.SR(j7M$R9o$X"b+%GQTUeQ:n
%_.^Ye6)/(Y0Z\p'&f5K1jk:u56EtQh*AD`\oOK]e,&X**A;fX1&e^IR.4;?\k%l^&<;+o2G[;0_MYB_Ddp:+6amruoBhmi8VrF+'
%&FD5I9R#)a9_or=.7>t%WLd3CfdXf6#)oLG7g3Hje-^'r)t>r?n&Jt<'_#G.h#s!C0\J0^Bh^`u>T,BbR+30jIs'8uCLDeB,p!?n
%\U+VlP:njkpgXb2QZDj?L"tZ*/9!Y<L%0IilrA^HbF4m9faKIb^tFinY;&lu1>1O$U\be+(r4:PLSOY"'/`lAC@o]bZ/e8'$M\rA
%#&;kc`T,H8Fc0g2DOPq`%0sBG/Qtanj@"EdG@+KP'0pf#chA'(,+E*5ggYq3bQmhG?Z5;+.T]A*=uBCTr>!D^_t`17,D9p;KBAgr
%h&c-pV-/>EEp9GR2X./dF'H<-*.^C9VneM0X;5B?/1["Y`CU;VY:q:EN8h24-k$OW;sK#>nF,_B?L9f^YZV24BIb_#c7m,e&^AC&
%R)=5:.flQbUkk3h:?8GJ=B;4i1Tg8")c9Bt$"]9D!#6^8q3Dg/Lepo!MD*(n5&*aa'FQ=T[SJsRM2um?XgK2bTa8I^;3*a2Mt=6B
%B-!4,Aua-rYH&i7FsuqT%U2Gn7umlE\``34&UO/+pEHbnkje#je]:`HgoNDk=M`(76Un._-L_`D7&(iA!h+"I%*M/l&OGVk>4k1l
%(]Y_H9ic\X]<.j>fLX+75U?';\,p/RMrGYemDa;Fr_a-_fJg_S`V9&HB6"B'AtWoFQb\Cg(?+.S\-"U&!];$7TX+h:H9lt^gO/Vp
%T]:(i>URFAg#]cA,f8[cL8&X?-\ql4SgC?/k=\?F_Q1OZi\:iLM`GlE$^q'1m*F+s<YDR^UWIo?p$rMRMjT@=lE;!oUL(o[fg^6Q
%Ia.hq@Mn.V(3T?_:(tMf9ZOi/I-.aj<8=[LbG"3INnh'nCNd2qU>137_Y.OUN-lI+LO,)*#1Y9e;s^Qi$:/l#O?Ab['UrN_S'+*a
%gt+Rp/pk4ZT/t,?Z"oKaq[&V_Qm'5!,T*Wm[]am'j4J,nR`M2^34qtuY<+?*Kk15JbNcep?@qt!<:!cUWS$OE-,3dPkVQcl%4Mt-
%*fk_r17qc:d8rGJD*:,bHZeDop5\2[ckTSu\*QY%/2oGb*:0C&%dB)\ecdHRjZKhJ+[R@,EE7[.I1Hs9aj:'u8L]+*`p"h(;F9:%
%<:@^2&FHYF&"1=l3H>M6-V?_YL'VQ77$RP4ULLPY7,o;VN6BKShe#Y:elY7AIsko4MhU`MaV0J8Hn,J85-Ab%k3.P[36&!;b4@a2
%0PWMO"DO[0L**>%RWsBAnr`$dS71d(,B(TFEp!8oHufZ(j2"',p9fW\<(#'a&R^QfpL92h4O"j,A33XAEt-uKa5h$'AsJ+\EUP<l
%%8&0t#Oe40$`bD2[80FX!&guiT(7CGB7M+NI-nQu:2s;'VE#VX*;4O45-\F8aEu?LNl*NY8q!"mK]I4j(T9uO=IdA!53s7khL2Z_
%].DaSQF>/P#^<DBA'FKUnsNGSg_ful81Dl.hSDh6_K-K&@tc-eS0cP`4^?(SA!<#/+&(be/sY<S!-fB]9F<>''7pn:pFnf3a8HTu
%o@jF1U0%u_\qVL7*?9%DK'#Rnd-g2Mg"Dm.H(!Po>s)L,0#OCa%#Lg]9"-E4=1OXL[7$Yl9b9gubnW2uJpm3qL@&;$To_4B*,m35
%,2!0&&L2NKKklf"^-J1MEZNd)J!ATNRq[1"]9`L\aI3lZr:6_^Bdt,k((t97Li^I1k)Y8[pE-C-q<TR.;&8Z[FRY&]T+L[n4E4!C
%C%BB0'&B+N3\C3R:S4"F(Ok)fI&Kg(oC_U0\9!QPmS?0"Hn4DUQ86FA#GXDc[t\SF$+Gu.ejtG%mH>cgDokg?*)A_.)5+W\iW1VT
%>,brHT&f/r16_(g%:"iC@@\c0:CWWQm@#$r"_LWA&'#W^`NH6$Jn/?F-3Z!%"t5f<gIEe[^p1hsM_Z"'-[`n_4uWjb^e>O6f`a>S
%O`,lV,q,^\5?L_&+mc3k7C]ob`*t2HLPlbMHhFilYFmm;boiN[$&A<oE>A%i^g77[To8=.]Pl+_Et[MJ&7(0Beei?P4$9'Ek/B_2
%Nsmm5-GXj44UMHJ?Z0&6VgVN2O"E3K;V6;N=A\;:-7a]42"6Cg7][=:G#`n[@5&L7L95^YB4StK=`E_B3/ibZ!_]l,HeIcl]-5Ke
%iKi7![9>T^[B(G&>O2*qo*Y`f_rj/WrAbcF7:rG4O@>cc>_0c6li?hemlR#`bV$@Remb/KODaCF%$E`4,of:aiaNX'RO]&QM^a2^
%lqhcPpR83;.>*9R9YrON#Et;%31!:-\qpDi9bAQ\3OeLK/I0?q_W..4&_@a*qmL4'!o3E1iGuo`ql5KR*3<X1<!#1si`n0KjVI?*
%:g6C;r"@Utrt+j@liF7p2X_&hh)r3j=;)VC(2Uh.APg>K\]pYh'1#rXK#iEuQ-Z%]Jh:OqHc`.R5naaaV!Pj\0p5"L-[U'lEY@cH
%9Y([`PY5)Odd."FUHjY3Q8b39q;M1*%\mK_mLfQ1#+R.kkkRWA@,k)FM],*c]N5@r\g>5DQ=L*g0%hX#"MRmW5=<(_]Y!-"9AR@H
%MW1YW"<t);=,m+N-BM"\Wf!Qq/hBuI<k`.DNIsFnlk!&mZ0t8LTS"5#81Nf[LDS`2%12<;+fYk]Z'k8FX6D[L@u,FiXY:C17I7#k
%".Qsb(Glme>dBS_n>fk&GH=_,b!m2<]D;uDaV6:7Kd.Q%:-l=X+,QU'H!E(OVB)!UKBj-1<$SHtE/G1G8X*[felUN&4EVS.'rXoj
%)Y->E#6XnnX>Ku$>Bc>ijj0lhDuTA5rL4s3^0Ad&AMY#F9HM`.f'`.t%X$/_3Jb[jRf.?'DBjf]C^M<;^*&\8-]F?d-Xl]P.IYq#
%A3os/8l*1+b.9l^iIgL_+B9ghN\"<<V.-mW91BWeS9S!IW6Yk8furmo-l@Bi-,\GY4qJ2rN`!o%5:6II:"pi2e!(>:C?XW=?%b.u
%:s37XAAb(%^)bq"k'%FQJZ6$ljQ#'ej-34sUjW$7CdM`t`Tr?W\T5,_oNG:V/1;;\T!F.[rBQ,g].Ile6<-M4nMsmA277bKS&=0:
%HbcG">=KJ<W-EKho.P9qq$rM6$%K/FRb'Z2Q0u3E-UbA_>6",=H"NVNG$84aLhVbBRLn5"=mdC97QcE4LedhOQ?C-P1;N,_fmsO.
%6c`W[.SpBfjd0J#Jm_aiY\Xao\aJ&oKI*1pQU)Pqk%G,T<!X@/-FIA=hd`7#"a9Ib?@`L>eceao.UQR-=#/&/2TZG+M--oXCMQJA
%%_QSg'3O1!"U`1U"f[DPMku_behlcNg(Hi-VQkjUn^g[^8uY@GV6X6hQp'X#XaltNo?qh=Y+f"JG4'",AYJBCCh;M5M^rJ\#hoL*
%jNXu!l;W'djj1"]5LeKkDtBkCE^dIfA]!E51,G`e?O06:Q7Nbt=WPr$#8X1S'm!Ur=1&fIqsr-pnhtOb0QEV:^5J\NO'KO65VUi9
%c"e&7Vg4kqC-To/7d"Z6AQr$?FWIIdlE>;Z[`J)Sf769l;G9nL=fuH2AM(r7df\Ys(53QY<OJJcSG<pAS34pFO5qJ>%u'u0'7f"d
%lf*'80Rb\:73m9@,>K6jK\^fsq;BY#)PUP/,H-g,O!Ubf=cMt:pGcd5N-[8MCJs-ubE+cRM/GbQN-&fC4*V3t-^j7gbECoKC7b+=
%'Du5qGRpb(B1_3CEMh%q:o;=9C-6E[Snq=kq27ahMg#D7J=n)k2;E<70m(L7j7_]M=cT^eeKAC6&,cu?[jRQ#"rP?MVC>K[;@&a?
%L*S<kL2]kTis9FR4(]8k76(lL2(CkSS88dk/4#Sd'm*n/ZCW9p!lU5'3.^k,];u*:#'N#Y@QR-37@5EVXtl&<.5H\tiZ\:.hd8ML
%$D21M^_TM)WPHraggO0=5m0P]"<K))c@7Z0%jj'oR)$Y]0pd`]5UZ_niar1g,F:)GYTRA>a%U$kKank&5rlcO;>2YD=!&(udV/6E
%a_R$Cm.5W*rne6r(?UPfRS@*>:N\.lX4pbb>OQ,/.YP!4!="_=(O,Pg(YPq^]U.Bn<U/Ld@(8KS=,`OK1-9a%-`OUK#\0>bL_26?
%nfq-(8uI,QSD.I'$";.H-+H@lnKiim>Z?%/oXn+&)PJFE<6"MGT:Q&'_;N/8I;<HOS]6!m;_6Js&D$lA$tRn_aD]5)?#eP&;q2Fg
%9c*Xh\GPh\9VgMh"c4ZYK13H9>847H*R<m:oV`p;pP".Fh%(oO\e](+O5CkYpCTdi<-^&h%o)H^#YtaJi[@qp4H*OUP*tq:.b+r.
%7h$GfL/9iM6l8?0CA+!VX"G!ZfYI_W%*N%;.bYd'#sG-VKF'86%CtcYI;t,4K!]sH@u!_I&;nEjCuR1NS\Qi#Wq(1al&TK>_).`H
%%!$m'rjt_8U4$3%:'Oq7jV#"<`9Pq@!*L.8:bYih/W79!`m;SZ=[?U?)s[MP>NZR$&G+c"iC-6bfEX9Ai%B<;0NChf]TmN3brtu"
%r,k&Gmh?95LE4g7NI!kkJJB0A(759*5d9VG'RJP@mNi@ra3;8@3^&GGN+`R5oQ>gKa6`/u%Oe(8WQ![?egd;oh*jXf#%1U*CTNR(
%69\%jCC\-#aSfE'>I4+T7s\/7nNXedLS+UkMk@]Xo3_FARXajcqMYCCiic\dq-X.aVdE]\?[mDudcaCfQ^@aBqVtr_]`6u0^]3E=
%YQ++Z%ps^($3';+If7UMrq@MKrmc5MrpZh8o$>)HqY/m]q"jmV0hoF]fBZ3crqV=fJ+ME%s7#E6hu([$rs'0S\o7AM5Ps48npgT%
%TDUA-G+..~>
%AI9_PrivateDataEnd
